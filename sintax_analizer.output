Gramática

    0 $accept: in $end

    1 in: ε
    2   | in line

    3 line: n_line
    4     | exp n_line
    5     | exp_wth_bl

    6 n_line: EOL

    7 exp: instance
    8    | inc_dec
    9    | func_call
   10    | asingn

   11 exp_wth_bl: loop
   12           | conditional
   13           | exception
   14           | func

   15 func: func_dec std_block_d

   16 $@1: ε

   17 std_block_d: LEFT_BRACKET $@1 block RIGHT_BRACKET

   18 func_dec: FUNCTION_KW IDENTIFIER func_params func_type

   19 block: ε
   20      | block block_line

   21 block_line: n_line
   22           | block_exp n_line

   23 block_exp: instance
   24          | BREAK_KW
   25          | inc_dec
   26          | func_call
   27          | asingn
   28          | loop
   29          | conditional
   30          | exception
   31          | rtrn
   32          | throw_dec

   33 rtrn: RETURN_KW exp_op
   34     | RETURN_KW

   35 throw_dec: THROW_KW IDENTIFIER LEFT_PARENT STRING RIGHT_PARENT
   36          | THROW_KW IDENTIFIER LEFT_PARENT RIGHT_PARENT

   37 loop: FOR_KW LEFT_PARENT for_decl RIGHT_PARENT std_block_d
   38     | while_exp std_block_d
   39     | DO_KW std_block_d while_exp

   40 for_decl: for_vrs_dec COLON for_cond COLON for_sec

   41 for_vrs_dec: for_var
   42            | for_var COMMA for_vrs_dec

   43 for_var: IDENTIFIER OP_ASSIGN exp_op

   44 for_cond: exp_op

   45 for_sec: for_iter
   46        | for_iter COMMA for_sec

   47 for_iter: inc_dec
   48         | asingn

   49 while_exp: WHILE_KW LEFT_PARENT exp_op RIGHT_PARENT

   50 conditional: if_els_stmt
   51            | switch_stmt

   52 if_els_stmt: if_stmt
   53            | if_stmt else_stmt
   54            | if_stmt els_if_stmt

   55 $@2: ε

   56 if_stmt: IF_KW LEFT_PARENT exp_op $@2 RIGHT_PARENT std_block_d

   57 else_stmt: ELSE_KW std_block_d

   58 els_if_stmt: ELSE_KW if_stmt
   59            | els_if_stmt ELSE_KW if_stmt
   60            | els_if_stmt else_stmt

   61 $@3: ε

   62 switch_stmt: SWITCH_KW LEFT_PARENT exp_op RIGHT_PARENT LEFT_BRACKET n_line switch_block $@3 RIGHT_BRACKET
   63            | SWITCH_KW LEFT_PARENT exp_op RIGHT_PARENT LEFT_BRACKET n_line RIGHT_BRACKET

   64 switch_block: switch_line
   65             | switch_block switch_line

   66 $@4: ε

   67 switch_line: CASE_KW exp_op COLON $@4 block

   68 $@5: ε

   69 switch_line: DEFAULT_KW COLON $@5 block

   70 exception: try_catch
   71          | try_catch FINALLY_KW std_block_d

   72 $@6: ε

   73 $@7: ε

   74 try_catch: TRY_KW LEFT_BRACKET $@6 block RIGHT_BRACKET $@7 CATCH_KW LEFT_PARENT IDENTIFIER RIGHT_PARENT std_block_d

   75 func_type: COLON type
   76          | COLON VOID_KW

   77 func_params: LEFT_PARENT params_sec RIGHT_PARENT
   78            | LEFT_PARENT RIGHT_PARENT

   79 params_sec: param
   80           | param COMMA params_sec
   81           | param COMMA n_line params_sec

   82 param: IDENTIFIER COLON type
   83      | IDENTIFIER COLON type OP_ASSIGN exp_op

   84 instance: inst_id
   85         | inst_id OP_ASSIGN exp_op

   86 inst_id: type IDENTIFIER

   87 type: CHAR_KW
   88     | INT_KW
   89     | FLOAT_KW
   90     | BOOL_KW
   91     | STRING_KW

   92 value_data: CHAR
   93           | NUM
   94           | NUM_DEC
   95           | TRUE_KW
   96           | FALSE_KW
   97           | STRING
   98           | var_value

   99 var_value: IDENTIFIER
  100          | D_COLON IDENTIFIER

  101 exp_op: exp_op OP_ADD exp_op
  102       | exp_op OP_SUB exp_op
  103       | exp_op OP_MUL exp_op
  104       | exp_op OP_DIV exp_op
  105       | exp_op OP_MOD exp_op
  106       | OP_SUB exp_op
  107       | exp_op OP_GT exp_op
  108       | exp_op OP_LT exp_op
  109       | exp_op OP_GTE exp_op
  110       | exp_op OP_LTE exp_op
  111       | exp_op OP_EQ exp_op
  112       | exp_op OP_NEQ exp_op
  113       | exp_op OP_AND exp_op
  114       | exp_op OP_OR exp_op
  115       | OP_NOT exp_op
  116       | var_value OP_ASSIGN exp_op
  117       | var_value OP_ADD_ASSIGN exp_op
  118       | var_value OP_SUB_ASSIGN exp_op
  119       | var_value OP_MUL_ASSIGN exp_op
  120       | var_value OP_DIV_ASSIGN exp_op
  121       | var_value OP_MOD_ASSIGN exp_op
  122       | LEFT_PARENT exp_op RIGHT_PARENT
  123       | value_data
  124       | func_call
  125       | inc_dec

  126 inc_dec: var_value ops_inc_dec
  127        | ops_inc_dec var_value

  128 ops_inc_dec: OP_INC
  129            | OP_DEC

  130 func_call: IDENTIFIER LEFT_PARENT RIGHT_PARENT
  131          | IDENTIFIER LEFT_PARENT func_args RIGHT_PARENT

  132 func_args: func_arg
  133          | func_arg COMMA func_args
  134          | func_arg COMMA n_line func_args

  135 func_arg: IDENTIFIER COLON exp_op
  136         | exp_op

  137 asingn: var_value OP_ASSIGN exp_op
  138       | var_value OP_ADD_ASSIGN exp_op
  139       | var_value ops_asingn exp_op

  140 ops_asingn: OP_SUB_ASSIGN
  141           | OP_MUL_ASSIGN
  142           | OP_DIV_ASSIGN
  143           | OP_MOD_ASSIGN


Terminales con las reglas donde aparecen

    $end (0) 0
    error (256)
    OP_ASSIGN (258) 43 83 85 116 137
    OP_ADD_ASSIGN (259) 117 138
    OP_SUB_ASSIGN (260) 118 140
    OP_MUL_ASSIGN (261) 119 141
    OP_DIV_ASSIGN (262) 120 142
    OP_MOD_ASSIGN (263) 121 143
    OP_AND (264) 113
    OP_OR (265) 114
    OP_EQ (266) 111
    OP_NEQ (267) 112
    OP_GT (268) 107
    OP_LT (269) 108
    OP_GTE (270) 109
    OP_LTE (271) 110
    OP_ADD (272) 101
    OP_SUB (273) 102 106
    OP_MUL (274) 103
    OP_DIV (275) 104
    OP_MOD (276) 105
    OP_NOT (277) 115
    UMINUS (278)
    THROW_KW (279) 35 36
    OP_INC (280) 128
    OP_DEC (281) 129
    LEFT_PARENT (282) 35 36 37 49 56 62 63 74 77 78 122 130 131
    RIGHT_PARENT (283) 35 36 37 49 56 62 63 74 77 78 122 130 131
    LEFT_BRACKET (284) 17 62 63 74
    RIGHT_BRACKET (285) 17 62 63 74
    COMMA (286) 42 46 80 81 133 134
    D_COLON (287) 100
    COLON (288) 40 67 69 75 76 82 83 135
    FOR_KW (289) 37
    WHILE_KW (290) 49
    DO_KW (291) 39
    BREAK_KW (292) 24
    RETURN_KW (293) 33 34
    TRUE_KW (294) 95
    FALSE_KW (295) 96
    FUNCTION_KW (296) 18
    TRY_KW (297) 74
    CATCH_KW (298) 74
    FINALLY_KW (299) 71
    CHAR_KW (300) 87
    INT_KW (301) 88
    FLOAT_KW (302) 89
    BOOL_KW (303) 90
    STRING_KW (304) 91
    VOID_KW (305) 76
    IF_KW (306) 56
    ELSE_KW (307) 57 58 59
    SWITCH_KW (308) 62 63
    CASE_KW (309) 67
    DEFAULT_KW (310) 69
    CHAR <ival> (311) 92
    STRING <ival> (312) 35 97
    NUM <dval> (313) 93
    NUM_DEC <dval> (314) 94
    IDENTIFIER <sval> (315) 18 35 36 43 74 82 83 86 99 100 130 131 135
    EOL (316) 6


No terminales con las reglas donde aparecen

    $accept (62)
        on left: 0
    in (63)
        on left: 1 2
        on right: 0 2
    line (64)
        on left: 3 4 5
        on right: 2
    n_line (65)
        on left: 6
        on right: 3 4 21 22 62 63 81 134
    exp (66)
        on left: 7 8 9 10
        on right: 4
    exp_wth_bl (67)
        on left: 11 12 13 14
        on right: 5
    func (68)
        on left: 15
        on right: 14
    std_block_d (69)
        on left: 17
        on right: 15 37 38 39 56 57 71 74
    $@1 (70)
        on left: 16
        on right: 17
    func_dec (71)
        on left: 18
        on right: 15
    block (72)
        on left: 19 20
        on right: 17 20 67 69 74
    block_line (73)
        on left: 21 22
        on right: 20
    block_exp (74)
        on left: 23 24 25 26 27 28 29 30 31 32
        on right: 22
    rtrn <ival> (75)
        on left: 33 34
        on right: 31
    throw_dec (76)
        on left: 35 36
        on right: 32
    loop (77)
        on left: 37 38 39
        on right: 11 28
    for_decl (78)
        on left: 40
        on right: 37
    for_vrs_dec (79)
        on left: 41 42
        on right: 40 42
    for_var (80)
        on left: 43
        on right: 41 42
    for_cond (81)
        on left: 44
        on right: 40
    for_sec (82)
        on left: 45 46
        on right: 40 46
    for_iter (83)
        on left: 47 48
        on right: 45 46
    while_exp (84)
        on left: 49
        on right: 38 39
    conditional (85)
        on left: 50 51
        on right: 12 29
    if_els_stmt (86)
        on left: 52 53 54
        on right: 50
    if_stmt (87)
        on left: 56
        on right: 52 53 54 58 59
    $@2 (88)
        on left: 55
        on right: 56
    else_stmt (89)
        on left: 57
        on right: 53 60
    els_if_stmt (90)
        on left: 58 59 60
        on right: 54 59 60
    switch_stmt (91)
        on left: 62 63
        on right: 51
    $@3 (92)
        on left: 61
        on right: 62
    switch_block <ival> (93)
        on left: 64 65
        on right: 62 65
    switch_line <ival> (94)
        on left: 67 69
        on right: 64 65
    $@4 (95)
        on left: 66
        on right: 67
    $@5 (96)
        on left: 68
        on right: 69
    exception (97)
        on left: 70 71
        on right: 13 30
    try_catch (98)
        on left: 74
        on right: 70 71
    $@6 (99)
        on left: 72
        on right: 74
    $@7 (100)
        on left: 73
        on right: 74
    func_type <ival> (101)
        on left: 75 76
        on right: 18
    func_params (102)
        on left: 77 78
        on right: 18
    params_sec (103)
        on left: 79 80 81
        on right: 77 80 81
    param (104)
        on left: 82 83
        on right: 79 80 81
    instance (105)
        on left: 84 85
        on right: 7 23
    inst_id <ival> (106)
        on left: 86
        on right: 84 85
    type <ival> (107)
        on left: 87 88 89 90 91
        on right: 75 82 83 86
    value_data <sdata> (108)
        on left: 92 93 94 95 96 97 98
        on right: 123
    var_value <ival> (109)
        on left: 99 100
        on right: 98 116 117 118 119 120 121 126 127 137 138 139
    exp_op <sdata> (110)
        on left: 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125
        on right: 33 43 44 49 56 62 63 67 83 85 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 135 136 137 138 139
    inc_dec <ival> (111)
        on left: 126 127
        on right: 8 25 47 125
    ops_inc_dec (112)
        on left: 128 129
        on right: 126 127
    func_call <ival> (113)
        on left: 130 131
        on right: 9 26 124
    func_args (114)
        on left: 132 133 134
        on right: 131 133 134
    func_arg (115)
        on left: 135 136
        on right: 132 133 134
    asingn (116)
        on left: 137 138 139
        on right: 10 27 48
    ops_asingn (117)
        on left: 140 141 142 143
        on right: 139


Estado 0

    0 $accept: • in $end

    $default  reduce usando la regla 1 (in)

    in  ir al estado 1


Estado 1

    0 $accept: in • $end
    2 in: in • line

    $end         desplazar e ir al estado 2
    OP_INC       desplazar e ir al estado 3
    OP_DEC       desplazar e ir al estado 4
    D_COLON      desplazar e ir al estado 5
    FOR_KW       desplazar e ir al estado 6
    WHILE_KW     desplazar e ir al estado 7
    DO_KW        desplazar e ir al estado 8
    FUNCTION_KW  desplazar e ir al estado 9
    TRY_KW       desplazar e ir al estado 10
    CHAR_KW      desplazar e ir al estado 11
    INT_KW       desplazar e ir al estado 12
    FLOAT_KW     desplazar e ir al estado 13
    BOOL_KW      desplazar e ir al estado 14
    STRING_KW    desplazar e ir al estado 15
    IF_KW        desplazar e ir al estado 16
    SWITCH_KW    desplazar e ir al estado 17
    IDENTIFIER   desplazar e ir al estado 18
    EOL          desplazar e ir al estado 19

    line         ir al estado 20
    n_line       ir al estado 21
    exp          ir al estado 22
    exp_wth_bl   ir al estado 23
    func         ir al estado 24
    func_dec     ir al estado 25
    loop         ir al estado 26
    while_exp    ir al estado 27
    conditional  ir al estado 28
    if_els_stmt  ir al estado 29
    if_stmt      ir al estado 30
    switch_stmt  ir al estado 31
    exception    ir al estado 32
    try_catch    ir al estado 33
    instance     ir al estado 34
    inst_id      ir al estado 35
    type         ir al estado 36
    var_value    ir al estado 37
    inc_dec      ir al estado 38
    ops_inc_dec  ir al estado 39
    func_call    ir al estado 40
    asingn       ir al estado 41


Estado 2

    0 $accept: in $end •

    $default  aceptar


Estado 3

  128 ops_inc_dec: OP_INC •

    $default  reduce usando la regla 128 (ops_inc_dec)


Estado 4

  129 ops_inc_dec: OP_DEC •

    $default  reduce usando la regla 129 (ops_inc_dec)


Estado 5

  100 var_value: D_COLON • IDENTIFIER

    IDENTIFIER  desplazar e ir al estado 42


Estado 6

   37 loop: FOR_KW • LEFT_PARENT for_decl RIGHT_PARENT std_block_d

    LEFT_PARENT  desplazar e ir al estado 43


Estado 7

   49 while_exp: WHILE_KW • LEFT_PARENT exp_op RIGHT_PARENT

    LEFT_PARENT  desplazar e ir al estado 44


Estado 8

   39 loop: DO_KW • std_block_d while_exp

    LEFT_BRACKET  desplazar e ir al estado 45

    std_block_d  ir al estado 46


Estado 9

   18 func_dec: FUNCTION_KW • IDENTIFIER func_params func_type

    IDENTIFIER  desplazar e ir al estado 47


Estado 10

   74 try_catch: TRY_KW • LEFT_BRACKET $@6 block RIGHT_BRACKET $@7 CATCH_KW LEFT_PARENT IDENTIFIER RIGHT_PARENT std_block_d

    LEFT_BRACKET  desplazar e ir al estado 48


Estado 11

   87 type: CHAR_KW •

    $default  reduce usando la regla 87 (type)


Estado 12

   88 type: INT_KW •

    $default  reduce usando la regla 88 (type)


Estado 13

   89 type: FLOAT_KW •

    $default  reduce usando la regla 89 (type)


Estado 14

   90 type: BOOL_KW •

    $default  reduce usando la regla 90 (type)


Estado 15

   91 type: STRING_KW •

    $default  reduce usando la regla 91 (type)


Estado 16

   56 if_stmt: IF_KW • LEFT_PARENT exp_op $@2 RIGHT_PARENT std_block_d

    LEFT_PARENT  desplazar e ir al estado 49


Estado 17

   62 switch_stmt: SWITCH_KW • LEFT_PARENT exp_op RIGHT_PARENT LEFT_BRACKET n_line switch_block $@3 RIGHT_BRACKET
   63            | SWITCH_KW • LEFT_PARENT exp_op RIGHT_PARENT LEFT_BRACKET n_line RIGHT_BRACKET

    LEFT_PARENT  desplazar e ir al estado 50


Estado 18

   99 var_value: IDENTIFIER •
  130 func_call: IDENTIFIER • LEFT_PARENT RIGHT_PARENT
  131          | IDENTIFIER • LEFT_PARENT func_args RIGHT_PARENT

    LEFT_PARENT  desplazar e ir al estado 51

    $default  reduce usando la regla 99 (var_value)


Estado 19

    6 n_line: EOL •

    $default  reduce usando la regla 6 (n_line)


Estado 20

    2 in: in line •

    $default  reduce usando la regla 2 (in)


Estado 21

    3 line: n_line •

    $default  reduce usando la regla 3 (line)


Estado 22

    4 line: exp • n_line

    EOL  desplazar e ir al estado 19

    n_line  ir al estado 52


Estado 23

    5 line: exp_wth_bl •

    $default  reduce usando la regla 5 (line)


Estado 24

   14 exp_wth_bl: func •

    $default  reduce usando la regla 14 (exp_wth_bl)


Estado 25

   15 func: func_dec • std_block_d

    LEFT_BRACKET  desplazar e ir al estado 45

    std_block_d  ir al estado 53


Estado 26

   11 exp_wth_bl: loop •

    $default  reduce usando la regla 11 (exp_wth_bl)


Estado 27

   38 loop: while_exp • std_block_d

    LEFT_BRACKET  desplazar e ir al estado 45

    std_block_d  ir al estado 54


Estado 28

   12 exp_wth_bl: conditional •

    $default  reduce usando la regla 12 (exp_wth_bl)


Estado 29

   50 conditional: if_els_stmt •

    $default  reduce usando la regla 50 (conditional)


Estado 30

   52 if_els_stmt: if_stmt •
   53            | if_stmt • else_stmt
   54            | if_stmt • els_if_stmt

    ELSE_KW  desplazar e ir al estado 55

    $default  reduce usando la regla 52 (if_els_stmt)

    else_stmt    ir al estado 56
    els_if_stmt  ir al estado 57


Estado 31

   51 conditional: switch_stmt •

    $default  reduce usando la regla 51 (conditional)


Estado 32

   13 exp_wth_bl: exception •

    $default  reduce usando la regla 13 (exp_wth_bl)


Estado 33

   70 exception: try_catch •
   71          | try_catch • FINALLY_KW std_block_d

    FINALLY_KW  desplazar e ir al estado 58

    $default  reduce usando la regla 70 (exception)


Estado 34

    7 exp: instance •

    $default  reduce usando la regla 7 (exp)


Estado 35

   84 instance: inst_id •
   85         | inst_id • OP_ASSIGN exp_op

    OP_ASSIGN  desplazar e ir al estado 59

    $default  reduce usando la regla 84 (instance)


Estado 36

   86 inst_id: type • IDENTIFIER

    IDENTIFIER  desplazar e ir al estado 60


Estado 37

  126 inc_dec: var_value • ops_inc_dec
  137 asingn: var_value • OP_ASSIGN exp_op
  138       | var_value • OP_ADD_ASSIGN exp_op
  139       | var_value • ops_asingn exp_op

    OP_ASSIGN      desplazar e ir al estado 61
    OP_ADD_ASSIGN  desplazar e ir al estado 62
    OP_SUB_ASSIGN  desplazar e ir al estado 63
    OP_MUL_ASSIGN  desplazar e ir al estado 64
    OP_DIV_ASSIGN  desplazar e ir al estado 65
    OP_MOD_ASSIGN  desplazar e ir al estado 66
    OP_INC         desplazar e ir al estado 3
    OP_DEC         desplazar e ir al estado 4

    ops_inc_dec  ir al estado 67
    ops_asingn   ir al estado 68


Estado 38

    8 exp: inc_dec •

    $default  reduce usando la regla 8 (exp)


Estado 39

  127 inc_dec: ops_inc_dec • var_value

    D_COLON     desplazar e ir al estado 5
    IDENTIFIER  desplazar e ir al estado 69

    var_value  ir al estado 70


Estado 40

    9 exp: func_call •

    $default  reduce usando la regla 9 (exp)


Estado 41

   10 exp: asingn •

    $default  reduce usando la regla 10 (exp)


Estado 42

  100 var_value: D_COLON IDENTIFIER •

    $default  reduce usando la regla 100 (var_value)


Estado 43

   37 loop: FOR_KW LEFT_PARENT • for_decl RIGHT_PARENT std_block_d

    IDENTIFIER  desplazar e ir al estado 71

    for_decl     ir al estado 72
    for_vrs_dec  ir al estado 73
    for_var      ir al estado 74


Estado 44

   49 while_exp: WHILE_KW LEFT_PARENT • exp_op RIGHT_PARENT

    OP_SUB       desplazar e ir al estado 75
    OP_NOT       desplazar e ir al estado 76
    OP_INC       desplazar e ir al estado 3
    OP_DEC       desplazar e ir al estado 4
    LEFT_PARENT  desplazar e ir al estado 77
    D_COLON      desplazar e ir al estado 5
    TRUE_KW      desplazar e ir al estado 78
    FALSE_KW     desplazar e ir al estado 79
    CHAR         desplazar e ir al estado 80
    STRING       desplazar e ir al estado 81
    NUM          desplazar e ir al estado 82
    NUM_DEC      desplazar e ir al estado 83
    IDENTIFIER   desplazar e ir al estado 18

    value_data   ir al estado 84
    var_value    ir al estado 85
    exp_op       ir al estado 86
    inc_dec      ir al estado 87
    ops_inc_dec  ir al estado 39
    func_call    ir al estado 88


Estado 45

   17 std_block_d: LEFT_BRACKET • $@1 block RIGHT_BRACKET

    $default  reduce usando la regla 16 ($@1)

    $@1  ir al estado 89


Estado 46

   39 loop: DO_KW std_block_d • while_exp

    WHILE_KW  desplazar e ir al estado 7

    while_exp  ir al estado 90


Estado 47

   18 func_dec: FUNCTION_KW IDENTIFIER • func_params func_type

    LEFT_PARENT  desplazar e ir al estado 91

    func_params  ir al estado 92


Estado 48

   74 try_catch: TRY_KW LEFT_BRACKET • $@6 block RIGHT_BRACKET $@7 CATCH_KW LEFT_PARENT IDENTIFIER RIGHT_PARENT std_block_d

    $default  reduce usando la regla 72 ($@6)

    $@6  ir al estado 93


Estado 49

   56 if_stmt: IF_KW LEFT_PARENT • exp_op $@2 RIGHT_PARENT std_block_d

    OP_SUB       desplazar e ir al estado 75
    OP_NOT       desplazar e ir al estado 76
    OP_INC       desplazar e ir al estado 3
    OP_DEC       desplazar e ir al estado 4
    LEFT_PARENT  desplazar e ir al estado 77
    D_COLON      desplazar e ir al estado 5
    TRUE_KW      desplazar e ir al estado 78
    FALSE_KW     desplazar e ir al estado 79
    CHAR         desplazar e ir al estado 80
    STRING       desplazar e ir al estado 81
    NUM          desplazar e ir al estado 82
    NUM_DEC      desplazar e ir al estado 83
    IDENTIFIER   desplazar e ir al estado 18

    value_data   ir al estado 84
    var_value    ir al estado 85
    exp_op       ir al estado 94
    inc_dec      ir al estado 87
    ops_inc_dec  ir al estado 39
    func_call    ir al estado 88


Estado 50

   62 switch_stmt: SWITCH_KW LEFT_PARENT • exp_op RIGHT_PARENT LEFT_BRACKET n_line switch_block $@3 RIGHT_BRACKET
   63            | SWITCH_KW LEFT_PARENT • exp_op RIGHT_PARENT LEFT_BRACKET n_line RIGHT_BRACKET

    OP_SUB       desplazar e ir al estado 75
    OP_NOT       desplazar e ir al estado 76
    OP_INC       desplazar e ir al estado 3
    OP_DEC       desplazar e ir al estado 4
    LEFT_PARENT  desplazar e ir al estado 77
    D_COLON      desplazar e ir al estado 5
    TRUE_KW      desplazar e ir al estado 78
    FALSE_KW     desplazar e ir al estado 79
    CHAR         desplazar e ir al estado 80
    STRING       desplazar e ir al estado 81
    NUM          desplazar e ir al estado 82
    NUM_DEC      desplazar e ir al estado 83
    IDENTIFIER   desplazar e ir al estado 18

    value_data   ir al estado 84
    var_value    ir al estado 85
    exp_op       ir al estado 95
    inc_dec      ir al estado 87
    ops_inc_dec  ir al estado 39
    func_call    ir al estado 88


Estado 51

  130 func_call: IDENTIFIER LEFT_PARENT • RIGHT_PARENT
  131          | IDENTIFIER LEFT_PARENT • func_args RIGHT_PARENT

    OP_SUB        desplazar e ir al estado 75
    OP_NOT        desplazar e ir al estado 76
    OP_INC        desplazar e ir al estado 3
    OP_DEC        desplazar e ir al estado 4
    LEFT_PARENT   desplazar e ir al estado 77
    RIGHT_PARENT  desplazar e ir al estado 96
    D_COLON       desplazar e ir al estado 5
    TRUE_KW       desplazar e ir al estado 78
    FALSE_KW      desplazar e ir al estado 79
    CHAR          desplazar e ir al estado 80
    STRING        desplazar e ir al estado 81
    NUM           desplazar e ir al estado 82
    NUM_DEC       desplazar e ir al estado 83
    IDENTIFIER    desplazar e ir al estado 97

    value_data   ir al estado 84
    var_value    ir al estado 85
    exp_op       ir al estado 98
    inc_dec      ir al estado 87
    ops_inc_dec  ir al estado 39
    func_call    ir al estado 88
    func_args    ir al estado 99
    func_arg     ir al estado 100


Estado 52

    4 line: exp n_line •

    $default  reduce usando la regla 4 (line)


Estado 53

   15 func: func_dec std_block_d •

    $default  reduce usando la regla 15 (func)


Estado 54

   38 loop: while_exp std_block_d •

    $default  reduce usando la regla 38 (loop)


Estado 55

   57 else_stmt: ELSE_KW • std_block_d
   58 els_if_stmt: ELSE_KW • if_stmt

    LEFT_BRACKET  desplazar e ir al estado 45
    IF_KW         desplazar e ir al estado 16

    std_block_d  ir al estado 101
    if_stmt      ir al estado 102


Estado 56

   53 if_els_stmt: if_stmt else_stmt •

    $default  reduce usando la regla 53 (if_els_stmt)


Estado 57

   54 if_els_stmt: if_stmt els_if_stmt •
   59 els_if_stmt: els_if_stmt • ELSE_KW if_stmt
   60            | els_if_stmt • else_stmt

    ELSE_KW  desplazar e ir al estado 103

    $default  reduce usando la regla 54 (if_els_stmt)

    else_stmt  ir al estado 104


Estado 58

   71 exception: try_catch FINALLY_KW • std_block_d

    LEFT_BRACKET  desplazar e ir al estado 45

    std_block_d  ir al estado 105


Estado 59

   85 instance: inst_id OP_ASSIGN • exp_op

    OP_SUB       desplazar e ir al estado 75
    OP_NOT       desplazar e ir al estado 76
    OP_INC       desplazar e ir al estado 3
    OP_DEC       desplazar e ir al estado 4
    LEFT_PARENT  desplazar e ir al estado 77
    D_COLON      desplazar e ir al estado 5
    TRUE_KW      desplazar e ir al estado 78
    FALSE_KW     desplazar e ir al estado 79
    CHAR         desplazar e ir al estado 80
    STRING       desplazar e ir al estado 81
    NUM          desplazar e ir al estado 82
    NUM_DEC      desplazar e ir al estado 83
    IDENTIFIER   desplazar e ir al estado 18

    value_data   ir al estado 84
    var_value    ir al estado 85
    exp_op       ir al estado 106
    inc_dec      ir al estado 87
    ops_inc_dec  ir al estado 39
    func_call    ir al estado 88


Estado 60

   86 inst_id: type IDENTIFIER •

    $default  reduce usando la regla 86 (inst_id)


Estado 61

  137 asingn: var_value OP_ASSIGN • exp_op

    OP_SUB       desplazar e ir al estado 75
    OP_NOT       desplazar e ir al estado 76
    OP_INC       desplazar e ir al estado 3
    OP_DEC       desplazar e ir al estado 4
    LEFT_PARENT  desplazar e ir al estado 77
    D_COLON      desplazar e ir al estado 5
    TRUE_KW      desplazar e ir al estado 78
    FALSE_KW     desplazar e ir al estado 79
    CHAR         desplazar e ir al estado 80
    STRING       desplazar e ir al estado 81
    NUM          desplazar e ir al estado 82
    NUM_DEC      desplazar e ir al estado 83
    IDENTIFIER   desplazar e ir al estado 18

    value_data   ir al estado 84
    var_value    ir al estado 85
    exp_op       ir al estado 107
    inc_dec      ir al estado 87
    ops_inc_dec  ir al estado 39
    func_call    ir al estado 88


Estado 62

  138 asingn: var_value OP_ADD_ASSIGN • exp_op

    OP_SUB       desplazar e ir al estado 75
    OP_NOT       desplazar e ir al estado 76
    OP_INC       desplazar e ir al estado 3
    OP_DEC       desplazar e ir al estado 4
    LEFT_PARENT  desplazar e ir al estado 77
    D_COLON      desplazar e ir al estado 5
    TRUE_KW      desplazar e ir al estado 78
    FALSE_KW     desplazar e ir al estado 79
    CHAR         desplazar e ir al estado 80
    STRING       desplazar e ir al estado 81
    NUM          desplazar e ir al estado 82
    NUM_DEC      desplazar e ir al estado 83
    IDENTIFIER   desplazar e ir al estado 18

    value_data   ir al estado 84
    var_value    ir al estado 85
    exp_op       ir al estado 108
    inc_dec      ir al estado 87
    ops_inc_dec  ir al estado 39
    func_call    ir al estado 88


Estado 63

  140 ops_asingn: OP_SUB_ASSIGN •

    $default  reduce usando la regla 140 (ops_asingn)


Estado 64

  141 ops_asingn: OP_MUL_ASSIGN •

    $default  reduce usando la regla 141 (ops_asingn)


Estado 65

  142 ops_asingn: OP_DIV_ASSIGN •

    $default  reduce usando la regla 142 (ops_asingn)


Estado 66

  143 ops_asingn: OP_MOD_ASSIGN •

    $default  reduce usando la regla 143 (ops_asingn)


Estado 67

  126 inc_dec: var_value ops_inc_dec •

    $default  reduce usando la regla 126 (inc_dec)


Estado 68

  139 asingn: var_value ops_asingn • exp_op

    OP_SUB       desplazar e ir al estado 75
    OP_NOT       desplazar e ir al estado 76
    OP_INC       desplazar e ir al estado 3
    OP_DEC       desplazar e ir al estado 4
    LEFT_PARENT  desplazar e ir al estado 77
    D_COLON      desplazar e ir al estado 5
    TRUE_KW      desplazar e ir al estado 78
    FALSE_KW     desplazar e ir al estado 79
    CHAR         desplazar e ir al estado 80
    STRING       desplazar e ir al estado 81
    NUM          desplazar e ir al estado 82
    NUM_DEC      desplazar e ir al estado 83
    IDENTIFIER   desplazar e ir al estado 18

    value_data   ir al estado 84
    var_value    ir al estado 85
    exp_op       ir al estado 109
    inc_dec      ir al estado 87
    ops_inc_dec  ir al estado 39
    func_call    ir al estado 88


Estado 69

   99 var_value: IDENTIFIER •

    $default  reduce usando la regla 99 (var_value)


Estado 70

  127 inc_dec: ops_inc_dec var_value •

    $default  reduce usando la regla 127 (inc_dec)


Estado 71

   43 for_var: IDENTIFIER • OP_ASSIGN exp_op

    OP_ASSIGN  desplazar e ir al estado 110


Estado 72

   37 loop: FOR_KW LEFT_PARENT for_decl • RIGHT_PARENT std_block_d

    RIGHT_PARENT  desplazar e ir al estado 111


Estado 73

   40 for_decl: for_vrs_dec • COLON for_cond COLON for_sec

    COLON  desplazar e ir al estado 112


Estado 74

   41 for_vrs_dec: for_var •
   42            | for_var • COMMA for_vrs_dec

    COMMA  desplazar e ir al estado 113

    $default  reduce usando la regla 41 (for_vrs_dec)


Estado 75

  106 exp_op: OP_SUB • exp_op

    OP_SUB       desplazar e ir al estado 75
    OP_NOT       desplazar e ir al estado 76
    OP_INC       desplazar e ir al estado 3
    OP_DEC       desplazar e ir al estado 4
    LEFT_PARENT  desplazar e ir al estado 77
    D_COLON      desplazar e ir al estado 5
    TRUE_KW      desplazar e ir al estado 78
    FALSE_KW     desplazar e ir al estado 79
    CHAR         desplazar e ir al estado 80
    STRING       desplazar e ir al estado 81
    NUM          desplazar e ir al estado 82
    NUM_DEC      desplazar e ir al estado 83
    IDENTIFIER   desplazar e ir al estado 18

    value_data   ir al estado 84
    var_value    ir al estado 85
    exp_op       ir al estado 114
    inc_dec      ir al estado 87
    ops_inc_dec  ir al estado 39
    func_call    ir al estado 88


Estado 76

  115 exp_op: OP_NOT • exp_op

    OP_SUB       desplazar e ir al estado 75
    OP_NOT       desplazar e ir al estado 76
    OP_INC       desplazar e ir al estado 3
    OP_DEC       desplazar e ir al estado 4
    LEFT_PARENT  desplazar e ir al estado 77
    D_COLON      desplazar e ir al estado 5
    TRUE_KW      desplazar e ir al estado 78
    FALSE_KW     desplazar e ir al estado 79
    CHAR         desplazar e ir al estado 80
    STRING       desplazar e ir al estado 81
    NUM          desplazar e ir al estado 82
    NUM_DEC      desplazar e ir al estado 83
    IDENTIFIER   desplazar e ir al estado 18

    value_data   ir al estado 84
    var_value    ir al estado 85
    exp_op       ir al estado 115
    inc_dec      ir al estado 87
    ops_inc_dec  ir al estado 39
    func_call    ir al estado 88


Estado 77

  122 exp_op: LEFT_PARENT • exp_op RIGHT_PARENT

    OP_SUB       desplazar e ir al estado 75
    OP_NOT       desplazar e ir al estado 76
    OP_INC       desplazar e ir al estado 3
    OP_DEC       desplazar e ir al estado 4
    LEFT_PARENT  desplazar e ir al estado 77
    D_COLON      desplazar e ir al estado 5
    TRUE_KW      desplazar e ir al estado 78
    FALSE_KW     desplazar e ir al estado 79
    CHAR         desplazar e ir al estado 80
    STRING       desplazar e ir al estado 81
    NUM          desplazar e ir al estado 82
    NUM_DEC      desplazar e ir al estado 83
    IDENTIFIER   desplazar e ir al estado 18

    value_data   ir al estado 84
    var_value    ir al estado 85
    exp_op       ir al estado 116
    inc_dec      ir al estado 87
    ops_inc_dec  ir al estado 39
    func_call    ir al estado 88


Estado 78

   95 value_data: TRUE_KW •

    $default  reduce usando la regla 95 (value_data)


Estado 79

   96 value_data: FALSE_KW •

    $default  reduce usando la regla 96 (value_data)


Estado 80

   92 value_data: CHAR •

    $default  reduce usando la regla 92 (value_data)


Estado 81

   97 value_data: STRING •

    $default  reduce usando la regla 97 (value_data)


Estado 82

   93 value_data: NUM •

    $default  reduce usando la regla 93 (value_data)


Estado 83

   94 value_data: NUM_DEC •

    $default  reduce usando la regla 94 (value_data)


Estado 84

  123 exp_op: value_data •

    $default  reduce usando la regla 123 (exp_op)


Estado 85

   98 value_data: var_value •
  116 exp_op: var_value • OP_ASSIGN exp_op
  117       | var_value • OP_ADD_ASSIGN exp_op
  118       | var_value • OP_SUB_ASSIGN exp_op
  119       | var_value • OP_MUL_ASSIGN exp_op
  120       | var_value • OP_DIV_ASSIGN exp_op
  121       | var_value • OP_MOD_ASSIGN exp_op
  126 inc_dec: var_value • ops_inc_dec

    OP_ASSIGN      desplazar e ir al estado 117
    OP_ADD_ASSIGN  desplazar e ir al estado 118
    OP_SUB_ASSIGN  desplazar e ir al estado 119
    OP_MUL_ASSIGN  desplazar e ir al estado 120
    OP_DIV_ASSIGN  desplazar e ir al estado 121
    OP_MOD_ASSIGN  desplazar e ir al estado 122
    OP_INC         desplazar e ir al estado 3
    OP_DEC         desplazar e ir al estado 4

    $default  reduce usando la regla 98 (value_data)

    ops_inc_dec  ir al estado 67


Estado 86

   49 while_exp: WHILE_KW LEFT_PARENT exp_op • RIGHT_PARENT
  101 exp_op: exp_op • OP_ADD exp_op
  102       | exp_op • OP_SUB exp_op
  103       | exp_op • OP_MUL exp_op
  104       | exp_op • OP_DIV exp_op
  105       | exp_op • OP_MOD exp_op
  107       | exp_op • OP_GT exp_op
  108       | exp_op • OP_LT exp_op
  109       | exp_op • OP_GTE exp_op
  110       | exp_op • OP_LTE exp_op
  111       | exp_op • OP_EQ exp_op
  112       | exp_op • OP_NEQ exp_op
  113       | exp_op • OP_AND exp_op
  114       | exp_op • OP_OR exp_op

    OP_AND        desplazar e ir al estado 123
    OP_OR         desplazar e ir al estado 124
    OP_EQ         desplazar e ir al estado 125
    OP_NEQ        desplazar e ir al estado 126
    OP_GT         desplazar e ir al estado 127
    OP_LT         desplazar e ir al estado 128
    OP_GTE        desplazar e ir al estado 129
    OP_LTE        desplazar e ir al estado 130
    OP_ADD        desplazar e ir al estado 131
    OP_SUB        desplazar e ir al estado 132
    OP_MUL        desplazar e ir al estado 133
    OP_DIV        desplazar e ir al estado 134
    OP_MOD        desplazar e ir al estado 135
    RIGHT_PARENT  desplazar e ir al estado 136


Estado 87

  125 exp_op: inc_dec •

    $default  reduce usando la regla 125 (exp_op)


Estado 88

  124 exp_op: func_call •

    $default  reduce usando la regla 124 (exp_op)


Estado 89

   17 std_block_d: LEFT_BRACKET $@1 • block RIGHT_BRACKET

    $default  reduce usando la regla 19 (block)

    block  ir al estado 137


Estado 90

   39 loop: DO_KW std_block_d while_exp •

    $default  reduce usando la regla 39 (loop)


Estado 91

   77 func_params: LEFT_PARENT • params_sec RIGHT_PARENT
   78            | LEFT_PARENT • RIGHT_PARENT

    RIGHT_PARENT  desplazar e ir al estado 138
    IDENTIFIER    desplazar e ir al estado 139

    params_sec  ir al estado 140
    param       ir al estado 141


Estado 92

   18 func_dec: FUNCTION_KW IDENTIFIER func_params • func_type

    COLON  desplazar e ir al estado 142

    func_type  ir al estado 143


Estado 93

   74 try_catch: TRY_KW LEFT_BRACKET $@6 • block RIGHT_BRACKET $@7 CATCH_KW LEFT_PARENT IDENTIFIER RIGHT_PARENT std_block_d

    $default  reduce usando la regla 19 (block)

    block  ir al estado 144


Estado 94

   56 if_stmt: IF_KW LEFT_PARENT exp_op • $@2 RIGHT_PARENT std_block_d
  101 exp_op: exp_op • OP_ADD exp_op
  102       | exp_op • OP_SUB exp_op
  103       | exp_op • OP_MUL exp_op
  104       | exp_op • OP_DIV exp_op
  105       | exp_op • OP_MOD exp_op
  107       | exp_op • OP_GT exp_op
  108       | exp_op • OP_LT exp_op
  109       | exp_op • OP_GTE exp_op
  110       | exp_op • OP_LTE exp_op
  111       | exp_op • OP_EQ exp_op
  112       | exp_op • OP_NEQ exp_op
  113       | exp_op • OP_AND exp_op
  114       | exp_op • OP_OR exp_op

    OP_AND  desplazar e ir al estado 123
    OP_OR   desplazar e ir al estado 124
    OP_EQ   desplazar e ir al estado 125
    OP_NEQ  desplazar e ir al estado 126
    OP_GT   desplazar e ir al estado 127
    OP_LT   desplazar e ir al estado 128
    OP_GTE  desplazar e ir al estado 129
    OP_LTE  desplazar e ir al estado 130
    OP_ADD  desplazar e ir al estado 131
    OP_SUB  desplazar e ir al estado 132
    OP_MUL  desplazar e ir al estado 133
    OP_DIV  desplazar e ir al estado 134
    OP_MOD  desplazar e ir al estado 135

    $default  reduce usando la regla 55 ($@2)

    $@2  ir al estado 145


Estado 95

   62 switch_stmt: SWITCH_KW LEFT_PARENT exp_op • RIGHT_PARENT LEFT_BRACKET n_line switch_block $@3 RIGHT_BRACKET
   63            | SWITCH_KW LEFT_PARENT exp_op • RIGHT_PARENT LEFT_BRACKET n_line RIGHT_BRACKET
  101 exp_op: exp_op • OP_ADD exp_op
  102       | exp_op • OP_SUB exp_op
  103       | exp_op • OP_MUL exp_op
  104       | exp_op • OP_DIV exp_op
  105       | exp_op • OP_MOD exp_op
  107       | exp_op • OP_GT exp_op
  108       | exp_op • OP_LT exp_op
  109       | exp_op • OP_GTE exp_op
  110       | exp_op • OP_LTE exp_op
  111       | exp_op • OP_EQ exp_op
  112       | exp_op • OP_NEQ exp_op
  113       | exp_op • OP_AND exp_op
  114       | exp_op • OP_OR exp_op

    OP_AND        desplazar e ir al estado 123
    OP_OR         desplazar e ir al estado 124
    OP_EQ         desplazar e ir al estado 125
    OP_NEQ        desplazar e ir al estado 126
    OP_GT         desplazar e ir al estado 127
    OP_LT         desplazar e ir al estado 128
    OP_GTE        desplazar e ir al estado 129
    OP_LTE        desplazar e ir al estado 130
    OP_ADD        desplazar e ir al estado 131
    OP_SUB        desplazar e ir al estado 132
    OP_MUL        desplazar e ir al estado 133
    OP_DIV        desplazar e ir al estado 134
    OP_MOD        desplazar e ir al estado 135
    RIGHT_PARENT  desplazar e ir al estado 146


Estado 96

  130 func_call: IDENTIFIER LEFT_PARENT RIGHT_PARENT •

    $default  reduce usando la regla 130 (func_call)


Estado 97

   99 var_value: IDENTIFIER •
  130 func_call: IDENTIFIER • LEFT_PARENT RIGHT_PARENT
  131          | IDENTIFIER • LEFT_PARENT func_args RIGHT_PARENT
  135 func_arg: IDENTIFIER • COLON exp_op

    LEFT_PARENT  desplazar e ir al estado 51
    COLON        desplazar e ir al estado 147

    $default  reduce usando la regla 99 (var_value)


Estado 98

  101 exp_op: exp_op • OP_ADD exp_op
  102       | exp_op • OP_SUB exp_op
  103       | exp_op • OP_MUL exp_op
  104       | exp_op • OP_DIV exp_op
  105       | exp_op • OP_MOD exp_op
  107       | exp_op • OP_GT exp_op
  108       | exp_op • OP_LT exp_op
  109       | exp_op • OP_GTE exp_op
  110       | exp_op • OP_LTE exp_op
  111       | exp_op • OP_EQ exp_op
  112       | exp_op • OP_NEQ exp_op
  113       | exp_op • OP_AND exp_op
  114       | exp_op • OP_OR exp_op
  136 func_arg: exp_op •

    OP_AND  desplazar e ir al estado 123
    OP_OR   desplazar e ir al estado 124
    OP_EQ   desplazar e ir al estado 125
    OP_NEQ  desplazar e ir al estado 126
    OP_GT   desplazar e ir al estado 127
    OP_LT   desplazar e ir al estado 128
    OP_GTE  desplazar e ir al estado 129
    OP_LTE  desplazar e ir al estado 130
    OP_ADD  desplazar e ir al estado 131
    OP_SUB  desplazar e ir al estado 132
    OP_MUL  desplazar e ir al estado 133
    OP_DIV  desplazar e ir al estado 134
    OP_MOD  desplazar e ir al estado 135

    $default  reduce usando la regla 136 (func_arg)


Estado 99

  131 func_call: IDENTIFIER LEFT_PARENT func_args • RIGHT_PARENT

    RIGHT_PARENT  desplazar e ir al estado 148


Estado 100

  132 func_args: func_arg •
  133          | func_arg • COMMA func_args
  134          | func_arg • COMMA n_line func_args

    COMMA  desplazar e ir al estado 149

    $default  reduce usando la regla 132 (func_args)


Estado 101

   57 else_stmt: ELSE_KW std_block_d •

    $default  reduce usando la regla 57 (else_stmt)


Estado 102

   58 els_if_stmt: ELSE_KW if_stmt •

    $default  reduce usando la regla 58 (els_if_stmt)


Estado 103

   57 else_stmt: ELSE_KW • std_block_d
   59 els_if_stmt: els_if_stmt ELSE_KW • if_stmt

    LEFT_BRACKET  desplazar e ir al estado 45
    IF_KW         desplazar e ir al estado 16

    std_block_d  ir al estado 101
    if_stmt      ir al estado 150


Estado 104

   60 els_if_stmt: els_if_stmt else_stmt •

    $default  reduce usando la regla 60 (els_if_stmt)


Estado 105

   71 exception: try_catch FINALLY_KW std_block_d •

    $default  reduce usando la regla 71 (exception)


Estado 106

   85 instance: inst_id OP_ASSIGN exp_op •
  101 exp_op: exp_op • OP_ADD exp_op
  102       | exp_op • OP_SUB exp_op
  103       | exp_op • OP_MUL exp_op
  104       | exp_op • OP_DIV exp_op
  105       | exp_op • OP_MOD exp_op
  107       | exp_op • OP_GT exp_op
  108       | exp_op • OP_LT exp_op
  109       | exp_op • OP_GTE exp_op
  110       | exp_op • OP_LTE exp_op
  111       | exp_op • OP_EQ exp_op
  112       | exp_op • OP_NEQ exp_op
  113       | exp_op • OP_AND exp_op
  114       | exp_op • OP_OR exp_op

    OP_AND  desplazar e ir al estado 123
    OP_OR   desplazar e ir al estado 124
    OP_EQ   desplazar e ir al estado 125
    OP_NEQ  desplazar e ir al estado 126
    OP_GT   desplazar e ir al estado 127
    OP_LT   desplazar e ir al estado 128
    OP_GTE  desplazar e ir al estado 129
    OP_LTE  desplazar e ir al estado 130
    OP_ADD  desplazar e ir al estado 131
    OP_SUB  desplazar e ir al estado 132
    OP_MUL  desplazar e ir al estado 133
    OP_DIV  desplazar e ir al estado 134
    OP_MOD  desplazar e ir al estado 135

    $default  reduce usando la regla 85 (instance)


Estado 107

  101 exp_op: exp_op • OP_ADD exp_op
  102       | exp_op • OP_SUB exp_op
  103       | exp_op • OP_MUL exp_op
  104       | exp_op • OP_DIV exp_op
  105       | exp_op • OP_MOD exp_op
  107       | exp_op • OP_GT exp_op
  108       | exp_op • OP_LT exp_op
  109       | exp_op • OP_GTE exp_op
  110       | exp_op • OP_LTE exp_op
  111       | exp_op • OP_EQ exp_op
  112       | exp_op • OP_NEQ exp_op
  113       | exp_op • OP_AND exp_op
  114       | exp_op • OP_OR exp_op
  137 asingn: var_value OP_ASSIGN exp_op •

    OP_AND  desplazar e ir al estado 123
    OP_OR   desplazar e ir al estado 124
    OP_EQ   desplazar e ir al estado 125
    OP_NEQ  desplazar e ir al estado 126
    OP_GT   desplazar e ir al estado 127
    OP_LT   desplazar e ir al estado 128
    OP_GTE  desplazar e ir al estado 129
    OP_LTE  desplazar e ir al estado 130
    OP_ADD  desplazar e ir al estado 131
    OP_SUB  desplazar e ir al estado 132
    OP_MUL  desplazar e ir al estado 133
    OP_DIV  desplazar e ir al estado 134
    OP_MOD  desplazar e ir al estado 135

    $default  reduce usando la regla 137 (asingn)


Estado 108

  101 exp_op: exp_op • OP_ADD exp_op
  102       | exp_op • OP_SUB exp_op
  103       | exp_op • OP_MUL exp_op
  104       | exp_op • OP_DIV exp_op
  105       | exp_op • OP_MOD exp_op
  107       | exp_op • OP_GT exp_op
  108       | exp_op • OP_LT exp_op
  109       | exp_op • OP_GTE exp_op
  110       | exp_op • OP_LTE exp_op
  111       | exp_op • OP_EQ exp_op
  112       | exp_op • OP_NEQ exp_op
  113       | exp_op • OP_AND exp_op
  114       | exp_op • OP_OR exp_op
  138 asingn: var_value OP_ADD_ASSIGN exp_op •

    OP_AND  desplazar e ir al estado 123
    OP_OR   desplazar e ir al estado 124
    OP_EQ   desplazar e ir al estado 125
    OP_NEQ  desplazar e ir al estado 126
    OP_GT   desplazar e ir al estado 127
    OP_LT   desplazar e ir al estado 128
    OP_GTE  desplazar e ir al estado 129
    OP_LTE  desplazar e ir al estado 130
    OP_ADD  desplazar e ir al estado 131
    OP_SUB  desplazar e ir al estado 132
    OP_MUL  desplazar e ir al estado 133
    OP_DIV  desplazar e ir al estado 134
    OP_MOD  desplazar e ir al estado 135

    $default  reduce usando la regla 138 (asingn)


Estado 109

  101 exp_op: exp_op • OP_ADD exp_op
  102       | exp_op • OP_SUB exp_op
  103       | exp_op • OP_MUL exp_op
  104       | exp_op • OP_DIV exp_op
  105       | exp_op • OP_MOD exp_op
  107       | exp_op • OP_GT exp_op
  108       | exp_op • OP_LT exp_op
  109       | exp_op • OP_GTE exp_op
  110       | exp_op • OP_LTE exp_op
  111       | exp_op • OP_EQ exp_op
  112       | exp_op • OP_NEQ exp_op
  113       | exp_op • OP_AND exp_op
  114       | exp_op • OP_OR exp_op
  139 asingn: var_value ops_asingn exp_op •

    OP_AND  desplazar e ir al estado 123
    OP_OR   desplazar e ir al estado 124
    OP_EQ   desplazar e ir al estado 125
    OP_NEQ  desplazar e ir al estado 126
    OP_GT   desplazar e ir al estado 127
    OP_LT   desplazar e ir al estado 128
    OP_GTE  desplazar e ir al estado 129
    OP_LTE  desplazar e ir al estado 130
    OP_ADD  desplazar e ir al estado 131
    OP_SUB  desplazar e ir al estado 132
    OP_MUL  desplazar e ir al estado 133
    OP_DIV  desplazar e ir al estado 134
    OP_MOD  desplazar e ir al estado 135

    $default  reduce usando la regla 139 (asingn)


Estado 110

   43 for_var: IDENTIFIER OP_ASSIGN • exp_op

    OP_SUB       desplazar e ir al estado 75
    OP_NOT       desplazar e ir al estado 76
    OP_INC       desplazar e ir al estado 3
    OP_DEC       desplazar e ir al estado 4
    LEFT_PARENT  desplazar e ir al estado 77
    D_COLON      desplazar e ir al estado 5
    TRUE_KW      desplazar e ir al estado 78
    FALSE_KW     desplazar e ir al estado 79
    CHAR         desplazar e ir al estado 80
    STRING       desplazar e ir al estado 81
    NUM          desplazar e ir al estado 82
    NUM_DEC      desplazar e ir al estado 83
    IDENTIFIER   desplazar e ir al estado 18

    value_data   ir al estado 84
    var_value    ir al estado 85
    exp_op       ir al estado 151
    inc_dec      ir al estado 87
    ops_inc_dec  ir al estado 39
    func_call    ir al estado 88


Estado 111

   37 loop: FOR_KW LEFT_PARENT for_decl RIGHT_PARENT • std_block_d

    LEFT_BRACKET  desplazar e ir al estado 45

    std_block_d  ir al estado 152


Estado 112

   40 for_decl: for_vrs_dec COLON • for_cond COLON for_sec

    OP_SUB       desplazar e ir al estado 75
    OP_NOT       desplazar e ir al estado 76
    OP_INC       desplazar e ir al estado 3
    OP_DEC       desplazar e ir al estado 4
    LEFT_PARENT  desplazar e ir al estado 77
    D_COLON      desplazar e ir al estado 5
    TRUE_KW      desplazar e ir al estado 78
    FALSE_KW     desplazar e ir al estado 79
    CHAR         desplazar e ir al estado 80
    STRING       desplazar e ir al estado 81
    NUM          desplazar e ir al estado 82
    NUM_DEC      desplazar e ir al estado 83
    IDENTIFIER   desplazar e ir al estado 18

    for_cond     ir al estado 153
    value_data   ir al estado 84
    var_value    ir al estado 85
    exp_op       ir al estado 154
    inc_dec      ir al estado 87
    ops_inc_dec  ir al estado 39
    func_call    ir al estado 88


Estado 113

   42 for_vrs_dec: for_var COMMA • for_vrs_dec

    IDENTIFIER  desplazar e ir al estado 71

    for_vrs_dec  ir al estado 155
    for_var      ir al estado 74


Estado 114

  101 exp_op: exp_op • OP_ADD exp_op
  102       | exp_op • OP_SUB exp_op
  103       | exp_op • OP_MUL exp_op
  104       | exp_op • OP_DIV exp_op
  105       | exp_op • OP_MOD exp_op
  106       | OP_SUB exp_op •
  107       | exp_op • OP_GT exp_op
  108       | exp_op • OP_LT exp_op
  109       | exp_op • OP_GTE exp_op
  110       | exp_op • OP_LTE exp_op
  111       | exp_op • OP_EQ exp_op
  112       | exp_op • OP_NEQ exp_op
  113       | exp_op • OP_AND exp_op
  114       | exp_op • OP_OR exp_op

    $default  reduce usando la regla 106 (exp_op)


Estado 115

  101 exp_op: exp_op • OP_ADD exp_op
  102       | exp_op • OP_SUB exp_op
  103       | exp_op • OP_MUL exp_op
  104       | exp_op • OP_DIV exp_op
  105       | exp_op • OP_MOD exp_op
  107       | exp_op • OP_GT exp_op
  108       | exp_op • OP_LT exp_op
  109       | exp_op • OP_GTE exp_op
  110       | exp_op • OP_LTE exp_op
  111       | exp_op • OP_EQ exp_op
  112       | exp_op • OP_NEQ exp_op
  113       | exp_op • OP_AND exp_op
  114       | exp_op • OP_OR exp_op
  115       | OP_NOT exp_op •

    $default  reduce usando la regla 115 (exp_op)


Estado 116

  101 exp_op: exp_op • OP_ADD exp_op
  102       | exp_op • OP_SUB exp_op
  103       | exp_op • OP_MUL exp_op
  104       | exp_op • OP_DIV exp_op
  105       | exp_op • OP_MOD exp_op
  107       | exp_op • OP_GT exp_op
  108       | exp_op • OP_LT exp_op
  109       | exp_op • OP_GTE exp_op
  110       | exp_op • OP_LTE exp_op
  111       | exp_op • OP_EQ exp_op
  112       | exp_op • OP_NEQ exp_op
  113       | exp_op • OP_AND exp_op
  114       | exp_op • OP_OR exp_op
  122       | LEFT_PARENT exp_op • RIGHT_PARENT

    OP_AND        desplazar e ir al estado 123
    OP_OR         desplazar e ir al estado 124
    OP_EQ         desplazar e ir al estado 125
    OP_NEQ        desplazar e ir al estado 126
    OP_GT         desplazar e ir al estado 127
    OP_LT         desplazar e ir al estado 128
    OP_GTE        desplazar e ir al estado 129
    OP_LTE        desplazar e ir al estado 130
    OP_ADD        desplazar e ir al estado 131
    OP_SUB        desplazar e ir al estado 132
    OP_MUL        desplazar e ir al estado 133
    OP_DIV        desplazar e ir al estado 134
    OP_MOD        desplazar e ir al estado 135
    RIGHT_PARENT  desplazar e ir al estado 156


Estado 117

  116 exp_op: var_value OP_ASSIGN • exp_op

    OP_SUB       desplazar e ir al estado 75
    OP_NOT       desplazar e ir al estado 76
    OP_INC       desplazar e ir al estado 3
    OP_DEC       desplazar e ir al estado 4
    LEFT_PARENT  desplazar e ir al estado 77
    D_COLON      desplazar e ir al estado 5
    TRUE_KW      desplazar e ir al estado 78
    FALSE_KW     desplazar e ir al estado 79
    CHAR         desplazar e ir al estado 80
    STRING       desplazar e ir al estado 81
    NUM          desplazar e ir al estado 82
    NUM_DEC      desplazar e ir al estado 83
    IDENTIFIER   desplazar e ir al estado 18

    value_data   ir al estado 84
    var_value    ir al estado 85
    exp_op       ir al estado 157
    inc_dec      ir al estado 87
    ops_inc_dec  ir al estado 39
    func_call    ir al estado 88


Estado 118

  117 exp_op: var_value OP_ADD_ASSIGN • exp_op

    OP_SUB       desplazar e ir al estado 75
    OP_NOT       desplazar e ir al estado 76
    OP_INC       desplazar e ir al estado 3
    OP_DEC       desplazar e ir al estado 4
    LEFT_PARENT  desplazar e ir al estado 77
    D_COLON      desplazar e ir al estado 5
    TRUE_KW      desplazar e ir al estado 78
    FALSE_KW     desplazar e ir al estado 79
    CHAR         desplazar e ir al estado 80
    STRING       desplazar e ir al estado 81
    NUM          desplazar e ir al estado 82
    NUM_DEC      desplazar e ir al estado 83
    IDENTIFIER   desplazar e ir al estado 18

    value_data   ir al estado 84
    var_value    ir al estado 85
    exp_op       ir al estado 158
    inc_dec      ir al estado 87
    ops_inc_dec  ir al estado 39
    func_call    ir al estado 88


Estado 119

  118 exp_op: var_value OP_SUB_ASSIGN • exp_op

    OP_SUB       desplazar e ir al estado 75
    OP_NOT       desplazar e ir al estado 76
    OP_INC       desplazar e ir al estado 3
    OP_DEC       desplazar e ir al estado 4
    LEFT_PARENT  desplazar e ir al estado 77
    D_COLON      desplazar e ir al estado 5
    TRUE_KW      desplazar e ir al estado 78
    FALSE_KW     desplazar e ir al estado 79
    CHAR         desplazar e ir al estado 80
    STRING       desplazar e ir al estado 81
    NUM          desplazar e ir al estado 82
    NUM_DEC      desplazar e ir al estado 83
    IDENTIFIER   desplazar e ir al estado 18

    value_data   ir al estado 84
    var_value    ir al estado 85
    exp_op       ir al estado 159
    inc_dec      ir al estado 87
    ops_inc_dec  ir al estado 39
    func_call    ir al estado 88


Estado 120

  119 exp_op: var_value OP_MUL_ASSIGN • exp_op

    OP_SUB       desplazar e ir al estado 75
    OP_NOT       desplazar e ir al estado 76
    OP_INC       desplazar e ir al estado 3
    OP_DEC       desplazar e ir al estado 4
    LEFT_PARENT  desplazar e ir al estado 77
    D_COLON      desplazar e ir al estado 5
    TRUE_KW      desplazar e ir al estado 78
    FALSE_KW     desplazar e ir al estado 79
    CHAR         desplazar e ir al estado 80
    STRING       desplazar e ir al estado 81
    NUM          desplazar e ir al estado 82
    NUM_DEC      desplazar e ir al estado 83
    IDENTIFIER   desplazar e ir al estado 18

    value_data   ir al estado 84
    var_value    ir al estado 85
    exp_op       ir al estado 160
    inc_dec      ir al estado 87
    ops_inc_dec  ir al estado 39
    func_call    ir al estado 88


Estado 121

  120 exp_op: var_value OP_DIV_ASSIGN • exp_op

    OP_SUB       desplazar e ir al estado 75
    OP_NOT       desplazar e ir al estado 76
    OP_INC       desplazar e ir al estado 3
    OP_DEC       desplazar e ir al estado 4
    LEFT_PARENT  desplazar e ir al estado 77
    D_COLON      desplazar e ir al estado 5
    TRUE_KW      desplazar e ir al estado 78
    FALSE_KW     desplazar e ir al estado 79
    CHAR         desplazar e ir al estado 80
    STRING       desplazar e ir al estado 81
    NUM          desplazar e ir al estado 82
    NUM_DEC      desplazar e ir al estado 83
    IDENTIFIER   desplazar e ir al estado 18

    value_data   ir al estado 84
    var_value    ir al estado 85
    exp_op       ir al estado 161
    inc_dec      ir al estado 87
    ops_inc_dec  ir al estado 39
    func_call    ir al estado 88


Estado 122

  121 exp_op: var_value OP_MOD_ASSIGN • exp_op

    OP_SUB       desplazar e ir al estado 75
    OP_NOT       desplazar e ir al estado 76
    OP_INC       desplazar e ir al estado 3
    OP_DEC       desplazar e ir al estado 4
    LEFT_PARENT  desplazar e ir al estado 77
    D_COLON      desplazar e ir al estado 5
    TRUE_KW      desplazar e ir al estado 78
    FALSE_KW     desplazar e ir al estado 79
    CHAR         desplazar e ir al estado 80
    STRING       desplazar e ir al estado 81
    NUM          desplazar e ir al estado 82
    NUM_DEC      desplazar e ir al estado 83
    IDENTIFIER   desplazar e ir al estado 18

    value_data   ir al estado 84
    var_value    ir al estado 85
    exp_op       ir al estado 162
    inc_dec      ir al estado 87
    ops_inc_dec  ir al estado 39
    func_call    ir al estado 88


Estado 123

  113 exp_op: exp_op OP_AND • exp_op

    OP_SUB       desplazar e ir al estado 75
    OP_NOT       desplazar e ir al estado 76
    OP_INC       desplazar e ir al estado 3
    OP_DEC       desplazar e ir al estado 4
    LEFT_PARENT  desplazar e ir al estado 77
    D_COLON      desplazar e ir al estado 5
    TRUE_KW      desplazar e ir al estado 78
    FALSE_KW     desplazar e ir al estado 79
    CHAR         desplazar e ir al estado 80
    STRING       desplazar e ir al estado 81
    NUM          desplazar e ir al estado 82
    NUM_DEC      desplazar e ir al estado 83
    IDENTIFIER   desplazar e ir al estado 18

    value_data   ir al estado 84
    var_value    ir al estado 85
    exp_op       ir al estado 163
    inc_dec      ir al estado 87
    ops_inc_dec  ir al estado 39
    func_call    ir al estado 88


Estado 124

  114 exp_op: exp_op OP_OR • exp_op

    OP_SUB       desplazar e ir al estado 75
    OP_NOT       desplazar e ir al estado 76
    OP_INC       desplazar e ir al estado 3
    OP_DEC       desplazar e ir al estado 4
    LEFT_PARENT  desplazar e ir al estado 77
    D_COLON      desplazar e ir al estado 5
    TRUE_KW      desplazar e ir al estado 78
    FALSE_KW     desplazar e ir al estado 79
    CHAR         desplazar e ir al estado 80
    STRING       desplazar e ir al estado 81
    NUM          desplazar e ir al estado 82
    NUM_DEC      desplazar e ir al estado 83
    IDENTIFIER   desplazar e ir al estado 18

    value_data   ir al estado 84
    var_value    ir al estado 85
    exp_op       ir al estado 164
    inc_dec      ir al estado 87
    ops_inc_dec  ir al estado 39
    func_call    ir al estado 88


Estado 125

  111 exp_op: exp_op OP_EQ • exp_op

    OP_SUB       desplazar e ir al estado 75
    OP_NOT       desplazar e ir al estado 76
    OP_INC       desplazar e ir al estado 3
    OP_DEC       desplazar e ir al estado 4
    LEFT_PARENT  desplazar e ir al estado 77
    D_COLON      desplazar e ir al estado 5
    TRUE_KW      desplazar e ir al estado 78
    FALSE_KW     desplazar e ir al estado 79
    CHAR         desplazar e ir al estado 80
    STRING       desplazar e ir al estado 81
    NUM          desplazar e ir al estado 82
    NUM_DEC      desplazar e ir al estado 83
    IDENTIFIER   desplazar e ir al estado 18

    value_data   ir al estado 84
    var_value    ir al estado 85
    exp_op       ir al estado 165
    inc_dec      ir al estado 87
    ops_inc_dec  ir al estado 39
    func_call    ir al estado 88


Estado 126

  112 exp_op: exp_op OP_NEQ • exp_op

    OP_SUB       desplazar e ir al estado 75
    OP_NOT       desplazar e ir al estado 76
    OP_INC       desplazar e ir al estado 3
    OP_DEC       desplazar e ir al estado 4
    LEFT_PARENT  desplazar e ir al estado 77
    D_COLON      desplazar e ir al estado 5
    TRUE_KW      desplazar e ir al estado 78
    FALSE_KW     desplazar e ir al estado 79
    CHAR         desplazar e ir al estado 80
    STRING       desplazar e ir al estado 81
    NUM          desplazar e ir al estado 82
    NUM_DEC      desplazar e ir al estado 83
    IDENTIFIER   desplazar e ir al estado 18

    value_data   ir al estado 84
    var_value    ir al estado 85
    exp_op       ir al estado 166
    inc_dec      ir al estado 87
    ops_inc_dec  ir al estado 39
    func_call    ir al estado 88


Estado 127

  107 exp_op: exp_op OP_GT • exp_op

    OP_SUB       desplazar e ir al estado 75
    OP_NOT       desplazar e ir al estado 76
    OP_INC       desplazar e ir al estado 3
    OP_DEC       desplazar e ir al estado 4
    LEFT_PARENT  desplazar e ir al estado 77
    D_COLON      desplazar e ir al estado 5
    TRUE_KW      desplazar e ir al estado 78
    FALSE_KW     desplazar e ir al estado 79
    CHAR         desplazar e ir al estado 80
    STRING       desplazar e ir al estado 81
    NUM          desplazar e ir al estado 82
    NUM_DEC      desplazar e ir al estado 83
    IDENTIFIER   desplazar e ir al estado 18

    value_data   ir al estado 84
    var_value    ir al estado 85
    exp_op       ir al estado 167
    inc_dec      ir al estado 87
    ops_inc_dec  ir al estado 39
    func_call    ir al estado 88


Estado 128

  108 exp_op: exp_op OP_LT • exp_op

    OP_SUB       desplazar e ir al estado 75
    OP_NOT       desplazar e ir al estado 76
    OP_INC       desplazar e ir al estado 3
    OP_DEC       desplazar e ir al estado 4
    LEFT_PARENT  desplazar e ir al estado 77
    D_COLON      desplazar e ir al estado 5
    TRUE_KW      desplazar e ir al estado 78
    FALSE_KW     desplazar e ir al estado 79
    CHAR         desplazar e ir al estado 80
    STRING       desplazar e ir al estado 81
    NUM          desplazar e ir al estado 82
    NUM_DEC      desplazar e ir al estado 83
    IDENTIFIER   desplazar e ir al estado 18

    value_data   ir al estado 84
    var_value    ir al estado 85
    exp_op       ir al estado 168
    inc_dec      ir al estado 87
    ops_inc_dec  ir al estado 39
    func_call    ir al estado 88


Estado 129

  109 exp_op: exp_op OP_GTE • exp_op

    OP_SUB       desplazar e ir al estado 75
    OP_NOT       desplazar e ir al estado 76
    OP_INC       desplazar e ir al estado 3
    OP_DEC       desplazar e ir al estado 4
    LEFT_PARENT  desplazar e ir al estado 77
    D_COLON      desplazar e ir al estado 5
    TRUE_KW      desplazar e ir al estado 78
    FALSE_KW     desplazar e ir al estado 79
    CHAR         desplazar e ir al estado 80
    STRING       desplazar e ir al estado 81
    NUM          desplazar e ir al estado 82
    NUM_DEC      desplazar e ir al estado 83
    IDENTIFIER   desplazar e ir al estado 18

    value_data   ir al estado 84
    var_value    ir al estado 85
    exp_op       ir al estado 169
    inc_dec      ir al estado 87
    ops_inc_dec  ir al estado 39
    func_call    ir al estado 88


Estado 130

  110 exp_op: exp_op OP_LTE • exp_op

    OP_SUB       desplazar e ir al estado 75
    OP_NOT       desplazar e ir al estado 76
    OP_INC       desplazar e ir al estado 3
    OP_DEC       desplazar e ir al estado 4
    LEFT_PARENT  desplazar e ir al estado 77
    D_COLON      desplazar e ir al estado 5
    TRUE_KW      desplazar e ir al estado 78
    FALSE_KW     desplazar e ir al estado 79
    CHAR         desplazar e ir al estado 80
    STRING       desplazar e ir al estado 81
    NUM          desplazar e ir al estado 82
    NUM_DEC      desplazar e ir al estado 83
    IDENTIFIER   desplazar e ir al estado 18

    value_data   ir al estado 84
    var_value    ir al estado 85
    exp_op       ir al estado 170
    inc_dec      ir al estado 87
    ops_inc_dec  ir al estado 39
    func_call    ir al estado 88


Estado 131

  101 exp_op: exp_op OP_ADD • exp_op

    OP_SUB       desplazar e ir al estado 75
    OP_NOT       desplazar e ir al estado 76
    OP_INC       desplazar e ir al estado 3
    OP_DEC       desplazar e ir al estado 4
    LEFT_PARENT  desplazar e ir al estado 77
    D_COLON      desplazar e ir al estado 5
    TRUE_KW      desplazar e ir al estado 78
    FALSE_KW     desplazar e ir al estado 79
    CHAR         desplazar e ir al estado 80
    STRING       desplazar e ir al estado 81
    NUM          desplazar e ir al estado 82
    NUM_DEC      desplazar e ir al estado 83
    IDENTIFIER   desplazar e ir al estado 18

    value_data   ir al estado 84
    var_value    ir al estado 85
    exp_op       ir al estado 171
    inc_dec      ir al estado 87
    ops_inc_dec  ir al estado 39
    func_call    ir al estado 88


Estado 132

  102 exp_op: exp_op OP_SUB • exp_op

    OP_SUB       desplazar e ir al estado 75
    OP_NOT       desplazar e ir al estado 76
    OP_INC       desplazar e ir al estado 3
    OP_DEC       desplazar e ir al estado 4
    LEFT_PARENT  desplazar e ir al estado 77
    D_COLON      desplazar e ir al estado 5
    TRUE_KW      desplazar e ir al estado 78
    FALSE_KW     desplazar e ir al estado 79
    CHAR         desplazar e ir al estado 80
    STRING       desplazar e ir al estado 81
    NUM          desplazar e ir al estado 82
    NUM_DEC      desplazar e ir al estado 83
    IDENTIFIER   desplazar e ir al estado 18

    value_data   ir al estado 84
    var_value    ir al estado 85
    exp_op       ir al estado 172
    inc_dec      ir al estado 87
    ops_inc_dec  ir al estado 39
    func_call    ir al estado 88


Estado 133

  103 exp_op: exp_op OP_MUL • exp_op

    OP_SUB       desplazar e ir al estado 75
    OP_NOT       desplazar e ir al estado 76
    OP_INC       desplazar e ir al estado 3
    OP_DEC       desplazar e ir al estado 4
    LEFT_PARENT  desplazar e ir al estado 77
    D_COLON      desplazar e ir al estado 5
    TRUE_KW      desplazar e ir al estado 78
    FALSE_KW     desplazar e ir al estado 79
    CHAR         desplazar e ir al estado 80
    STRING       desplazar e ir al estado 81
    NUM          desplazar e ir al estado 82
    NUM_DEC      desplazar e ir al estado 83
    IDENTIFIER   desplazar e ir al estado 18

    value_data   ir al estado 84
    var_value    ir al estado 85
    exp_op       ir al estado 173
    inc_dec      ir al estado 87
    ops_inc_dec  ir al estado 39
    func_call    ir al estado 88


Estado 134

  104 exp_op: exp_op OP_DIV • exp_op

    OP_SUB       desplazar e ir al estado 75
    OP_NOT       desplazar e ir al estado 76
    OP_INC       desplazar e ir al estado 3
    OP_DEC       desplazar e ir al estado 4
    LEFT_PARENT  desplazar e ir al estado 77
    D_COLON      desplazar e ir al estado 5
    TRUE_KW      desplazar e ir al estado 78
    FALSE_KW     desplazar e ir al estado 79
    CHAR         desplazar e ir al estado 80
    STRING       desplazar e ir al estado 81
    NUM          desplazar e ir al estado 82
    NUM_DEC      desplazar e ir al estado 83
    IDENTIFIER   desplazar e ir al estado 18

    value_data   ir al estado 84
    var_value    ir al estado 85
    exp_op       ir al estado 174
    inc_dec      ir al estado 87
    ops_inc_dec  ir al estado 39
    func_call    ir al estado 88


Estado 135

  105 exp_op: exp_op OP_MOD • exp_op

    OP_SUB       desplazar e ir al estado 75
    OP_NOT       desplazar e ir al estado 76
    OP_INC       desplazar e ir al estado 3
    OP_DEC       desplazar e ir al estado 4
    LEFT_PARENT  desplazar e ir al estado 77
    D_COLON      desplazar e ir al estado 5
    TRUE_KW      desplazar e ir al estado 78
    FALSE_KW     desplazar e ir al estado 79
    CHAR         desplazar e ir al estado 80
    STRING       desplazar e ir al estado 81
    NUM          desplazar e ir al estado 82
    NUM_DEC      desplazar e ir al estado 83
    IDENTIFIER   desplazar e ir al estado 18

    value_data   ir al estado 84
    var_value    ir al estado 85
    exp_op       ir al estado 175
    inc_dec      ir al estado 87
    ops_inc_dec  ir al estado 39
    func_call    ir al estado 88


Estado 136

   49 while_exp: WHILE_KW LEFT_PARENT exp_op RIGHT_PARENT •

    $default  reduce usando la regla 49 (while_exp)


Estado 137

   17 std_block_d: LEFT_BRACKET $@1 block • RIGHT_BRACKET
   20 block: block • block_line

    THROW_KW       desplazar e ir al estado 176
    OP_INC         desplazar e ir al estado 3
    OP_DEC         desplazar e ir al estado 4
    RIGHT_BRACKET  desplazar e ir al estado 177
    D_COLON        desplazar e ir al estado 5
    FOR_KW         desplazar e ir al estado 6
    WHILE_KW       desplazar e ir al estado 7
    DO_KW          desplazar e ir al estado 8
    BREAK_KW       desplazar e ir al estado 178
    RETURN_KW      desplazar e ir al estado 179
    TRY_KW         desplazar e ir al estado 10
    CHAR_KW        desplazar e ir al estado 11
    INT_KW         desplazar e ir al estado 12
    FLOAT_KW       desplazar e ir al estado 13
    BOOL_KW        desplazar e ir al estado 14
    STRING_KW      desplazar e ir al estado 15
    IF_KW          desplazar e ir al estado 16
    SWITCH_KW      desplazar e ir al estado 17
    IDENTIFIER     desplazar e ir al estado 18
    EOL            desplazar e ir al estado 19

    n_line       ir al estado 180
    block_line   ir al estado 181
    block_exp    ir al estado 182
    rtrn         ir al estado 183
    throw_dec    ir al estado 184
    loop         ir al estado 185
    while_exp    ir al estado 27
    conditional  ir al estado 186
    if_els_stmt  ir al estado 29
    if_stmt      ir al estado 30
    switch_stmt  ir al estado 31
    exception    ir al estado 187
    try_catch    ir al estado 33
    instance     ir al estado 188
    inst_id      ir al estado 35
    type         ir al estado 36
    var_value    ir al estado 37
    inc_dec      ir al estado 189
    ops_inc_dec  ir al estado 39
    func_call    ir al estado 190
    asingn       ir al estado 191


Estado 138

   78 func_params: LEFT_PARENT RIGHT_PARENT •

    $default  reduce usando la regla 78 (func_params)


Estado 139

   82 param: IDENTIFIER • COLON type
   83      | IDENTIFIER • COLON type OP_ASSIGN exp_op

    COLON  desplazar e ir al estado 192


Estado 140

   77 func_params: LEFT_PARENT params_sec • RIGHT_PARENT

    RIGHT_PARENT  desplazar e ir al estado 193


Estado 141

   79 params_sec: param •
   80           | param • COMMA params_sec
   81           | param • COMMA n_line params_sec

    COMMA  desplazar e ir al estado 194

    $default  reduce usando la regla 79 (params_sec)


Estado 142

   75 func_type: COLON • type
   76          | COLON • VOID_KW

    CHAR_KW    desplazar e ir al estado 11
    INT_KW     desplazar e ir al estado 12
    FLOAT_KW   desplazar e ir al estado 13
    BOOL_KW    desplazar e ir al estado 14
    STRING_KW  desplazar e ir al estado 15
    VOID_KW    desplazar e ir al estado 195

    type  ir al estado 196


Estado 143

   18 func_dec: FUNCTION_KW IDENTIFIER func_params func_type •

    $default  reduce usando la regla 18 (func_dec)


Estado 144

   20 block: block • block_line
   74 try_catch: TRY_KW LEFT_BRACKET $@6 block • RIGHT_BRACKET $@7 CATCH_KW LEFT_PARENT IDENTIFIER RIGHT_PARENT std_block_d

    THROW_KW       desplazar e ir al estado 176
    OP_INC         desplazar e ir al estado 3
    OP_DEC         desplazar e ir al estado 4
    RIGHT_BRACKET  desplazar e ir al estado 197
    D_COLON        desplazar e ir al estado 5
    FOR_KW         desplazar e ir al estado 6
    WHILE_KW       desplazar e ir al estado 7
    DO_KW          desplazar e ir al estado 8
    BREAK_KW       desplazar e ir al estado 178
    RETURN_KW      desplazar e ir al estado 179
    TRY_KW         desplazar e ir al estado 10
    CHAR_KW        desplazar e ir al estado 11
    INT_KW         desplazar e ir al estado 12
    FLOAT_KW       desplazar e ir al estado 13
    BOOL_KW        desplazar e ir al estado 14
    STRING_KW      desplazar e ir al estado 15
    IF_KW          desplazar e ir al estado 16
    SWITCH_KW      desplazar e ir al estado 17
    IDENTIFIER     desplazar e ir al estado 18
    EOL            desplazar e ir al estado 19

    n_line       ir al estado 180
    block_line   ir al estado 181
    block_exp    ir al estado 182
    rtrn         ir al estado 183
    throw_dec    ir al estado 184
    loop         ir al estado 185
    while_exp    ir al estado 27
    conditional  ir al estado 186
    if_els_stmt  ir al estado 29
    if_stmt      ir al estado 30
    switch_stmt  ir al estado 31
    exception    ir al estado 187
    try_catch    ir al estado 33
    instance     ir al estado 188
    inst_id      ir al estado 35
    type         ir al estado 36
    var_value    ir al estado 37
    inc_dec      ir al estado 189
    ops_inc_dec  ir al estado 39
    func_call    ir al estado 190
    asingn       ir al estado 191


Estado 145

   56 if_stmt: IF_KW LEFT_PARENT exp_op $@2 • RIGHT_PARENT std_block_d

    RIGHT_PARENT  desplazar e ir al estado 198


Estado 146

   62 switch_stmt: SWITCH_KW LEFT_PARENT exp_op RIGHT_PARENT • LEFT_BRACKET n_line switch_block $@3 RIGHT_BRACKET
   63            | SWITCH_KW LEFT_PARENT exp_op RIGHT_PARENT • LEFT_BRACKET n_line RIGHT_BRACKET

    LEFT_BRACKET  desplazar e ir al estado 199


Estado 147

  135 func_arg: IDENTIFIER COLON • exp_op

    OP_SUB       desplazar e ir al estado 75
    OP_NOT       desplazar e ir al estado 76
    OP_INC       desplazar e ir al estado 3
    OP_DEC       desplazar e ir al estado 4
    LEFT_PARENT  desplazar e ir al estado 77
    D_COLON      desplazar e ir al estado 5
    TRUE_KW      desplazar e ir al estado 78
    FALSE_KW     desplazar e ir al estado 79
    CHAR         desplazar e ir al estado 80
    STRING       desplazar e ir al estado 81
    NUM          desplazar e ir al estado 82
    NUM_DEC      desplazar e ir al estado 83
    IDENTIFIER   desplazar e ir al estado 18

    value_data   ir al estado 84
    var_value    ir al estado 85
    exp_op       ir al estado 200
    inc_dec      ir al estado 87
    ops_inc_dec  ir al estado 39
    func_call    ir al estado 88


Estado 148

  131 func_call: IDENTIFIER LEFT_PARENT func_args RIGHT_PARENT •

    $default  reduce usando la regla 131 (func_call)


Estado 149

  133 func_args: func_arg COMMA • func_args
  134          | func_arg COMMA • n_line func_args

    OP_SUB       desplazar e ir al estado 75
    OP_NOT       desplazar e ir al estado 76
    OP_INC       desplazar e ir al estado 3
    OP_DEC       desplazar e ir al estado 4
    LEFT_PARENT  desplazar e ir al estado 77
    D_COLON      desplazar e ir al estado 5
    TRUE_KW      desplazar e ir al estado 78
    FALSE_KW     desplazar e ir al estado 79
    CHAR         desplazar e ir al estado 80
    STRING       desplazar e ir al estado 81
    NUM          desplazar e ir al estado 82
    NUM_DEC      desplazar e ir al estado 83
    IDENTIFIER   desplazar e ir al estado 97
    EOL          desplazar e ir al estado 19

    n_line       ir al estado 201
    value_data   ir al estado 84
    var_value    ir al estado 85
    exp_op       ir al estado 98
    inc_dec      ir al estado 87
    ops_inc_dec  ir al estado 39
    func_call    ir al estado 88
    func_args    ir al estado 202
    func_arg     ir al estado 100


Estado 150

   59 els_if_stmt: els_if_stmt ELSE_KW if_stmt •

    $default  reduce usando la regla 59 (els_if_stmt)


Estado 151

   43 for_var: IDENTIFIER OP_ASSIGN exp_op •
  101 exp_op: exp_op • OP_ADD exp_op
  102       | exp_op • OP_SUB exp_op
  103       | exp_op • OP_MUL exp_op
  104       | exp_op • OP_DIV exp_op
  105       | exp_op • OP_MOD exp_op
  107       | exp_op • OP_GT exp_op
  108       | exp_op • OP_LT exp_op
  109       | exp_op • OP_GTE exp_op
  110       | exp_op • OP_LTE exp_op
  111       | exp_op • OP_EQ exp_op
  112       | exp_op • OP_NEQ exp_op
  113       | exp_op • OP_AND exp_op
  114       | exp_op • OP_OR exp_op

    OP_AND  desplazar e ir al estado 123
    OP_OR   desplazar e ir al estado 124
    OP_EQ   desplazar e ir al estado 125
    OP_NEQ  desplazar e ir al estado 126
    OP_GT   desplazar e ir al estado 127
    OP_LT   desplazar e ir al estado 128
    OP_GTE  desplazar e ir al estado 129
    OP_LTE  desplazar e ir al estado 130
    OP_ADD  desplazar e ir al estado 131
    OP_SUB  desplazar e ir al estado 132
    OP_MUL  desplazar e ir al estado 133
    OP_DIV  desplazar e ir al estado 134
    OP_MOD  desplazar e ir al estado 135

    $default  reduce usando la regla 43 (for_var)


Estado 152

   37 loop: FOR_KW LEFT_PARENT for_decl RIGHT_PARENT std_block_d •

    $default  reduce usando la regla 37 (loop)


Estado 153

   40 for_decl: for_vrs_dec COLON for_cond • COLON for_sec

    COLON  desplazar e ir al estado 203


Estado 154

   44 for_cond: exp_op •
  101 exp_op: exp_op • OP_ADD exp_op
  102       | exp_op • OP_SUB exp_op
  103       | exp_op • OP_MUL exp_op
  104       | exp_op • OP_DIV exp_op
  105       | exp_op • OP_MOD exp_op
  107       | exp_op • OP_GT exp_op
  108       | exp_op • OP_LT exp_op
  109       | exp_op • OP_GTE exp_op
  110       | exp_op • OP_LTE exp_op
  111       | exp_op • OP_EQ exp_op
  112       | exp_op • OP_NEQ exp_op
  113       | exp_op • OP_AND exp_op
  114       | exp_op • OP_OR exp_op

    OP_AND  desplazar e ir al estado 123
    OP_OR   desplazar e ir al estado 124
    OP_EQ   desplazar e ir al estado 125
    OP_NEQ  desplazar e ir al estado 126
    OP_GT   desplazar e ir al estado 127
    OP_LT   desplazar e ir al estado 128
    OP_GTE  desplazar e ir al estado 129
    OP_LTE  desplazar e ir al estado 130
    OP_ADD  desplazar e ir al estado 131
    OP_SUB  desplazar e ir al estado 132
    OP_MUL  desplazar e ir al estado 133
    OP_DIV  desplazar e ir al estado 134
    OP_MOD  desplazar e ir al estado 135

    $default  reduce usando la regla 44 (for_cond)


Estado 155

   42 for_vrs_dec: for_var COMMA for_vrs_dec •

    $default  reduce usando la regla 42 (for_vrs_dec)


Estado 156

  122 exp_op: LEFT_PARENT exp_op RIGHT_PARENT •

    $default  reduce usando la regla 122 (exp_op)


Estado 157

  101 exp_op: exp_op • OP_ADD exp_op
  102       | exp_op • OP_SUB exp_op
  103       | exp_op • OP_MUL exp_op
  104       | exp_op • OP_DIV exp_op
  105       | exp_op • OP_MOD exp_op
  107       | exp_op • OP_GT exp_op
  108       | exp_op • OP_LT exp_op
  109       | exp_op • OP_GTE exp_op
  110       | exp_op • OP_LTE exp_op
  111       | exp_op • OP_EQ exp_op
  112       | exp_op • OP_NEQ exp_op
  113       | exp_op • OP_AND exp_op
  114       | exp_op • OP_OR exp_op
  116       | var_value OP_ASSIGN exp_op •

    OP_AND  desplazar e ir al estado 123
    OP_OR   desplazar e ir al estado 124
    OP_EQ   desplazar e ir al estado 125
    OP_NEQ  desplazar e ir al estado 126
    OP_GT   desplazar e ir al estado 127
    OP_LT   desplazar e ir al estado 128
    OP_GTE  desplazar e ir al estado 129
    OP_LTE  desplazar e ir al estado 130
    OP_ADD  desplazar e ir al estado 131
    OP_SUB  desplazar e ir al estado 132
    OP_MUL  desplazar e ir al estado 133
    OP_DIV  desplazar e ir al estado 134
    OP_MOD  desplazar e ir al estado 135

    $default  reduce usando la regla 116 (exp_op)


Estado 158

  101 exp_op: exp_op • OP_ADD exp_op
  102       | exp_op • OP_SUB exp_op
  103       | exp_op • OP_MUL exp_op
  104       | exp_op • OP_DIV exp_op
  105       | exp_op • OP_MOD exp_op
  107       | exp_op • OP_GT exp_op
  108       | exp_op • OP_LT exp_op
  109       | exp_op • OP_GTE exp_op
  110       | exp_op • OP_LTE exp_op
  111       | exp_op • OP_EQ exp_op
  112       | exp_op • OP_NEQ exp_op
  113       | exp_op • OP_AND exp_op
  114       | exp_op • OP_OR exp_op
  117       | var_value OP_ADD_ASSIGN exp_op •

    OP_AND  desplazar e ir al estado 123
    OP_OR   desplazar e ir al estado 124
    OP_EQ   desplazar e ir al estado 125
    OP_NEQ  desplazar e ir al estado 126
    OP_GT   desplazar e ir al estado 127
    OP_LT   desplazar e ir al estado 128
    OP_GTE  desplazar e ir al estado 129
    OP_LTE  desplazar e ir al estado 130
    OP_ADD  desplazar e ir al estado 131
    OP_SUB  desplazar e ir al estado 132
    OP_MUL  desplazar e ir al estado 133
    OP_DIV  desplazar e ir al estado 134
    OP_MOD  desplazar e ir al estado 135

    $default  reduce usando la regla 117 (exp_op)


Estado 159

  101 exp_op: exp_op • OP_ADD exp_op
  102       | exp_op • OP_SUB exp_op
  103       | exp_op • OP_MUL exp_op
  104       | exp_op • OP_DIV exp_op
  105       | exp_op • OP_MOD exp_op
  107       | exp_op • OP_GT exp_op
  108       | exp_op • OP_LT exp_op
  109       | exp_op • OP_GTE exp_op
  110       | exp_op • OP_LTE exp_op
  111       | exp_op • OP_EQ exp_op
  112       | exp_op • OP_NEQ exp_op
  113       | exp_op • OP_AND exp_op
  114       | exp_op • OP_OR exp_op
  118       | var_value OP_SUB_ASSIGN exp_op •

    OP_AND  desplazar e ir al estado 123
    OP_OR   desplazar e ir al estado 124
    OP_EQ   desplazar e ir al estado 125
    OP_NEQ  desplazar e ir al estado 126
    OP_GT   desplazar e ir al estado 127
    OP_LT   desplazar e ir al estado 128
    OP_GTE  desplazar e ir al estado 129
    OP_LTE  desplazar e ir al estado 130
    OP_ADD  desplazar e ir al estado 131
    OP_SUB  desplazar e ir al estado 132
    OP_MUL  desplazar e ir al estado 133
    OP_DIV  desplazar e ir al estado 134
    OP_MOD  desplazar e ir al estado 135

    $default  reduce usando la regla 118 (exp_op)


Estado 160

  101 exp_op: exp_op • OP_ADD exp_op
  102       | exp_op • OP_SUB exp_op
  103       | exp_op • OP_MUL exp_op
  104       | exp_op • OP_DIV exp_op
  105       | exp_op • OP_MOD exp_op
  107       | exp_op • OP_GT exp_op
  108       | exp_op • OP_LT exp_op
  109       | exp_op • OP_GTE exp_op
  110       | exp_op • OP_LTE exp_op
  111       | exp_op • OP_EQ exp_op
  112       | exp_op • OP_NEQ exp_op
  113       | exp_op • OP_AND exp_op
  114       | exp_op • OP_OR exp_op
  119       | var_value OP_MUL_ASSIGN exp_op •

    OP_AND  desplazar e ir al estado 123
    OP_OR   desplazar e ir al estado 124
    OP_EQ   desplazar e ir al estado 125
    OP_NEQ  desplazar e ir al estado 126
    OP_GT   desplazar e ir al estado 127
    OP_LT   desplazar e ir al estado 128
    OP_GTE  desplazar e ir al estado 129
    OP_LTE  desplazar e ir al estado 130
    OP_ADD  desplazar e ir al estado 131
    OP_SUB  desplazar e ir al estado 132
    OP_MUL  desplazar e ir al estado 133
    OP_DIV  desplazar e ir al estado 134
    OP_MOD  desplazar e ir al estado 135

    $default  reduce usando la regla 119 (exp_op)


Estado 161

  101 exp_op: exp_op • OP_ADD exp_op
  102       | exp_op • OP_SUB exp_op
  103       | exp_op • OP_MUL exp_op
  104       | exp_op • OP_DIV exp_op
  105       | exp_op • OP_MOD exp_op
  107       | exp_op • OP_GT exp_op
  108       | exp_op • OP_LT exp_op
  109       | exp_op • OP_GTE exp_op
  110       | exp_op • OP_LTE exp_op
  111       | exp_op • OP_EQ exp_op
  112       | exp_op • OP_NEQ exp_op
  113       | exp_op • OP_AND exp_op
  114       | exp_op • OP_OR exp_op
  120       | var_value OP_DIV_ASSIGN exp_op •

    OP_AND  desplazar e ir al estado 123
    OP_OR   desplazar e ir al estado 124
    OP_EQ   desplazar e ir al estado 125
    OP_NEQ  desplazar e ir al estado 126
    OP_GT   desplazar e ir al estado 127
    OP_LT   desplazar e ir al estado 128
    OP_GTE  desplazar e ir al estado 129
    OP_LTE  desplazar e ir al estado 130
    OP_ADD  desplazar e ir al estado 131
    OP_SUB  desplazar e ir al estado 132
    OP_MUL  desplazar e ir al estado 133
    OP_DIV  desplazar e ir al estado 134
    OP_MOD  desplazar e ir al estado 135

    $default  reduce usando la regla 120 (exp_op)


Estado 162

  101 exp_op: exp_op • OP_ADD exp_op
  102       | exp_op • OP_SUB exp_op
  103       | exp_op • OP_MUL exp_op
  104       | exp_op • OP_DIV exp_op
  105       | exp_op • OP_MOD exp_op
  107       | exp_op • OP_GT exp_op
  108       | exp_op • OP_LT exp_op
  109       | exp_op • OP_GTE exp_op
  110       | exp_op • OP_LTE exp_op
  111       | exp_op • OP_EQ exp_op
  112       | exp_op • OP_NEQ exp_op
  113       | exp_op • OP_AND exp_op
  114       | exp_op • OP_OR exp_op
  121       | var_value OP_MOD_ASSIGN exp_op •

    OP_AND  desplazar e ir al estado 123
    OP_OR   desplazar e ir al estado 124
    OP_EQ   desplazar e ir al estado 125
    OP_NEQ  desplazar e ir al estado 126
    OP_GT   desplazar e ir al estado 127
    OP_LT   desplazar e ir al estado 128
    OP_GTE  desplazar e ir al estado 129
    OP_LTE  desplazar e ir al estado 130
    OP_ADD  desplazar e ir al estado 131
    OP_SUB  desplazar e ir al estado 132
    OP_MUL  desplazar e ir al estado 133
    OP_DIV  desplazar e ir al estado 134
    OP_MOD  desplazar e ir al estado 135

    $default  reduce usando la regla 121 (exp_op)


Estado 163

  101 exp_op: exp_op • OP_ADD exp_op
  102       | exp_op • OP_SUB exp_op
  103       | exp_op • OP_MUL exp_op
  104       | exp_op • OP_DIV exp_op
  105       | exp_op • OP_MOD exp_op
  107       | exp_op • OP_GT exp_op
  108       | exp_op • OP_LT exp_op
  109       | exp_op • OP_GTE exp_op
  110       | exp_op • OP_LTE exp_op
  111       | exp_op • OP_EQ exp_op
  112       | exp_op • OP_NEQ exp_op
  113       | exp_op • OP_AND exp_op
  113       | exp_op OP_AND exp_op •
  114       | exp_op • OP_OR exp_op

    OP_EQ   desplazar e ir al estado 125
    OP_NEQ  desplazar e ir al estado 126
    OP_GT   desplazar e ir al estado 127
    OP_LT   desplazar e ir al estado 128
    OP_GTE  desplazar e ir al estado 129
    OP_LTE  desplazar e ir al estado 130
    OP_ADD  desplazar e ir al estado 131
    OP_SUB  desplazar e ir al estado 132
    OP_MUL  desplazar e ir al estado 133
    OP_DIV  desplazar e ir al estado 134
    OP_MOD  desplazar e ir al estado 135

    $default  reduce usando la regla 113 (exp_op)


Estado 164

  101 exp_op: exp_op • OP_ADD exp_op
  102       | exp_op • OP_SUB exp_op
  103       | exp_op • OP_MUL exp_op
  104       | exp_op • OP_DIV exp_op
  105       | exp_op • OP_MOD exp_op
  107       | exp_op • OP_GT exp_op
  108       | exp_op • OP_LT exp_op
  109       | exp_op • OP_GTE exp_op
  110       | exp_op • OP_LTE exp_op
  111       | exp_op • OP_EQ exp_op
  112       | exp_op • OP_NEQ exp_op
  113       | exp_op • OP_AND exp_op
  114       | exp_op • OP_OR exp_op
  114       | exp_op OP_OR exp_op •

    OP_EQ   desplazar e ir al estado 125
    OP_NEQ  desplazar e ir al estado 126
    OP_GT   desplazar e ir al estado 127
    OP_LT   desplazar e ir al estado 128
    OP_GTE  desplazar e ir al estado 129
    OP_LTE  desplazar e ir al estado 130
    OP_ADD  desplazar e ir al estado 131
    OP_SUB  desplazar e ir al estado 132
    OP_MUL  desplazar e ir al estado 133
    OP_DIV  desplazar e ir al estado 134
    OP_MOD  desplazar e ir al estado 135

    $default  reduce usando la regla 114 (exp_op)


Estado 165

  101 exp_op: exp_op • OP_ADD exp_op
  102       | exp_op • OP_SUB exp_op
  103       | exp_op • OP_MUL exp_op
  104       | exp_op • OP_DIV exp_op
  105       | exp_op • OP_MOD exp_op
  107       | exp_op • OP_GT exp_op
  108       | exp_op • OP_LT exp_op
  109       | exp_op • OP_GTE exp_op
  110       | exp_op • OP_LTE exp_op
  111       | exp_op • OP_EQ exp_op
  111       | exp_op OP_EQ exp_op •
  112       | exp_op • OP_NEQ exp_op
  113       | exp_op • OP_AND exp_op
  114       | exp_op • OP_OR exp_op

    OP_GT   desplazar e ir al estado 127
    OP_LT   desplazar e ir al estado 128
    OP_GTE  desplazar e ir al estado 129
    OP_LTE  desplazar e ir al estado 130
    OP_ADD  desplazar e ir al estado 131
    OP_SUB  desplazar e ir al estado 132
    OP_MUL  desplazar e ir al estado 133
    OP_DIV  desplazar e ir al estado 134
    OP_MOD  desplazar e ir al estado 135

    $default  reduce usando la regla 111 (exp_op)


Estado 166

  101 exp_op: exp_op • OP_ADD exp_op
  102       | exp_op • OP_SUB exp_op
  103       | exp_op • OP_MUL exp_op
  104       | exp_op • OP_DIV exp_op
  105       | exp_op • OP_MOD exp_op
  107       | exp_op • OP_GT exp_op
  108       | exp_op • OP_LT exp_op
  109       | exp_op • OP_GTE exp_op
  110       | exp_op • OP_LTE exp_op
  111       | exp_op • OP_EQ exp_op
  112       | exp_op • OP_NEQ exp_op
  112       | exp_op OP_NEQ exp_op •
  113       | exp_op • OP_AND exp_op
  114       | exp_op • OP_OR exp_op

    OP_GT   desplazar e ir al estado 127
    OP_LT   desplazar e ir al estado 128
    OP_GTE  desplazar e ir al estado 129
    OP_LTE  desplazar e ir al estado 130
    OP_ADD  desplazar e ir al estado 131
    OP_SUB  desplazar e ir al estado 132
    OP_MUL  desplazar e ir al estado 133
    OP_DIV  desplazar e ir al estado 134
    OP_MOD  desplazar e ir al estado 135

    $default  reduce usando la regla 112 (exp_op)


Estado 167

  101 exp_op: exp_op • OP_ADD exp_op
  102       | exp_op • OP_SUB exp_op
  103       | exp_op • OP_MUL exp_op
  104       | exp_op • OP_DIV exp_op
  105       | exp_op • OP_MOD exp_op
  107       | exp_op • OP_GT exp_op
  107       | exp_op OP_GT exp_op •
  108       | exp_op • OP_LT exp_op
  109       | exp_op • OP_GTE exp_op
  110       | exp_op • OP_LTE exp_op
  111       | exp_op • OP_EQ exp_op
  112       | exp_op • OP_NEQ exp_op
  113       | exp_op • OP_AND exp_op
  114       | exp_op • OP_OR exp_op

    OP_ADD  desplazar e ir al estado 131
    OP_SUB  desplazar e ir al estado 132
    OP_MUL  desplazar e ir al estado 133
    OP_DIV  desplazar e ir al estado 134
    OP_MOD  desplazar e ir al estado 135

    $default  reduce usando la regla 107 (exp_op)


Estado 168

  101 exp_op: exp_op • OP_ADD exp_op
  102       | exp_op • OP_SUB exp_op
  103       | exp_op • OP_MUL exp_op
  104       | exp_op • OP_DIV exp_op
  105       | exp_op • OP_MOD exp_op
  107       | exp_op • OP_GT exp_op
  108       | exp_op • OP_LT exp_op
  108       | exp_op OP_LT exp_op •
  109       | exp_op • OP_GTE exp_op
  110       | exp_op • OP_LTE exp_op
  111       | exp_op • OP_EQ exp_op
  112       | exp_op • OP_NEQ exp_op
  113       | exp_op • OP_AND exp_op
  114       | exp_op • OP_OR exp_op

    OP_ADD  desplazar e ir al estado 131
    OP_SUB  desplazar e ir al estado 132
    OP_MUL  desplazar e ir al estado 133
    OP_DIV  desplazar e ir al estado 134
    OP_MOD  desplazar e ir al estado 135

    $default  reduce usando la regla 108 (exp_op)


Estado 169

  101 exp_op: exp_op • OP_ADD exp_op
  102       | exp_op • OP_SUB exp_op
  103       | exp_op • OP_MUL exp_op
  104       | exp_op • OP_DIV exp_op
  105       | exp_op • OP_MOD exp_op
  107       | exp_op • OP_GT exp_op
  108       | exp_op • OP_LT exp_op
  109       | exp_op • OP_GTE exp_op
  109       | exp_op OP_GTE exp_op •
  110       | exp_op • OP_LTE exp_op
  111       | exp_op • OP_EQ exp_op
  112       | exp_op • OP_NEQ exp_op
  113       | exp_op • OP_AND exp_op
  114       | exp_op • OP_OR exp_op

    OP_ADD  desplazar e ir al estado 131
    OP_SUB  desplazar e ir al estado 132
    OP_MUL  desplazar e ir al estado 133
    OP_DIV  desplazar e ir al estado 134
    OP_MOD  desplazar e ir al estado 135

    $default  reduce usando la regla 109 (exp_op)


Estado 170

  101 exp_op: exp_op • OP_ADD exp_op
  102       | exp_op • OP_SUB exp_op
  103       | exp_op • OP_MUL exp_op
  104       | exp_op • OP_DIV exp_op
  105       | exp_op • OP_MOD exp_op
  107       | exp_op • OP_GT exp_op
  108       | exp_op • OP_LT exp_op
  109       | exp_op • OP_GTE exp_op
  110       | exp_op • OP_LTE exp_op
  110       | exp_op OP_LTE exp_op •
  111       | exp_op • OP_EQ exp_op
  112       | exp_op • OP_NEQ exp_op
  113       | exp_op • OP_AND exp_op
  114       | exp_op • OP_OR exp_op

    OP_ADD  desplazar e ir al estado 131
    OP_SUB  desplazar e ir al estado 132
    OP_MUL  desplazar e ir al estado 133
    OP_DIV  desplazar e ir al estado 134
    OP_MOD  desplazar e ir al estado 135

    $default  reduce usando la regla 110 (exp_op)


Estado 171

  101 exp_op: exp_op • OP_ADD exp_op
  101       | exp_op OP_ADD exp_op •
  102       | exp_op • OP_SUB exp_op
  103       | exp_op • OP_MUL exp_op
  104       | exp_op • OP_DIV exp_op
  105       | exp_op • OP_MOD exp_op
  107       | exp_op • OP_GT exp_op
  108       | exp_op • OP_LT exp_op
  109       | exp_op • OP_GTE exp_op
  110       | exp_op • OP_LTE exp_op
  111       | exp_op • OP_EQ exp_op
  112       | exp_op • OP_NEQ exp_op
  113       | exp_op • OP_AND exp_op
  114       | exp_op • OP_OR exp_op

    OP_MUL  desplazar e ir al estado 133
    OP_DIV  desplazar e ir al estado 134
    OP_MOD  desplazar e ir al estado 135

    $default  reduce usando la regla 101 (exp_op)


Estado 172

  101 exp_op: exp_op • OP_ADD exp_op
  102       | exp_op • OP_SUB exp_op
  102       | exp_op OP_SUB exp_op •
  103       | exp_op • OP_MUL exp_op
  104       | exp_op • OP_DIV exp_op
  105       | exp_op • OP_MOD exp_op
  107       | exp_op • OP_GT exp_op
  108       | exp_op • OP_LT exp_op
  109       | exp_op • OP_GTE exp_op
  110       | exp_op • OP_LTE exp_op
  111       | exp_op • OP_EQ exp_op
  112       | exp_op • OP_NEQ exp_op
  113       | exp_op • OP_AND exp_op
  114       | exp_op • OP_OR exp_op

    OP_MUL  desplazar e ir al estado 133
    OP_DIV  desplazar e ir al estado 134
    OP_MOD  desplazar e ir al estado 135

    $default  reduce usando la regla 102 (exp_op)


Estado 173

  101 exp_op: exp_op • OP_ADD exp_op
  102       | exp_op • OP_SUB exp_op
  103       | exp_op • OP_MUL exp_op
  103       | exp_op OP_MUL exp_op •
  104       | exp_op • OP_DIV exp_op
  105       | exp_op • OP_MOD exp_op
  107       | exp_op • OP_GT exp_op
  108       | exp_op • OP_LT exp_op
  109       | exp_op • OP_GTE exp_op
  110       | exp_op • OP_LTE exp_op
  111       | exp_op • OP_EQ exp_op
  112       | exp_op • OP_NEQ exp_op
  113       | exp_op • OP_AND exp_op
  114       | exp_op • OP_OR exp_op

    $default  reduce usando la regla 103 (exp_op)


Estado 174

  101 exp_op: exp_op • OP_ADD exp_op
  102       | exp_op • OP_SUB exp_op
  103       | exp_op • OP_MUL exp_op
  104       | exp_op • OP_DIV exp_op
  104       | exp_op OP_DIV exp_op •
  105       | exp_op • OP_MOD exp_op
  107       | exp_op • OP_GT exp_op
  108       | exp_op • OP_LT exp_op
  109       | exp_op • OP_GTE exp_op
  110       | exp_op • OP_LTE exp_op
  111       | exp_op • OP_EQ exp_op
  112       | exp_op • OP_NEQ exp_op
  113       | exp_op • OP_AND exp_op
  114       | exp_op • OP_OR exp_op

    $default  reduce usando la regla 104 (exp_op)


Estado 175

  101 exp_op: exp_op • OP_ADD exp_op
  102       | exp_op • OP_SUB exp_op
  103       | exp_op • OP_MUL exp_op
  104       | exp_op • OP_DIV exp_op
  105       | exp_op • OP_MOD exp_op
  105       | exp_op OP_MOD exp_op •
  107       | exp_op • OP_GT exp_op
  108       | exp_op • OP_LT exp_op
  109       | exp_op • OP_GTE exp_op
  110       | exp_op • OP_LTE exp_op
  111       | exp_op • OP_EQ exp_op
  112       | exp_op • OP_NEQ exp_op
  113       | exp_op • OP_AND exp_op
  114       | exp_op • OP_OR exp_op

    $default  reduce usando la regla 105 (exp_op)


Estado 176

   35 throw_dec: THROW_KW • IDENTIFIER LEFT_PARENT STRING RIGHT_PARENT
   36          | THROW_KW • IDENTIFIER LEFT_PARENT RIGHT_PARENT

    IDENTIFIER  desplazar e ir al estado 204


Estado 177

   17 std_block_d: LEFT_BRACKET $@1 block RIGHT_BRACKET •

    $default  reduce usando la regla 17 (std_block_d)


Estado 178

   24 block_exp: BREAK_KW •

    $default  reduce usando la regla 24 (block_exp)


Estado 179

   33 rtrn: RETURN_KW • exp_op
   34     | RETURN_KW •

    OP_SUB       desplazar e ir al estado 75
    OP_NOT       desplazar e ir al estado 76
    OP_INC       desplazar e ir al estado 3
    OP_DEC       desplazar e ir al estado 4
    LEFT_PARENT  desplazar e ir al estado 77
    D_COLON      desplazar e ir al estado 5
    TRUE_KW      desplazar e ir al estado 78
    FALSE_KW     desplazar e ir al estado 79
    CHAR         desplazar e ir al estado 80
    STRING       desplazar e ir al estado 81
    NUM          desplazar e ir al estado 82
    NUM_DEC      desplazar e ir al estado 83
    IDENTIFIER   desplazar e ir al estado 18

    $default  reduce usando la regla 34 (rtrn)

    value_data   ir al estado 84
    var_value    ir al estado 85
    exp_op       ir al estado 205
    inc_dec      ir al estado 87
    ops_inc_dec  ir al estado 39
    func_call    ir al estado 88


Estado 180

   21 block_line: n_line •

    $default  reduce usando la regla 21 (block_line)


Estado 181

   20 block: block block_line •

    $default  reduce usando la regla 20 (block)


Estado 182

   22 block_line: block_exp • n_line

    EOL  desplazar e ir al estado 19

    n_line  ir al estado 206


Estado 183

   31 block_exp: rtrn •

    $default  reduce usando la regla 31 (block_exp)


Estado 184

   32 block_exp: throw_dec •

    $default  reduce usando la regla 32 (block_exp)


Estado 185

   28 block_exp: loop •

    $default  reduce usando la regla 28 (block_exp)


Estado 186

   29 block_exp: conditional •

    $default  reduce usando la regla 29 (block_exp)


Estado 187

   30 block_exp: exception •

    $default  reduce usando la regla 30 (block_exp)


Estado 188

   23 block_exp: instance •

    $default  reduce usando la regla 23 (block_exp)


Estado 189

   25 block_exp: inc_dec •

    $default  reduce usando la regla 25 (block_exp)


Estado 190

   26 block_exp: func_call •

    $default  reduce usando la regla 26 (block_exp)


Estado 191

   27 block_exp: asingn •

    $default  reduce usando la regla 27 (block_exp)


Estado 192

   82 param: IDENTIFIER COLON • type
   83      | IDENTIFIER COLON • type OP_ASSIGN exp_op

    CHAR_KW    desplazar e ir al estado 11
    INT_KW     desplazar e ir al estado 12
    FLOAT_KW   desplazar e ir al estado 13
    BOOL_KW    desplazar e ir al estado 14
    STRING_KW  desplazar e ir al estado 15

    type  ir al estado 207


Estado 193

   77 func_params: LEFT_PARENT params_sec RIGHT_PARENT •

    $default  reduce usando la regla 77 (func_params)


Estado 194

   80 params_sec: param COMMA • params_sec
   81           | param COMMA • n_line params_sec

    IDENTIFIER  desplazar e ir al estado 139
    EOL         desplazar e ir al estado 19

    n_line      ir al estado 208
    params_sec  ir al estado 209
    param       ir al estado 141


Estado 195

   76 func_type: COLON VOID_KW •

    $default  reduce usando la regla 76 (func_type)


Estado 196

   75 func_type: COLON type •

    $default  reduce usando la regla 75 (func_type)


Estado 197

   74 try_catch: TRY_KW LEFT_BRACKET $@6 block RIGHT_BRACKET • $@7 CATCH_KW LEFT_PARENT IDENTIFIER RIGHT_PARENT std_block_d

    $default  reduce usando la regla 73 ($@7)

    $@7  ir al estado 210


Estado 198

   56 if_stmt: IF_KW LEFT_PARENT exp_op $@2 RIGHT_PARENT • std_block_d

    LEFT_BRACKET  desplazar e ir al estado 45

    std_block_d  ir al estado 211


Estado 199

   62 switch_stmt: SWITCH_KW LEFT_PARENT exp_op RIGHT_PARENT LEFT_BRACKET • n_line switch_block $@3 RIGHT_BRACKET
   63            | SWITCH_KW LEFT_PARENT exp_op RIGHT_PARENT LEFT_BRACKET • n_line RIGHT_BRACKET

    EOL  desplazar e ir al estado 19

    n_line  ir al estado 212


Estado 200

  101 exp_op: exp_op • OP_ADD exp_op
  102       | exp_op • OP_SUB exp_op
  103       | exp_op • OP_MUL exp_op
  104       | exp_op • OP_DIV exp_op
  105       | exp_op • OP_MOD exp_op
  107       | exp_op • OP_GT exp_op
  108       | exp_op • OP_LT exp_op
  109       | exp_op • OP_GTE exp_op
  110       | exp_op • OP_LTE exp_op
  111       | exp_op • OP_EQ exp_op
  112       | exp_op • OP_NEQ exp_op
  113       | exp_op • OP_AND exp_op
  114       | exp_op • OP_OR exp_op
  135 func_arg: IDENTIFIER COLON exp_op •

    OP_AND  desplazar e ir al estado 123
    OP_OR   desplazar e ir al estado 124
    OP_EQ   desplazar e ir al estado 125
    OP_NEQ  desplazar e ir al estado 126
    OP_GT   desplazar e ir al estado 127
    OP_LT   desplazar e ir al estado 128
    OP_GTE  desplazar e ir al estado 129
    OP_LTE  desplazar e ir al estado 130
    OP_ADD  desplazar e ir al estado 131
    OP_SUB  desplazar e ir al estado 132
    OP_MUL  desplazar e ir al estado 133
    OP_DIV  desplazar e ir al estado 134
    OP_MOD  desplazar e ir al estado 135

    $default  reduce usando la regla 135 (func_arg)


Estado 201

  134 func_args: func_arg COMMA n_line • func_args

    OP_SUB       desplazar e ir al estado 75
    OP_NOT       desplazar e ir al estado 76
    OP_INC       desplazar e ir al estado 3
    OP_DEC       desplazar e ir al estado 4
    LEFT_PARENT  desplazar e ir al estado 77
    D_COLON      desplazar e ir al estado 5
    TRUE_KW      desplazar e ir al estado 78
    FALSE_KW     desplazar e ir al estado 79
    CHAR         desplazar e ir al estado 80
    STRING       desplazar e ir al estado 81
    NUM          desplazar e ir al estado 82
    NUM_DEC      desplazar e ir al estado 83
    IDENTIFIER   desplazar e ir al estado 97

    value_data   ir al estado 84
    var_value    ir al estado 85
    exp_op       ir al estado 98
    inc_dec      ir al estado 87
    ops_inc_dec  ir al estado 39
    func_call    ir al estado 88
    func_args    ir al estado 213
    func_arg     ir al estado 100


Estado 202

  133 func_args: func_arg COMMA func_args •

    $default  reduce usando la regla 133 (func_args)


Estado 203

   40 for_decl: for_vrs_dec COLON for_cond COLON • for_sec

    OP_INC      desplazar e ir al estado 3
    OP_DEC      desplazar e ir al estado 4
    D_COLON     desplazar e ir al estado 5
    IDENTIFIER  desplazar e ir al estado 69

    for_sec      ir al estado 214
    for_iter     ir al estado 215
    var_value    ir al estado 37
    inc_dec      ir al estado 216
    ops_inc_dec  ir al estado 39
    asingn       ir al estado 217


Estado 204

   35 throw_dec: THROW_KW IDENTIFIER • LEFT_PARENT STRING RIGHT_PARENT
   36          | THROW_KW IDENTIFIER • LEFT_PARENT RIGHT_PARENT

    LEFT_PARENT  desplazar e ir al estado 218


Estado 205

   33 rtrn: RETURN_KW exp_op •
  101 exp_op: exp_op • OP_ADD exp_op
  102       | exp_op • OP_SUB exp_op
  103       | exp_op • OP_MUL exp_op
  104       | exp_op • OP_DIV exp_op
  105       | exp_op • OP_MOD exp_op
  107       | exp_op • OP_GT exp_op
  108       | exp_op • OP_LT exp_op
  109       | exp_op • OP_GTE exp_op
  110       | exp_op • OP_LTE exp_op
  111       | exp_op • OP_EQ exp_op
  112       | exp_op • OP_NEQ exp_op
  113       | exp_op • OP_AND exp_op
  114       | exp_op • OP_OR exp_op

    OP_AND  desplazar e ir al estado 123
    OP_OR   desplazar e ir al estado 124
    OP_EQ   desplazar e ir al estado 125
    OP_NEQ  desplazar e ir al estado 126
    OP_GT   desplazar e ir al estado 127
    OP_LT   desplazar e ir al estado 128
    OP_GTE  desplazar e ir al estado 129
    OP_LTE  desplazar e ir al estado 130
    OP_ADD  desplazar e ir al estado 131
    OP_SUB  desplazar e ir al estado 132
    OP_MUL  desplazar e ir al estado 133
    OP_DIV  desplazar e ir al estado 134
    OP_MOD  desplazar e ir al estado 135

    $default  reduce usando la regla 33 (rtrn)


Estado 206

   22 block_line: block_exp n_line •

    $default  reduce usando la regla 22 (block_line)


Estado 207

   82 param: IDENTIFIER COLON type •
   83      | IDENTIFIER COLON type • OP_ASSIGN exp_op

    OP_ASSIGN  desplazar e ir al estado 219

    $default  reduce usando la regla 82 (param)


Estado 208

   81 params_sec: param COMMA n_line • params_sec

    IDENTIFIER  desplazar e ir al estado 139

    params_sec  ir al estado 220
    param       ir al estado 141


Estado 209

   80 params_sec: param COMMA params_sec •

    $default  reduce usando la regla 80 (params_sec)


Estado 210

   74 try_catch: TRY_KW LEFT_BRACKET $@6 block RIGHT_BRACKET $@7 • CATCH_KW LEFT_PARENT IDENTIFIER RIGHT_PARENT std_block_d

    CATCH_KW  desplazar e ir al estado 221


Estado 211

   56 if_stmt: IF_KW LEFT_PARENT exp_op $@2 RIGHT_PARENT std_block_d •

    $default  reduce usando la regla 56 (if_stmt)


Estado 212

   62 switch_stmt: SWITCH_KW LEFT_PARENT exp_op RIGHT_PARENT LEFT_BRACKET n_line • switch_block $@3 RIGHT_BRACKET
   63            | SWITCH_KW LEFT_PARENT exp_op RIGHT_PARENT LEFT_BRACKET n_line • RIGHT_BRACKET

    RIGHT_BRACKET  desplazar e ir al estado 222
    CASE_KW        desplazar e ir al estado 223
    DEFAULT_KW     desplazar e ir al estado 224

    switch_block  ir al estado 225
    switch_line   ir al estado 226


Estado 213

  134 func_args: func_arg COMMA n_line func_args •

    $default  reduce usando la regla 134 (func_args)


Estado 214

   40 for_decl: for_vrs_dec COLON for_cond COLON for_sec •

    $default  reduce usando la regla 40 (for_decl)


Estado 215

   45 for_sec: for_iter •
   46        | for_iter • COMMA for_sec

    COMMA  desplazar e ir al estado 227

    $default  reduce usando la regla 45 (for_sec)


Estado 216

   47 for_iter: inc_dec •

    $default  reduce usando la regla 47 (for_iter)


Estado 217

   48 for_iter: asingn •

    $default  reduce usando la regla 48 (for_iter)


Estado 218

   35 throw_dec: THROW_KW IDENTIFIER LEFT_PARENT • STRING RIGHT_PARENT
   36          | THROW_KW IDENTIFIER LEFT_PARENT • RIGHT_PARENT

    RIGHT_PARENT  desplazar e ir al estado 228
    STRING        desplazar e ir al estado 229


Estado 219

   83 param: IDENTIFIER COLON type OP_ASSIGN • exp_op

    OP_SUB       desplazar e ir al estado 75
    OP_NOT       desplazar e ir al estado 76
    OP_INC       desplazar e ir al estado 3
    OP_DEC       desplazar e ir al estado 4
    LEFT_PARENT  desplazar e ir al estado 77
    D_COLON      desplazar e ir al estado 5
    TRUE_KW      desplazar e ir al estado 78
    FALSE_KW     desplazar e ir al estado 79
    CHAR         desplazar e ir al estado 80
    STRING       desplazar e ir al estado 81
    NUM          desplazar e ir al estado 82
    NUM_DEC      desplazar e ir al estado 83
    IDENTIFIER   desplazar e ir al estado 18

    value_data   ir al estado 84
    var_value    ir al estado 85
    exp_op       ir al estado 230
    inc_dec      ir al estado 87
    ops_inc_dec  ir al estado 39
    func_call    ir al estado 88


Estado 220

   81 params_sec: param COMMA n_line params_sec •

    $default  reduce usando la regla 81 (params_sec)


Estado 221

   74 try_catch: TRY_KW LEFT_BRACKET $@6 block RIGHT_BRACKET $@7 CATCH_KW • LEFT_PARENT IDENTIFIER RIGHT_PARENT std_block_d

    LEFT_PARENT  desplazar e ir al estado 231


Estado 222

   63 switch_stmt: SWITCH_KW LEFT_PARENT exp_op RIGHT_PARENT LEFT_BRACKET n_line RIGHT_BRACKET •

    $default  reduce usando la regla 63 (switch_stmt)


Estado 223

   67 switch_line: CASE_KW • exp_op COLON $@4 block

    OP_SUB       desplazar e ir al estado 75
    OP_NOT       desplazar e ir al estado 76
    OP_INC       desplazar e ir al estado 3
    OP_DEC       desplazar e ir al estado 4
    LEFT_PARENT  desplazar e ir al estado 77
    D_COLON      desplazar e ir al estado 5
    TRUE_KW      desplazar e ir al estado 78
    FALSE_KW     desplazar e ir al estado 79
    CHAR         desplazar e ir al estado 80
    STRING       desplazar e ir al estado 81
    NUM          desplazar e ir al estado 82
    NUM_DEC      desplazar e ir al estado 83
    IDENTIFIER   desplazar e ir al estado 18

    value_data   ir al estado 84
    var_value    ir al estado 85
    exp_op       ir al estado 232
    inc_dec      ir al estado 87
    ops_inc_dec  ir al estado 39
    func_call    ir al estado 88


Estado 224

   69 switch_line: DEFAULT_KW • COLON $@5 block

    COLON  desplazar e ir al estado 233


Estado 225

   62 switch_stmt: SWITCH_KW LEFT_PARENT exp_op RIGHT_PARENT LEFT_BRACKET n_line switch_block • $@3 RIGHT_BRACKET
   65 switch_block: switch_block • switch_line

    CASE_KW     desplazar e ir al estado 223
    DEFAULT_KW  desplazar e ir al estado 224

    $default  reduce usando la regla 61 ($@3)

    $@3          ir al estado 234
    switch_line  ir al estado 235


Estado 226

   64 switch_block: switch_line •

    $default  reduce usando la regla 64 (switch_block)


Estado 227

   46 for_sec: for_iter COMMA • for_sec

    OP_INC      desplazar e ir al estado 3
    OP_DEC      desplazar e ir al estado 4
    D_COLON     desplazar e ir al estado 5
    IDENTIFIER  desplazar e ir al estado 69

    for_sec      ir al estado 236
    for_iter     ir al estado 215
    var_value    ir al estado 37
    inc_dec      ir al estado 216
    ops_inc_dec  ir al estado 39
    asingn       ir al estado 217


Estado 228

   36 throw_dec: THROW_KW IDENTIFIER LEFT_PARENT RIGHT_PARENT •

    $default  reduce usando la regla 36 (throw_dec)


Estado 229

   35 throw_dec: THROW_KW IDENTIFIER LEFT_PARENT STRING • RIGHT_PARENT

    RIGHT_PARENT  desplazar e ir al estado 237


Estado 230

   83 param: IDENTIFIER COLON type OP_ASSIGN exp_op •
  101 exp_op: exp_op • OP_ADD exp_op
  102       | exp_op • OP_SUB exp_op
  103       | exp_op • OP_MUL exp_op
  104       | exp_op • OP_DIV exp_op
  105       | exp_op • OP_MOD exp_op
  107       | exp_op • OP_GT exp_op
  108       | exp_op • OP_LT exp_op
  109       | exp_op • OP_GTE exp_op
  110       | exp_op • OP_LTE exp_op
  111       | exp_op • OP_EQ exp_op
  112       | exp_op • OP_NEQ exp_op
  113       | exp_op • OP_AND exp_op
  114       | exp_op • OP_OR exp_op

    OP_AND  desplazar e ir al estado 123
    OP_OR   desplazar e ir al estado 124
    OP_EQ   desplazar e ir al estado 125
    OP_NEQ  desplazar e ir al estado 126
    OP_GT   desplazar e ir al estado 127
    OP_LT   desplazar e ir al estado 128
    OP_GTE  desplazar e ir al estado 129
    OP_LTE  desplazar e ir al estado 130
    OP_ADD  desplazar e ir al estado 131
    OP_SUB  desplazar e ir al estado 132
    OP_MUL  desplazar e ir al estado 133
    OP_DIV  desplazar e ir al estado 134
    OP_MOD  desplazar e ir al estado 135

    $default  reduce usando la regla 83 (param)


Estado 231

   74 try_catch: TRY_KW LEFT_BRACKET $@6 block RIGHT_BRACKET $@7 CATCH_KW LEFT_PARENT • IDENTIFIER RIGHT_PARENT std_block_d

    IDENTIFIER  desplazar e ir al estado 238


Estado 232

   67 switch_line: CASE_KW exp_op • COLON $@4 block
  101 exp_op: exp_op • OP_ADD exp_op
  102       | exp_op • OP_SUB exp_op
  103       | exp_op • OP_MUL exp_op
  104       | exp_op • OP_DIV exp_op
  105       | exp_op • OP_MOD exp_op
  107       | exp_op • OP_GT exp_op
  108       | exp_op • OP_LT exp_op
  109       | exp_op • OP_GTE exp_op
  110       | exp_op • OP_LTE exp_op
  111       | exp_op • OP_EQ exp_op
  112       | exp_op • OP_NEQ exp_op
  113       | exp_op • OP_AND exp_op
  114       | exp_op • OP_OR exp_op

    OP_AND  desplazar e ir al estado 123
    OP_OR   desplazar e ir al estado 124
    OP_EQ   desplazar e ir al estado 125
    OP_NEQ  desplazar e ir al estado 126
    OP_GT   desplazar e ir al estado 127
    OP_LT   desplazar e ir al estado 128
    OP_GTE  desplazar e ir al estado 129
    OP_LTE  desplazar e ir al estado 130
    OP_ADD  desplazar e ir al estado 131
    OP_SUB  desplazar e ir al estado 132
    OP_MUL  desplazar e ir al estado 133
    OP_DIV  desplazar e ir al estado 134
    OP_MOD  desplazar e ir al estado 135
    COLON   desplazar e ir al estado 239


Estado 233

   69 switch_line: DEFAULT_KW COLON • $@5 block

    $default  reduce usando la regla 68 ($@5)

    $@5  ir al estado 240


Estado 234

   62 switch_stmt: SWITCH_KW LEFT_PARENT exp_op RIGHT_PARENT LEFT_BRACKET n_line switch_block $@3 • RIGHT_BRACKET

    RIGHT_BRACKET  desplazar e ir al estado 241


Estado 235

   65 switch_block: switch_block switch_line •

    $default  reduce usando la regla 65 (switch_block)


Estado 236

   46 for_sec: for_iter COMMA for_sec •

    $default  reduce usando la regla 46 (for_sec)


Estado 237

   35 throw_dec: THROW_KW IDENTIFIER LEFT_PARENT STRING RIGHT_PARENT •

    $default  reduce usando la regla 35 (throw_dec)


Estado 238

   74 try_catch: TRY_KW LEFT_BRACKET $@6 block RIGHT_BRACKET $@7 CATCH_KW LEFT_PARENT IDENTIFIER • RIGHT_PARENT std_block_d

    RIGHT_PARENT  desplazar e ir al estado 242


Estado 239

   67 switch_line: CASE_KW exp_op COLON • $@4 block

    $default  reduce usando la regla 66 ($@4)

    $@4  ir al estado 243


Estado 240

   69 switch_line: DEFAULT_KW COLON $@5 • block

    $default  reduce usando la regla 19 (block)

    block  ir al estado 244


Estado 241

   62 switch_stmt: SWITCH_KW LEFT_PARENT exp_op RIGHT_PARENT LEFT_BRACKET n_line switch_block $@3 RIGHT_BRACKET •

    $default  reduce usando la regla 62 (switch_stmt)


Estado 242

   74 try_catch: TRY_KW LEFT_BRACKET $@6 block RIGHT_BRACKET $@7 CATCH_KW LEFT_PARENT IDENTIFIER RIGHT_PARENT • std_block_d

    LEFT_BRACKET  desplazar e ir al estado 45

    std_block_d  ir al estado 245


Estado 243

   67 switch_line: CASE_KW exp_op COLON $@4 • block

    $default  reduce usando la regla 19 (block)

    block  ir al estado 246


Estado 244

   20 block: block • block_line
   69 switch_line: DEFAULT_KW COLON $@5 block •

    THROW_KW    desplazar e ir al estado 176
    OP_INC      desplazar e ir al estado 3
    OP_DEC      desplazar e ir al estado 4
    D_COLON     desplazar e ir al estado 5
    FOR_KW      desplazar e ir al estado 6
    WHILE_KW    desplazar e ir al estado 7
    DO_KW       desplazar e ir al estado 8
    BREAK_KW    desplazar e ir al estado 178
    RETURN_KW   desplazar e ir al estado 179
    TRY_KW      desplazar e ir al estado 10
    CHAR_KW     desplazar e ir al estado 11
    INT_KW      desplazar e ir al estado 12
    FLOAT_KW    desplazar e ir al estado 13
    BOOL_KW     desplazar e ir al estado 14
    STRING_KW   desplazar e ir al estado 15
    IF_KW       desplazar e ir al estado 16
    SWITCH_KW   desplazar e ir al estado 17
    IDENTIFIER  desplazar e ir al estado 18
    EOL         desplazar e ir al estado 19

    $default  reduce usando la regla 69 (switch_line)

    n_line       ir al estado 180
    block_line   ir al estado 181
    block_exp    ir al estado 182
    rtrn         ir al estado 183
    throw_dec    ir al estado 184
    loop         ir al estado 185
    while_exp    ir al estado 27
    conditional  ir al estado 186
    if_els_stmt  ir al estado 29
    if_stmt      ir al estado 30
    switch_stmt  ir al estado 31
    exception    ir al estado 187
    try_catch    ir al estado 33
    instance     ir al estado 188
    inst_id      ir al estado 35
    type         ir al estado 36
    var_value    ir al estado 37
    inc_dec      ir al estado 189
    ops_inc_dec  ir al estado 39
    func_call    ir al estado 190
    asingn       ir al estado 191


Estado 245

   74 try_catch: TRY_KW LEFT_BRACKET $@6 block RIGHT_BRACKET $@7 CATCH_KW LEFT_PARENT IDENTIFIER RIGHT_PARENT std_block_d •

    $default  reduce usando la regla 74 (try_catch)


Estado 246

   20 block: block • block_line
   67 switch_line: CASE_KW exp_op COLON $@4 block •

    THROW_KW    desplazar e ir al estado 176
    OP_INC      desplazar e ir al estado 3
    OP_DEC      desplazar e ir al estado 4
    D_COLON     desplazar e ir al estado 5
    FOR_KW      desplazar e ir al estado 6
    WHILE_KW    desplazar e ir al estado 7
    DO_KW       desplazar e ir al estado 8
    BREAK_KW    desplazar e ir al estado 178
    RETURN_KW   desplazar e ir al estado 179
    TRY_KW      desplazar e ir al estado 10
    CHAR_KW     desplazar e ir al estado 11
    INT_KW      desplazar e ir al estado 12
    FLOAT_KW    desplazar e ir al estado 13
    BOOL_KW     desplazar e ir al estado 14
    STRING_KW   desplazar e ir al estado 15
    IF_KW       desplazar e ir al estado 16
    SWITCH_KW   desplazar e ir al estado 17
    IDENTIFIER  desplazar e ir al estado 18
    EOL         desplazar e ir al estado 19

    $default  reduce usando la regla 67 (switch_line)

    n_line       ir al estado 180
    block_line   ir al estado 181
    block_exp    ir al estado 182
    rtrn         ir al estado 183
    throw_dec    ir al estado 184
    loop         ir al estado 185
    while_exp    ir al estado 27
    conditional  ir al estado 186
    if_els_stmt  ir al estado 29
    if_stmt      ir al estado 30
    switch_stmt  ir al estado 31
    exception    ir al estado 187
    try_catch    ir al estado 33
    instance     ir al estado 188
    inst_id      ir al estado 35
    type         ir al estado 36
    var_value    ir al estado 37
    inc_dec      ir al estado 189
    ops_inc_dec  ir al estado 39
    func_call    ir al estado 190
    asingn       ir al estado 191
