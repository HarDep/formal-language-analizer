Terminales no usados en la gramática

    NULL_KW
    LEFT_SQUARE
    RIGHT_SQUARE
    DOT


Gramática

    0 $accept: in $end

    1 in: ε
    2   | in line

    3 line: EOL
    4     | exp EOL
    5     | exp_wth_bl

    6 exp: instance
    7    | inc_dec
    8    | func_call
    9    | asingn

   10 exp_wth_bl: loop
   11           | conditional
   12           | exception
   13           | func

   14 func: func_dec std_block_d

   15 $@1: ε

   16 std_block_d: LEFT_BRACKET $@1 block RIGHT_BRACKET

   17 func_dec: FUNCTION_KW IDENTIFIER func_params func_type

   18 block: ε
   19      | block block_line

   20 block_line: EOL
   21           | block_exp EOL

   22 block_exp: instance
   23          | BREAK_KW
   24          | inc_dec
   25          | func_call
   26          | asingn
   27          | loop
   28          | conditional
   29          | exception
   30          | rtrn
   31          | throw_dec

   32 rtrn: RETURN_KW exp_op
   33     | RETURN_KW

   34 throw_dec: THROW_KW IDENTIFIER LEFT_PARENT STRING RIGHT_PARENT
   35          | THROW_KW IDENTIFIER LEFT_PARENT RIGHT_PARENT

   36 loop: FOR_KW LEFT_PARENT for_decl RIGHT_PARENT std_block_d
   37     | while_exp std_block_d
   38     | DO_KW std_block_d while_exp

   39 for_decl: for_vrs_dec COLON for_cond COLON for_sec

   40 for_vrs_dec: for_var
   41            | for_var COMMA for_vrs_dec

   42 for_var: IDENTIFIER OP_ASSIGN exp_op

   43 for_cond: exp_op

   44 for_sec: for_iter
   45        | for_iter COMMA for_sec

   46 for_iter: inc_dec
   47         | asingn

   48 while_exp: WHILE_KW LEFT_PARENT exp_op RIGHT_PARENT

   49 conditional: if_els_stmt
   50            | switch_stmt

   51 if_els_stmt: if_stmt
   52            | if_stmt else_stmt
   53            | if_stmt els_if_stmt

   54 $@2: ε

   55 if_stmt: IF_KW LEFT_PARENT exp_op $@2 RIGHT_PARENT std_block_d

   56 else_stmt: ELSE_KW std_block_d

   57 els_if_stmt: ELSE_KW if_stmt
   58            | els_if_stmt ELSE_KW if_stmt
   59            | els_if_stmt else_stmt

   60 $@3: ε

   61 switch_stmt: SWITCH_KW LEFT_PARENT exp_op RIGHT_PARENT LEFT_BRACKET EOL switch_block $@3 RIGHT_BRACKET
   62            | SWITCH_KW LEFT_PARENT exp_op RIGHT_PARENT LEFT_BRACKET EOL RIGHT_BRACKET

   63 switch_block: switch_line
   64             | switch_block switch_line

   65 $@4: ε

   66 switch_line: CASE_KW exp_op COLON $@4 block

   67 $@5: ε

   68 switch_line: DEFAULT_KW COLON $@5 block

   69 exception: try_catch
   70          | try_catch FINALLY_KW LEFT_BRACKET block RIGHT_BRACKET

   71 try_catch: TRY_KW LEFT_BRACKET block RIGHT_BRACKET CATCH_KW LEFT_PARENT IDENTIFIER RIGHT_PARENT LEFT_BRACKET block RIGHT_BRACKET

   72 func_type: COLON type
   73          | COLON VOID_KW

   74 func_params: LEFT_PARENT params_sec RIGHT_PARENT
   75            | LEFT_PARENT RIGHT_PARENT

   76 params_sec: param
   77           | param COMMA params_sec
   78           | param COMMA EOL params_sec

   79 param: IDENTIFIER COLON type
   80      | IDENTIFIER COLON type OP_ASSIGN exp_op

   81 instance: inst_id
   82         | inst_id OP_ASSIGN exp_op

   83 inst_id: type IDENTIFIER

   84 type: CHAR_KW
   85     | INT_KW
   86     | FLOAT_KW
   87     | BOOL_KW
   88     | STRING_KW

   89 value_data: CHAR
   90           | NUM
   91           | NUM_DEC
   92           | TRUE_KW
   93           | FALSE_KW
   94           | STRING
   95           | var_value

   96 var_value: IDENTIFIER
   97          | D_COLON IDENTIFIER

   98 exp_op: exp_op OP_ADD exp_op
   99       | exp_op OP_SUB exp_op
  100       | exp_op OP_MUL exp_op
  101       | exp_op OP_DIV exp_op
  102       | exp_op OP_MOD exp_op
  103       | OP_SUB exp_op
  104       | exp_op OP_GT exp_op
  105       | exp_op OP_LT exp_op
  106       | exp_op OP_GTE exp_op
  107       | exp_op OP_LTE exp_op
  108       | exp_op OP_EQ exp_op
  109       | exp_op OP_NEQ exp_op
  110       | exp_op OP_AND exp_op
  111       | exp_op OP_OR exp_op
  112       | OP_NOT exp_op
  113       | var_value OP_ASSIGN exp_op
  114       | var_value OP_ADD_ASSIGN exp_op
  115       | var_value OP_SUB_ASSIGN exp_op
  116       | var_value OP_MUL_ASSIGN exp_op
  117       | var_value OP_DIV_ASSIGN exp_op
  118       | var_value OP_MOD_ASSIGN exp_op
  119       | LEFT_PARENT exp_op RIGHT_PARENT
  120       | value_data
  121       | func_call
  122       | inc_dec

  123 inc_dec: var_value ops_inc_dec
  124        | ops_inc_dec var_value

  125 ops_inc_dec: OP_INC
  126            | OP_DEC

  127 func_call: IDENTIFIER LEFT_PARENT RIGHT_PARENT
  128          | IDENTIFIER LEFT_PARENT func_args RIGHT_PARENT

  129 func_args: func_arg
  130          | func_arg COMMA func_args
  131          | func_arg COMMA EOL func_args

  132 func_arg: IDENTIFIER COLON exp_op
  133         | exp_op

  134 asingn: var_value OP_ASSIGN exp_op
  135       | var_value OP_ADD_ASSIGN exp_op
  136       | var_value ops_asingn exp_op

  137 ops_asingn: OP_SUB_ASSIGN
  138           | OP_MUL_ASSIGN
  139           | OP_DIV_ASSIGN
  140           | OP_MOD_ASSIGN


Terminales con las reglas donde aparecen

    $end (0) 0
    error (256)
    OP_ASSIGN (258) 42 80 82 113 134
    OP_ADD_ASSIGN (259) 114 135
    OP_SUB_ASSIGN (260) 115 137
    OP_MUL_ASSIGN (261) 116 138
    OP_DIV_ASSIGN (262) 117 139
    OP_MOD_ASSIGN (263) 118 140
    OP_AND (264) 110
    OP_OR (265) 111
    OP_EQ (266) 108
    OP_NEQ (267) 109
    OP_GT (268) 104
    OP_LT (269) 105
    OP_GTE (270) 106
    OP_LTE (271) 107
    OP_ADD (272) 98
    OP_SUB (273) 99 103
    OP_MUL (274) 100
    OP_DIV (275) 101
    OP_MOD (276) 102
    OP_NOT (277) 112
    UMINUS (278)
    THROW_KW (279) 34 35
    NULL_KW (280)
    OP_INC (281) 125
    OP_DEC (282) 126
    LEFT_PARENT (283) 34 35 36 48 55 61 62 71 74 75 119 127 128
    RIGHT_PARENT (284) 34 35 36 48 55 61 62 71 74 75 119 127 128
    LEFT_BRACKET (285) 16 61 62 70 71
    RIGHT_BRACKET (286) 16 61 62 70 71
    LEFT_SQUARE (287)
    RIGHT_SQUARE (288)
    COMMA (289) 41 45 77 78 130 131
    DOT (290)
    D_COLON (291) 97
    COLON (292) 39 66 68 72 73 79 80 132
    FOR_KW (293) 36
    WHILE_KW (294) 48
    DO_KW (295) 38
    BREAK_KW (296) 23
    RETURN_KW (297) 32 33
    TRUE_KW (298) 92
    FALSE_KW (299) 93
    FUNCTION_KW (300) 17
    TRY_KW (301) 71
    CATCH_KW (302) 71
    FINALLY_KW (303) 70
    CHAR_KW (304) 84
    INT_KW (305) 85
    FLOAT_KW (306) 86
    BOOL_KW (307) 87
    STRING_KW (308) 88
    VOID_KW (309) 73
    IF_KW (310) 55
    ELSE_KW (311) 56 57 58
    SWITCH_KW (312) 61 62
    CASE_KW (313) 66
    DEFAULT_KW (314) 68
    CHAR <ival> (315) 89
    STRING <ival> (316) 34 94
    NUM <dval> (317) 90
    NUM_DEC <dval> (318) 91
    IDENTIFIER <sval> (319) 17 34 35 42 71 79 80 83 96 97 127 128 132
    EOL (320) 3 4 20 21 61 62 78 131


No terminales con las reglas donde aparecen

    $accept (66)
        on left: 0
    in (67)
        on left: 1 2
        on right: 0 2
    line (68)
        on left: 3 4 5
        on right: 2
    exp (69)
        on left: 6 7 8 9
        on right: 4
    exp_wth_bl (70)
        on left: 10 11 12 13
        on right: 5
    func (71)
        on left: 14
        on right: 13
    std_block_d (72)
        on left: 16
        on right: 14 36 37 38 55 56
    $@1 (73)
        on left: 15
        on right: 16
    func_dec (74)
        on left: 17
        on right: 14
    block (75)
        on left: 18 19
        on right: 16 19 66 68 70 71
    block_line (76)
        on left: 20 21
        on right: 19
    block_exp (77)
        on left: 22 23 24 25 26 27 28 29 30 31
        on right: 21
    rtrn <ival> (78)
        on left: 32 33
        on right: 30
    throw_dec (79)
        on left: 34 35
        on right: 31
    loop (80)
        on left: 36 37 38
        on right: 10 27
    for_decl (81)
        on left: 39
        on right: 36
    for_vrs_dec (82)
        on left: 40 41
        on right: 39 41
    for_var (83)
        on left: 42
        on right: 40 41
    for_cond (84)
        on left: 43
        on right: 39
    for_sec (85)
        on left: 44 45
        on right: 39 45
    for_iter (86)
        on left: 46 47
        on right: 44 45
    while_exp (87)
        on left: 48
        on right: 37 38
    conditional (88)
        on left: 49 50
        on right: 11 28
    if_els_stmt (89)
        on left: 51 52 53
        on right: 49
    if_stmt (90)
        on left: 55
        on right: 51 52 53 57 58
    $@2 (91)
        on left: 54
        on right: 55
    else_stmt (92)
        on left: 56
        on right: 52 59
    els_if_stmt (93)
        on left: 57 58 59
        on right: 53 58 59
    switch_stmt (94)
        on left: 61 62
        on right: 50
    $@3 (95)
        on left: 60
        on right: 61
    switch_block <ival> (96)
        on left: 63 64
        on right: 61 64
    switch_line <ival> (97)
        on left: 66 68
        on right: 63 64
    $@4 (98)
        on left: 65
        on right: 66
    $@5 (99)
        on left: 67
        on right: 68
    exception (100)
        on left: 69 70
        on right: 12 29
    try_catch (101)
        on left: 71
        on right: 69 70
    func_type <ival> (102)
        on left: 72 73
        on right: 17
    func_params (103)
        on left: 74 75
        on right: 17
    params_sec (104)
        on left: 76 77 78
        on right: 74 77 78
    param (105)
        on left: 79 80
        on right: 76 77 78
    instance (106)
        on left: 81 82
        on right: 6 22
    inst_id <ival> (107)
        on left: 83
        on right: 81 82
    type <ival> (108)
        on left: 84 85 86 87 88
        on right: 72 79 80 83
    value_data <sdata> (109)
        on left: 89 90 91 92 93 94 95
        on right: 120
    var_value <ival> (110)
        on left: 96 97
        on right: 95 113 114 115 116 117 118 123 124 134 135 136
    exp_op <sdata> (111)
        on left: 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122
        on right: 32 42 43 48 55 61 62 66 80 82 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 132 133 134 135 136
    inc_dec <ival> (112)
        on left: 123 124
        on right: 7 24 46 122
    ops_inc_dec (113)
        on left: 125 126
        on right: 123 124
    func_call <ival> (114)
        on left: 127 128
        on right: 8 25 121
    func_args (115)
        on left: 129 130 131
        on right: 128 130 131
    func_arg (116)
        on left: 132 133
        on right: 129 130 131
    asingn (117)
        on left: 134 135 136
        on right: 9 26 47
    ops_asingn (118)
        on left: 137 138 139 140
        on right: 136


Estado 0

    0 $accept: • in $end

    $default  reduce usando la regla 1 (in)

    in  ir al estado 1


Estado 1

    0 $accept: in • $end
    2 in: in • line

    $end         desplazar e ir al estado 2
    OP_INC       desplazar e ir al estado 3
    OP_DEC       desplazar e ir al estado 4
    D_COLON      desplazar e ir al estado 5
    FOR_KW       desplazar e ir al estado 6
    WHILE_KW     desplazar e ir al estado 7
    DO_KW        desplazar e ir al estado 8
    FUNCTION_KW  desplazar e ir al estado 9
    TRY_KW       desplazar e ir al estado 10
    CHAR_KW      desplazar e ir al estado 11
    INT_KW       desplazar e ir al estado 12
    FLOAT_KW     desplazar e ir al estado 13
    BOOL_KW      desplazar e ir al estado 14
    STRING_KW    desplazar e ir al estado 15
    IF_KW        desplazar e ir al estado 16
    SWITCH_KW    desplazar e ir al estado 17
    IDENTIFIER   desplazar e ir al estado 18
    EOL          desplazar e ir al estado 19

    line         ir al estado 20
    exp          ir al estado 21
    exp_wth_bl   ir al estado 22
    func         ir al estado 23
    func_dec     ir al estado 24
    loop         ir al estado 25
    while_exp    ir al estado 26
    conditional  ir al estado 27
    if_els_stmt  ir al estado 28
    if_stmt      ir al estado 29
    switch_stmt  ir al estado 30
    exception    ir al estado 31
    try_catch    ir al estado 32
    instance     ir al estado 33
    inst_id      ir al estado 34
    type         ir al estado 35
    var_value    ir al estado 36
    inc_dec      ir al estado 37
    ops_inc_dec  ir al estado 38
    func_call    ir al estado 39
    asingn       ir al estado 40


Estado 2

    0 $accept: in $end •

    $default  aceptar


Estado 3

  125 ops_inc_dec: OP_INC •

    $default  reduce usando la regla 125 (ops_inc_dec)


Estado 4

  126 ops_inc_dec: OP_DEC •

    $default  reduce usando la regla 126 (ops_inc_dec)


Estado 5

   97 var_value: D_COLON • IDENTIFIER

    IDENTIFIER  desplazar e ir al estado 41


Estado 6

   36 loop: FOR_KW • LEFT_PARENT for_decl RIGHT_PARENT std_block_d

    LEFT_PARENT  desplazar e ir al estado 42


Estado 7

   48 while_exp: WHILE_KW • LEFT_PARENT exp_op RIGHT_PARENT

    LEFT_PARENT  desplazar e ir al estado 43


Estado 8

   38 loop: DO_KW • std_block_d while_exp

    LEFT_BRACKET  desplazar e ir al estado 44

    std_block_d  ir al estado 45


Estado 9

   17 func_dec: FUNCTION_KW • IDENTIFIER func_params func_type

    IDENTIFIER  desplazar e ir al estado 46


Estado 10

   71 try_catch: TRY_KW • LEFT_BRACKET block RIGHT_BRACKET CATCH_KW LEFT_PARENT IDENTIFIER RIGHT_PARENT LEFT_BRACKET block RIGHT_BRACKET

    LEFT_BRACKET  desplazar e ir al estado 47


Estado 11

   84 type: CHAR_KW •

    $default  reduce usando la regla 84 (type)


Estado 12

   85 type: INT_KW •

    $default  reduce usando la regla 85 (type)


Estado 13

   86 type: FLOAT_KW •

    $default  reduce usando la regla 86 (type)


Estado 14

   87 type: BOOL_KW •

    $default  reduce usando la regla 87 (type)


Estado 15

   88 type: STRING_KW •

    $default  reduce usando la regla 88 (type)


Estado 16

   55 if_stmt: IF_KW • LEFT_PARENT exp_op $@2 RIGHT_PARENT std_block_d

    LEFT_PARENT  desplazar e ir al estado 48


Estado 17

   61 switch_stmt: SWITCH_KW • LEFT_PARENT exp_op RIGHT_PARENT LEFT_BRACKET EOL switch_block $@3 RIGHT_BRACKET
   62            | SWITCH_KW • LEFT_PARENT exp_op RIGHT_PARENT LEFT_BRACKET EOL RIGHT_BRACKET

    LEFT_PARENT  desplazar e ir al estado 49


Estado 18

   96 var_value: IDENTIFIER •
  127 func_call: IDENTIFIER • LEFT_PARENT RIGHT_PARENT
  128          | IDENTIFIER • LEFT_PARENT func_args RIGHT_PARENT

    LEFT_PARENT  desplazar e ir al estado 50

    $default  reduce usando la regla 96 (var_value)


Estado 19

    3 line: EOL •

    $default  reduce usando la regla 3 (line)


Estado 20

    2 in: in line •

    $default  reduce usando la regla 2 (in)


Estado 21

    4 line: exp • EOL

    EOL  desplazar e ir al estado 51


Estado 22

    5 line: exp_wth_bl •

    $default  reduce usando la regla 5 (line)


Estado 23

   13 exp_wth_bl: func •

    $default  reduce usando la regla 13 (exp_wth_bl)


Estado 24

   14 func: func_dec • std_block_d

    LEFT_BRACKET  desplazar e ir al estado 44

    std_block_d  ir al estado 52


Estado 25

   10 exp_wth_bl: loop •

    $default  reduce usando la regla 10 (exp_wth_bl)


Estado 26

   37 loop: while_exp • std_block_d

    LEFT_BRACKET  desplazar e ir al estado 44

    std_block_d  ir al estado 53


Estado 27

   11 exp_wth_bl: conditional •

    $default  reduce usando la regla 11 (exp_wth_bl)


Estado 28

   49 conditional: if_els_stmt •

    $default  reduce usando la regla 49 (conditional)


Estado 29

   51 if_els_stmt: if_stmt •
   52            | if_stmt • else_stmt
   53            | if_stmt • els_if_stmt

    ELSE_KW  desplazar e ir al estado 54

    $default  reduce usando la regla 51 (if_els_stmt)

    else_stmt    ir al estado 55
    els_if_stmt  ir al estado 56


Estado 30

   50 conditional: switch_stmt •

    $default  reduce usando la regla 50 (conditional)


Estado 31

   12 exp_wth_bl: exception •

    $default  reduce usando la regla 12 (exp_wth_bl)


Estado 32

   69 exception: try_catch •
   70          | try_catch • FINALLY_KW LEFT_BRACKET block RIGHT_BRACKET

    FINALLY_KW  desplazar e ir al estado 57

    $default  reduce usando la regla 69 (exception)


Estado 33

    6 exp: instance •

    $default  reduce usando la regla 6 (exp)


Estado 34

   81 instance: inst_id •
   82         | inst_id • OP_ASSIGN exp_op

    OP_ASSIGN  desplazar e ir al estado 58

    $default  reduce usando la regla 81 (instance)


Estado 35

   83 inst_id: type • IDENTIFIER

    IDENTIFIER  desplazar e ir al estado 59


Estado 36

  123 inc_dec: var_value • ops_inc_dec
  134 asingn: var_value • OP_ASSIGN exp_op
  135       | var_value • OP_ADD_ASSIGN exp_op
  136       | var_value • ops_asingn exp_op

    OP_ASSIGN      desplazar e ir al estado 60
    OP_ADD_ASSIGN  desplazar e ir al estado 61
    OP_SUB_ASSIGN  desplazar e ir al estado 62
    OP_MUL_ASSIGN  desplazar e ir al estado 63
    OP_DIV_ASSIGN  desplazar e ir al estado 64
    OP_MOD_ASSIGN  desplazar e ir al estado 65
    OP_INC         desplazar e ir al estado 3
    OP_DEC         desplazar e ir al estado 4

    ops_inc_dec  ir al estado 66
    ops_asingn   ir al estado 67


Estado 37

    7 exp: inc_dec •

    $default  reduce usando la regla 7 (exp)


Estado 38

  124 inc_dec: ops_inc_dec • var_value

    D_COLON     desplazar e ir al estado 5
    IDENTIFIER  desplazar e ir al estado 68

    var_value  ir al estado 69


Estado 39

    8 exp: func_call •

    $default  reduce usando la regla 8 (exp)


Estado 40

    9 exp: asingn •

    $default  reduce usando la regla 9 (exp)


Estado 41

   97 var_value: D_COLON IDENTIFIER •

    $default  reduce usando la regla 97 (var_value)


Estado 42

   36 loop: FOR_KW LEFT_PARENT • for_decl RIGHT_PARENT std_block_d

    IDENTIFIER  desplazar e ir al estado 70

    for_decl     ir al estado 71
    for_vrs_dec  ir al estado 72
    for_var      ir al estado 73


Estado 43

   48 while_exp: WHILE_KW LEFT_PARENT • exp_op RIGHT_PARENT

    OP_SUB       desplazar e ir al estado 74
    OP_NOT       desplazar e ir al estado 75
    OP_INC       desplazar e ir al estado 3
    OP_DEC       desplazar e ir al estado 4
    LEFT_PARENT  desplazar e ir al estado 76
    D_COLON      desplazar e ir al estado 5
    TRUE_KW      desplazar e ir al estado 77
    FALSE_KW     desplazar e ir al estado 78
    CHAR         desplazar e ir al estado 79
    STRING       desplazar e ir al estado 80
    NUM          desplazar e ir al estado 81
    NUM_DEC      desplazar e ir al estado 82
    IDENTIFIER   desplazar e ir al estado 18

    value_data   ir al estado 83
    var_value    ir al estado 84
    exp_op       ir al estado 85
    inc_dec      ir al estado 86
    ops_inc_dec  ir al estado 38
    func_call    ir al estado 87


Estado 44

   16 std_block_d: LEFT_BRACKET • $@1 block RIGHT_BRACKET

    $default  reduce usando la regla 15 ($@1)

    $@1  ir al estado 88


Estado 45

   38 loop: DO_KW std_block_d • while_exp

    WHILE_KW  desplazar e ir al estado 7

    while_exp  ir al estado 89


Estado 46

   17 func_dec: FUNCTION_KW IDENTIFIER • func_params func_type

    LEFT_PARENT  desplazar e ir al estado 90

    func_params  ir al estado 91


Estado 47

   71 try_catch: TRY_KW LEFT_BRACKET • block RIGHT_BRACKET CATCH_KW LEFT_PARENT IDENTIFIER RIGHT_PARENT LEFT_BRACKET block RIGHT_BRACKET

    $default  reduce usando la regla 18 (block)

    block  ir al estado 92


Estado 48

   55 if_stmt: IF_KW LEFT_PARENT • exp_op $@2 RIGHT_PARENT std_block_d

    OP_SUB       desplazar e ir al estado 74
    OP_NOT       desplazar e ir al estado 75
    OP_INC       desplazar e ir al estado 3
    OP_DEC       desplazar e ir al estado 4
    LEFT_PARENT  desplazar e ir al estado 76
    D_COLON      desplazar e ir al estado 5
    TRUE_KW      desplazar e ir al estado 77
    FALSE_KW     desplazar e ir al estado 78
    CHAR         desplazar e ir al estado 79
    STRING       desplazar e ir al estado 80
    NUM          desplazar e ir al estado 81
    NUM_DEC      desplazar e ir al estado 82
    IDENTIFIER   desplazar e ir al estado 18

    value_data   ir al estado 83
    var_value    ir al estado 84
    exp_op       ir al estado 93
    inc_dec      ir al estado 86
    ops_inc_dec  ir al estado 38
    func_call    ir al estado 87


Estado 49

   61 switch_stmt: SWITCH_KW LEFT_PARENT • exp_op RIGHT_PARENT LEFT_BRACKET EOL switch_block $@3 RIGHT_BRACKET
   62            | SWITCH_KW LEFT_PARENT • exp_op RIGHT_PARENT LEFT_BRACKET EOL RIGHT_BRACKET

    OP_SUB       desplazar e ir al estado 74
    OP_NOT       desplazar e ir al estado 75
    OP_INC       desplazar e ir al estado 3
    OP_DEC       desplazar e ir al estado 4
    LEFT_PARENT  desplazar e ir al estado 76
    D_COLON      desplazar e ir al estado 5
    TRUE_KW      desplazar e ir al estado 77
    FALSE_KW     desplazar e ir al estado 78
    CHAR         desplazar e ir al estado 79
    STRING       desplazar e ir al estado 80
    NUM          desplazar e ir al estado 81
    NUM_DEC      desplazar e ir al estado 82
    IDENTIFIER   desplazar e ir al estado 18

    value_data   ir al estado 83
    var_value    ir al estado 84
    exp_op       ir al estado 94
    inc_dec      ir al estado 86
    ops_inc_dec  ir al estado 38
    func_call    ir al estado 87


Estado 50

  127 func_call: IDENTIFIER LEFT_PARENT • RIGHT_PARENT
  128          | IDENTIFIER LEFT_PARENT • func_args RIGHT_PARENT

    OP_SUB        desplazar e ir al estado 74
    OP_NOT        desplazar e ir al estado 75
    OP_INC        desplazar e ir al estado 3
    OP_DEC        desplazar e ir al estado 4
    LEFT_PARENT   desplazar e ir al estado 76
    RIGHT_PARENT  desplazar e ir al estado 95
    D_COLON       desplazar e ir al estado 5
    TRUE_KW       desplazar e ir al estado 77
    FALSE_KW      desplazar e ir al estado 78
    CHAR          desplazar e ir al estado 79
    STRING        desplazar e ir al estado 80
    NUM           desplazar e ir al estado 81
    NUM_DEC       desplazar e ir al estado 82
    IDENTIFIER    desplazar e ir al estado 96

    value_data   ir al estado 83
    var_value    ir al estado 84
    exp_op       ir al estado 97
    inc_dec      ir al estado 86
    ops_inc_dec  ir al estado 38
    func_call    ir al estado 87
    func_args    ir al estado 98
    func_arg     ir al estado 99


Estado 51

    4 line: exp EOL •

    $default  reduce usando la regla 4 (line)


Estado 52

   14 func: func_dec std_block_d •

    $default  reduce usando la regla 14 (func)


Estado 53

   37 loop: while_exp std_block_d •

    $default  reduce usando la regla 37 (loop)


Estado 54

   56 else_stmt: ELSE_KW • std_block_d
   57 els_if_stmt: ELSE_KW • if_stmt

    LEFT_BRACKET  desplazar e ir al estado 44
    IF_KW         desplazar e ir al estado 16

    std_block_d  ir al estado 100
    if_stmt      ir al estado 101


Estado 55

   52 if_els_stmt: if_stmt else_stmt •

    $default  reduce usando la regla 52 (if_els_stmt)


Estado 56

   53 if_els_stmt: if_stmt els_if_stmt •
   58 els_if_stmt: els_if_stmt • ELSE_KW if_stmt
   59            | els_if_stmt • else_stmt

    ELSE_KW  desplazar e ir al estado 102

    $default  reduce usando la regla 53 (if_els_stmt)

    else_stmt  ir al estado 103


Estado 57

   70 exception: try_catch FINALLY_KW • LEFT_BRACKET block RIGHT_BRACKET

    LEFT_BRACKET  desplazar e ir al estado 104


Estado 58

   82 instance: inst_id OP_ASSIGN • exp_op

    OP_SUB       desplazar e ir al estado 74
    OP_NOT       desplazar e ir al estado 75
    OP_INC       desplazar e ir al estado 3
    OP_DEC       desplazar e ir al estado 4
    LEFT_PARENT  desplazar e ir al estado 76
    D_COLON      desplazar e ir al estado 5
    TRUE_KW      desplazar e ir al estado 77
    FALSE_KW     desplazar e ir al estado 78
    CHAR         desplazar e ir al estado 79
    STRING       desplazar e ir al estado 80
    NUM          desplazar e ir al estado 81
    NUM_DEC      desplazar e ir al estado 82
    IDENTIFIER   desplazar e ir al estado 18

    value_data   ir al estado 83
    var_value    ir al estado 84
    exp_op       ir al estado 105
    inc_dec      ir al estado 86
    ops_inc_dec  ir al estado 38
    func_call    ir al estado 87


Estado 59

   83 inst_id: type IDENTIFIER •

    $default  reduce usando la regla 83 (inst_id)


Estado 60

  134 asingn: var_value OP_ASSIGN • exp_op

    OP_SUB       desplazar e ir al estado 74
    OP_NOT       desplazar e ir al estado 75
    OP_INC       desplazar e ir al estado 3
    OP_DEC       desplazar e ir al estado 4
    LEFT_PARENT  desplazar e ir al estado 76
    D_COLON      desplazar e ir al estado 5
    TRUE_KW      desplazar e ir al estado 77
    FALSE_KW     desplazar e ir al estado 78
    CHAR         desplazar e ir al estado 79
    STRING       desplazar e ir al estado 80
    NUM          desplazar e ir al estado 81
    NUM_DEC      desplazar e ir al estado 82
    IDENTIFIER   desplazar e ir al estado 18

    value_data   ir al estado 83
    var_value    ir al estado 84
    exp_op       ir al estado 106
    inc_dec      ir al estado 86
    ops_inc_dec  ir al estado 38
    func_call    ir al estado 87


Estado 61

  135 asingn: var_value OP_ADD_ASSIGN • exp_op

    OP_SUB       desplazar e ir al estado 74
    OP_NOT       desplazar e ir al estado 75
    OP_INC       desplazar e ir al estado 3
    OP_DEC       desplazar e ir al estado 4
    LEFT_PARENT  desplazar e ir al estado 76
    D_COLON      desplazar e ir al estado 5
    TRUE_KW      desplazar e ir al estado 77
    FALSE_KW     desplazar e ir al estado 78
    CHAR         desplazar e ir al estado 79
    STRING       desplazar e ir al estado 80
    NUM          desplazar e ir al estado 81
    NUM_DEC      desplazar e ir al estado 82
    IDENTIFIER   desplazar e ir al estado 18

    value_data   ir al estado 83
    var_value    ir al estado 84
    exp_op       ir al estado 107
    inc_dec      ir al estado 86
    ops_inc_dec  ir al estado 38
    func_call    ir al estado 87


Estado 62

  137 ops_asingn: OP_SUB_ASSIGN •

    $default  reduce usando la regla 137 (ops_asingn)


Estado 63

  138 ops_asingn: OP_MUL_ASSIGN •

    $default  reduce usando la regla 138 (ops_asingn)


Estado 64

  139 ops_asingn: OP_DIV_ASSIGN •

    $default  reduce usando la regla 139 (ops_asingn)


Estado 65

  140 ops_asingn: OP_MOD_ASSIGN •

    $default  reduce usando la regla 140 (ops_asingn)


Estado 66

  123 inc_dec: var_value ops_inc_dec •

    $default  reduce usando la regla 123 (inc_dec)


Estado 67

  136 asingn: var_value ops_asingn • exp_op

    OP_SUB       desplazar e ir al estado 74
    OP_NOT       desplazar e ir al estado 75
    OP_INC       desplazar e ir al estado 3
    OP_DEC       desplazar e ir al estado 4
    LEFT_PARENT  desplazar e ir al estado 76
    D_COLON      desplazar e ir al estado 5
    TRUE_KW      desplazar e ir al estado 77
    FALSE_KW     desplazar e ir al estado 78
    CHAR         desplazar e ir al estado 79
    STRING       desplazar e ir al estado 80
    NUM          desplazar e ir al estado 81
    NUM_DEC      desplazar e ir al estado 82
    IDENTIFIER   desplazar e ir al estado 18

    value_data   ir al estado 83
    var_value    ir al estado 84
    exp_op       ir al estado 108
    inc_dec      ir al estado 86
    ops_inc_dec  ir al estado 38
    func_call    ir al estado 87


Estado 68

   96 var_value: IDENTIFIER •

    $default  reduce usando la regla 96 (var_value)


Estado 69

  124 inc_dec: ops_inc_dec var_value •

    $default  reduce usando la regla 124 (inc_dec)


Estado 70

   42 for_var: IDENTIFIER • OP_ASSIGN exp_op

    OP_ASSIGN  desplazar e ir al estado 109


Estado 71

   36 loop: FOR_KW LEFT_PARENT for_decl • RIGHT_PARENT std_block_d

    RIGHT_PARENT  desplazar e ir al estado 110


Estado 72

   39 for_decl: for_vrs_dec • COLON for_cond COLON for_sec

    COLON  desplazar e ir al estado 111


Estado 73

   40 for_vrs_dec: for_var •
   41            | for_var • COMMA for_vrs_dec

    COMMA  desplazar e ir al estado 112

    $default  reduce usando la regla 40 (for_vrs_dec)


Estado 74

  103 exp_op: OP_SUB • exp_op

    OP_SUB       desplazar e ir al estado 74
    OP_NOT       desplazar e ir al estado 75
    OP_INC       desplazar e ir al estado 3
    OP_DEC       desplazar e ir al estado 4
    LEFT_PARENT  desplazar e ir al estado 76
    D_COLON      desplazar e ir al estado 5
    TRUE_KW      desplazar e ir al estado 77
    FALSE_KW     desplazar e ir al estado 78
    CHAR         desplazar e ir al estado 79
    STRING       desplazar e ir al estado 80
    NUM          desplazar e ir al estado 81
    NUM_DEC      desplazar e ir al estado 82
    IDENTIFIER   desplazar e ir al estado 18

    value_data   ir al estado 83
    var_value    ir al estado 84
    exp_op       ir al estado 113
    inc_dec      ir al estado 86
    ops_inc_dec  ir al estado 38
    func_call    ir al estado 87


Estado 75

  112 exp_op: OP_NOT • exp_op

    OP_SUB       desplazar e ir al estado 74
    OP_NOT       desplazar e ir al estado 75
    OP_INC       desplazar e ir al estado 3
    OP_DEC       desplazar e ir al estado 4
    LEFT_PARENT  desplazar e ir al estado 76
    D_COLON      desplazar e ir al estado 5
    TRUE_KW      desplazar e ir al estado 77
    FALSE_KW     desplazar e ir al estado 78
    CHAR         desplazar e ir al estado 79
    STRING       desplazar e ir al estado 80
    NUM          desplazar e ir al estado 81
    NUM_DEC      desplazar e ir al estado 82
    IDENTIFIER   desplazar e ir al estado 18

    value_data   ir al estado 83
    var_value    ir al estado 84
    exp_op       ir al estado 114
    inc_dec      ir al estado 86
    ops_inc_dec  ir al estado 38
    func_call    ir al estado 87


Estado 76

  119 exp_op: LEFT_PARENT • exp_op RIGHT_PARENT

    OP_SUB       desplazar e ir al estado 74
    OP_NOT       desplazar e ir al estado 75
    OP_INC       desplazar e ir al estado 3
    OP_DEC       desplazar e ir al estado 4
    LEFT_PARENT  desplazar e ir al estado 76
    D_COLON      desplazar e ir al estado 5
    TRUE_KW      desplazar e ir al estado 77
    FALSE_KW     desplazar e ir al estado 78
    CHAR         desplazar e ir al estado 79
    STRING       desplazar e ir al estado 80
    NUM          desplazar e ir al estado 81
    NUM_DEC      desplazar e ir al estado 82
    IDENTIFIER   desplazar e ir al estado 18

    value_data   ir al estado 83
    var_value    ir al estado 84
    exp_op       ir al estado 115
    inc_dec      ir al estado 86
    ops_inc_dec  ir al estado 38
    func_call    ir al estado 87


Estado 77

   92 value_data: TRUE_KW •

    $default  reduce usando la regla 92 (value_data)


Estado 78

   93 value_data: FALSE_KW •

    $default  reduce usando la regla 93 (value_data)


Estado 79

   89 value_data: CHAR •

    $default  reduce usando la regla 89 (value_data)


Estado 80

   94 value_data: STRING •

    $default  reduce usando la regla 94 (value_data)


Estado 81

   90 value_data: NUM •

    $default  reduce usando la regla 90 (value_data)


Estado 82

   91 value_data: NUM_DEC •

    $default  reduce usando la regla 91 (value_data)


Estado 83

  120 exp_op: value_data •

    $default  reduce usando la regla 120 (exp_op)


Estado 84

   95 value_data: var_value •
  113 exp_op: var_value • OP_ASSIGN exp_op
  114       | var_value • OP_ADD_ASSIGN exp_op
  115       | var_value • OP_SUB_ASSIGN exp_op
  116       | var_value • OP_MUL_ASSIGN exp_op
  117       | var_value • OP_DIV_ASSIGN exp_op
  118       | var_value • OP_MOD_ASSIGN exp_op
  123 inc_dec: var_value • ops_inc_dec

    OP_ASSIGN      desplazar e ir al estado 116
    OP_ADD_ASSIGN  desplazar e ir al estado 117
    OP_SUB_ASSIGN  desplazar e ir al estado 118
    OP_MUL_ASSIGN  desplazar e ir al estado 119
    OP_DIV_ASSIGN  desplazar e ir al estado 120
    OP_MOD_ASSIGN  desplazar e ir al estado 121
    OP_INC         desplazar e ir al estado 3
    OP_DEC         desplazar e ir al estado 4

    $default  reduce usando la regla 95 (value_data)

    ops_inc_dec  ir al estado 66


Estado 85

   48 while_exp: WHILE_KW LEFT_PARENT exp_op • RIGHT_PARENT
   98 exp_op: exp_op • OP_ADD exp_op
   99       | exp_op • OP_SUB exp_op
  100       | exp_op • OP_MUL exp_op
  101       | exp_op • OP_DIV exp_op
  102       | exp_op • OP_MOD exp_op
  104       | exp_op • OP_GT exp_op
  105       | exp_op • OP_LT exp_op
  106       | exp_op • OP_GTE exp_op
  107       | exp_op • OP_LTE exp_op
  108       | exp_op • OP_EQ exp_op
  109       | exp_op • OP_NEQ exp_op
  110       | exp_op • OP_AND exp_op
  111       | exp_op • OP_OR exp_op

    OP_AND        desplazar e ir al estado 122
    OP_OR         desplazar e ir al estado 123
    OP_EQ         desplazar e ir al estado 124
    OP_NEQ        desplazar e ir al estado 125
    OP_GT         desplazar e ir al estado 126
    OP_LT         desplazar e ir al estado 127
    OP_GTE        desplazar e ir al estado 128
    OP_LTE        desplazar e ir al estado 129
    OP_ADD        desplazar e ir al estado 130
    OP_SUB        desplazar e ir al estado 131
    OP_MUL        desplazar e ir al estado 132
    OP_DIV        desplazar e ir al estado 133
    OP_MOD        desplazar e ir al estado 134
    RIGHT_PARENT  desplazar e ir al estado 135


Estado 86

  122 exp_op: inc_dec •

    $default  reduce usando la regla 122 (exp_op)


Estado 87

  121 exp_op: func_call •

    $default  reduce usando la regla 121 (exp_op)


Estado 88

   16 std_block_d: LEFT_BRACKET $@1 • block RIGHT_BRACKET

    $default  reduce usando la regla 18 (block)

    block  ir al estado 136


Estado 89

   38 loop: DO_KW std_block_d while_exp •

    $default  reduce usando la regla 38 (loop)


Estado 90

   74 func_params: LEFT_PARENT • params_sec RIGHT_PARENT
   75            | LEFT_PARENT • RIGHT_PARENT

    RIGHT_PARENT  desplazar e ir al estado 137
    IDENTIFIER    desplazar e ir al estado 138

    params_sec  ir al estado 139
    param       ir al estado 140


Estado 91

   17 func_dec: FUNCTION_KW IDENTIFIER func_params • func_type

    COLON  desplazar e ir al estado 141

    func_type  ir al estado 142


Estado 92

   19 block: block • block_line
   71 try_catch: TRY_KW LEFT_BRACKET block • RIGHT_BRACKET CATCH_KW LEFT_PARENT IDENTIFIER RIGHT_PARENT LEFT_BRACKET block RIGHT_BRACKET

    THROW_KW       desplazar e ir al estado 143
    OP_INC         desplazar e ir al estado 3
    OP_DEC         desplazar e ir al estado 4
    RIGHT_BRACKET  desplazar e ir al estado 144
    D_COLON        desplazar e ir al estado 5
    FOR_KW         desplazar e ir al estado 6
    WHILE_KW       desplazar e ir al estado 7
    DO_KW          desplazar e ir al estado 8
    BREAK_KW       desplazar e ir al estado 145
    RETURN_KW      desplazar e ir al estado 146
    TRY_KW         desplazar e ir al estado 10
    CHAR_KW        desplazar e ir al estado 11
    INT_KW         desplazar e ir al estado 12
    FLOAT_KW       desplazar e ir al estado 13
    BOOL_KW        desplazar e ir al estado 14
    STRING_KW      desplazar e ir al estado 15
    IF_KW          desplazar e ir al estado 16
    SWITCH_KW      desplazar e ir al estado 17
    IDENTIFIER     desplazar e ir al estado 18
    EOL            desplazar e ir al estado 147

    block_line   ir al estado 148
    block_exp    ir al estado 149
    rtrn         ir al estado 150
    throw_dec    ir al estado 151
    loop         ir al estado 152
    while_exp    ir al estado 26
    conditional  ir al estado 153
    if_els_stmt  ir al estado 28
    if_stmt      ir al estado 29
    switch_stmt  ir al estado 30
    exception    ir al estado 154
    try_catch    ir al estado 32
    instance     ir al estado 155
    inst_id      ir al estado 34
    type         ir al estado 35
    var_value    ir al estado 36
    inc_dec      ir al estado 156
    ops_inc_dec  ir al estado 38
    func_call    ir al estado 157
    asingn       ir al estado 158


Estado 93

   55 if_stmt: IF_KW LEFT_PARENT exp_op • $@2 RIGHT_PARENT std_block_d
   98 exp_op: exp_op • OP_ADD exp_op
   99       | exp_op • OP_SUB exp_op
  100       | exp_op • OP_MUL exp_op
  101       | exp_op • OP_DIV exp_op
  102       | exp_op • OP_MOD exp_op
  104       | exp_op • OP_GT exp_op
  105       | exp_op • OP_LT exp_op
  106       | exp_op • OP_GTE exp_op
  107       | exp_op • OP_LTE exp_op
  108       | exp_op • OP_EQ exp_op
  109       | exp_op • OP_NEQ exp_op
  110       | exp_op • OP_AND exp_op
  111       | exp_op • OP_OR exp_op

    OP_AND  desplazar e ir al estado 122
    OP_OR   desplazar e ir al estado 123
    OP_EQ   desplazar e ir al estado 124
    OP_NEQ  desplazar e ir al estado 125
    OP_GT   desplazar e ir al estado 126
    OP_LT   desplazar e ir al estado 127
    OP_GTE  desplazar e ir al estado 128
    OP_LTE  desplazar e ir al estado 129
    OP_ADD  desplazar e ir al estado 130
    OP_SUB  desplazar e ir al estado 131
    OP_MUL  desplazar e ir al estado 132
    OP_DIV  desplazar e ir al estado 133
    OP_MOD  desplazar e ir al estado 134

    $default  reduce usando la regla 54 ($@2)

    $@2  ir al estado 159


Estado 94

   61 switch_stmt: SWITCH_KW LEFT_PARENT exp_op • RIGHT_PARENT LEFT_BRACKET EOL switch_block $@3 RIGHT_BRACKET
   62            | SWITCH_KW LEFT_PARENT exp_op • RIGHT_PARENT LEFT_BRACKET EOL RIGHT_BRACKET
   98 exp_op: exp_op • OP_ADD exp_op
   99       | exp_op • OP_SUB exp_op
  100       | exp_op • OP_MUL exp_op
  101       | exp_op • OP_DIV exp_op
  102       | exp_op • OP_MOD exp_op
  104       | exp_op • OP_GT exp_op
  105       | exp_op • OP_LT exp_op
  106       | exp_op • OP_GTE exp_op
  107       | exp_op • OP_LTE exp_op
  108       | exp_op • OP_EQ exp_op
  109       | exp_op • OP_NEQ exp_op
  110       | exp_op • OP_AND exp_op
  111       | exp_op • OP_OR exp_op

    OP_AND        desplazar e ir al estado 122
    OP_OR         desplazar e ir al estado 123
    OP_EQ         desplazar e ir al estado 124
    OP_NEQ        desplazar e ir al estado 125
    OP_GT         desplazar e ir al estado 126
    OP_LT         desplazar e ir al estado 127
    OP_GTE        desplazar e ir al estado 128
    OP_LTE        desplazar e ir al estado 129
    OP_ADD        desplazar e ir al estado 130
    OP_SUB        desplazar e ir al estado 131
    OP_MUL        desplazar e ir al estado 132
    OP_DIV        desplazar e ir al estado 133
    OP_MOD        desplazar e ir al estado 134
    RIGHT_PARENT  desplazar e ir al estado 160


Estado 95

  127 func_call: IDENTIFIER LEFT_PARENT RIGHT_PARENT •

    $default  reduce usando la regla 127 (func_call)


Estado 96

   96 var_value: IDENTIFIER •
  127 func_call: IDENTIFIER • LEFT_PARENT RIGHT_PARENT
  128          | IDENTIFIER • LEFT_PARENT func_args RIGHT_PARENT
  132 func_arg: IDENTIFIER • COLON exp_op

    LEFT_PARENT  desplazar e ir al estado 50
    COLON        desplazar e ir al estado 161

    $default  reduce usando la regla 96 (var_value)


Estado 97

   98 exp_op: exp_op • OP_ADD exp_op
   99       | exp_op • OP_SUB exp_op
  100       | exp_op • OP_MUL exp_op
  101       | exp_op • OP_DIV exp_op
  102       | exp_op • OP_MOD exp_op
  104       | exp_op • OP_GT exp_op
  105       | exp_op • OP_LT exp_op
  106       | exp_op • OP_GTE exp_op
  107       | exp_op • OP_LTE exp_op
  108       | exp_op • OP_EQ exp_op
  109       | exp_op • OP_NEQ exp_op
  110       | exp_op • OP_AND exp_op
  111       | exp_op • OP_OR exp_op
  133 func_arg: exp_op •

    OP_AND  desplazar e ir al estado 122
    OP_OR   desplazar e ir al estado 123
    OP_EQ   desplazar e ir al estado 124
    OP_NEQ  desplazar e ir al estado 125
    OP_GT   desplazar e ir al estado 126
    OP_LT   desplazar e ir al estado 127
    OP_GTE  desplazar e ir al estado 128
    OP_LTE  desplazar e ir al estado 129
    OP_ADD  desplazar e ir al estado 130
    OP_SUB  desplazar e ir al estado 131
    OP_MUL  desplazar e ir al estado 132
    OP_DIV  desplazar e ir al estado 133
    OP_MOD  desplazar e ir al estado 134

    $default  reduce usando la regla 133 (func_arg)


Estado 98

  128 func_call: IDENTIFIER LEFT_PARENT func_args • RIGHT_PARENT

    RIGHT_PARENT  desplazar e ir al estado 162


Estado 99

  129 func_args: func_arg •
  130          | func_arg • COMMA func_args
  131          | func_arg • COMMA EOL func_args

    COMMA  desplazar e ir al estado 163

    $default  reduce usando la regla 129 (func_args)


Estado 100

   56 else_stmt: ELSE_KW std_block_d •

    $default  reduce usando la regla 56 (else_stmt)


Estado 101

   57 els_if_stmt: ELSE_KW if_stmt •

    $default  reduce usando la regla 57 (els_if_stmt)


Estado 102

   56 else_stmt: ELSE_KW • std_block_d
   58 els_if_stmt: els_if_stmt ELSE_KW • if_stmt

    LEFT_BRACKET  desplazar e ir al estado 44
    IF_KW         desplazar e ir al estado 16

    std_block_d  ir al estado 100
    if_stmt      ir al estado 164


Estado 103

   59 els_if_stmt: els_if_stmt else_stmt •

    $default  reduce usando la regla 59 (els_if_stmt)


Estado 104

   70 exception: try_catch FINALLY_KW LEFT_BRACKET • block RIGHT_BRACKET

    $default  reduce usando la regla 18 (block)

    block  ir al estado 165


Estado 105

   82 instance: inst_id OP_ASSIGN exp_op •
   98 exp_op: exp_op • OP_ADD exp_op
   99       | exp_op • OP_SUB exp_op
  100       | exp_op • OP_MUL exp_op
  101       | exp_op • OP_DIV exp_op
  102       | exp_op • OP_MOD exp_op
  104       | exp_op • OP_GT exp_op
  105       | exp_op • OP_LT exp_op
  106       | exp_op • OP_GTE exp_op
  107       | exp_op • OP_LTE exp_op
  108       | exp_op • OP_EQ exp_op
  109       | exp_op • OP_NEQ exp_op
  110       | exp_op • OP_AND exp_op
  111       | exp_op • OP_OR exp_op

    OP_AND  desplazar e ir al estado 122
    OP_OR   desplazar e ir al estado 123
    OP_EQ   desplazar e ir al estado 124
    OP_NEQ  desplazar e ir al estado 125
    OP_GT   desplazar e ir al estado 126
    OP_LT   desplazar e ir al estado 127
    OP_GTE  desplazar e ir al estado 128
    OP_LTE  desplazar e ir al estado 129
    OP_ADD  desplazar e ir al estado 130
    OP_SUB  desplazar e ir al estado 131
    OP_MUL  desplazar e ir al estado 132
    OP_DIV  desplazar e ir al estado 133
    OP_MOD  desplazar e ir al estado 134

    $default  reduce usando la regla 82 (instance)


Estado 106

   98 exp_op: exp_op • OP_ADD exp_op
   99       | exp_op • OP_SUB exp_op
  100       | exp_op • OP_MUL exp_op
  101       | exp_op • OP_DIV exp_op
  102       | exp_op • OP_MOD exp_op
  104       | exp_op • OP_GT exp_op
  105       | exp_op • OP_LT exp_op
  106       | exp_op • OP_GTE exp_op
  107       | exp_op • OP_LTE exp_op
  108       | exp_op • OP_EQ exp_op
  109       | exp_op • OP_NEQ exp_op
  110       | exp_op • OP_AND exp_op
  111       | exp_op • OP_OR exp_op
  134 asingn: var_value OP_ASSIGN exp_op •

    OP_AND  desplazar e ir al estado 122
    OP_OR   desplazar e ir al estado 123
    OP_EQ   desplazar e ir al estado 124
    OP_NEQ  desplazar e ir al estado 125
    OP_GT   desplazar e ir al estado 126
    OP_LT   desplazar e ir al estado 127
    OP_GTE  desplazar e ir al estado 128
    OP_LTE  desplazar e ir al estado 129
    OP_ADD  desplazar e ir al estado 130
    OP_SUB  desplazar e ir al estado 131
    OP_MUL  desplazar e ir al estado 132
    OP_DIV  desplazar e ir al estado 133
    OP_MOD  desplazar e ir al estado 134

    $default  reduce usando la regla 134 (asingn)


Estado 107

   98 exp_op: exp_op • OP_ADD exp_op
   99       | exp_op • OP_SUB exp_op
  100       | exp_op • OP_MUL exp_op
  101       | exp_op • OP_DIV exp_op
  102       | exp_op • OP_MOD exp_op
  104       | exp_op • OP_GT exp_op
  105       | exp_op • OP_LT exp_op
  106       | exp_op • OP_GTE exp_op
  107       | exp_op • OP_LTE exp_op
  108       | exp_op • OP_EQ exp_op
  109       | exp_op • OP_NEQ exp_op
  110       | exp_op • OP_AND exp_op
  111       | exp_op • OP_OR exp_op
  135 asingn: var_value OP_ADD_ASSIGN exp_op •

    OP_AND  desplazar e ir al estado 122
    OP_OR   desplazar e ir al estado 123
    OP_EQ   desplazar e ir al estado 124
    OP_NEQ  desplazar e ir al estado 125
    OP_GT   desplazar e ir al estado 126
    OP_LT   desplazar e ir al estado 127
    OP_GTE  desplazar e ir al estado 128
    OP_LTE  desplazar e ir al estado 129
    OP_ADD  desplazar e ir al estado 130
    OP_SUB  desplazar e ir al estado 131
    OP_MUL  desplazar e ir al estado 132
    OP_DIV  desplazar e ir al estado 133
    OP_MOD  desplazar e ir al estado 134

    $default  reduce usando la regla 135 (asingn)


Estado 108

   98 exp_op: exp_op • OP_ADD exp_op
   99       | exp_op • OP_SUB exp_op
  100       | exp_op • OP_MUL exp_op
  101       | exp_op • OP_DIV exp_op
  102       | exp_op • OP_MOD exp_op
  104       | exp_op • OP_GT exp_op
  105       | exp_op • OP_LT exp_op
  106       | exp_op • OP_GTE exp_op
  107       | exp_op • OP_LTE exp_op
  108       | exp_op • OP_EQ exp_op
  109       | exp_op • OP_NEQ exp_op
  110       | exp_op • OP_AND exp_op
  111       | exp_op • OP_OR exp_op
  136 asingn: var_value ops_asingn exp_op •

    OP_AND  desplazar e ir al estado 122
    OP_OR   desplazar e ir al estado 123
    OP_EQ   desplazar e ir al estado 124
    OP_NEQ  desplazar e ir al estado 125
    OP_GT   desplazar e ir al estado 126
    OP_LT   desplazar e ir al estado 127
    OP_GTE  desplazar e ir al estado 128
    OP_LTE  desplazar e ir al estado 129
    OP_ADD  desplazar e ir al estado 130
    OP_SUB  desplazar e ir al estado 131
    OP_MUL  desplazar e ir al estado 132
    OP_DIV  desplazar e ir al estado 133
    OP_MOD  desplazar e ir al estado 134

    $default  reduce usando la regla 136 (asingn)


Estado 109

   42 for_var: IDENTIFIER OP_ASSIGN • exp_op

    OP_SUB       desplazar e ir al estado 74
    OP_NOT       desplazar e ir al estado 75
    OP_INC       desplazar e ir al estado 3
    OP_DEC       desplazar e ir al estado 4
    LEFT_PARENT  desplazar e ir al estado 76
    D_COLON      desplazar e ir al estado 5
    TRUE_KW      desplazar e ir al estado 77
    FALSE_KW     desplazar e ir al estado 78
    CHAR         desplazar e ir al estado 79
    STRING       desplazar e ir al estado 80
    NUM          desplazar e ir al estado 81
    NUM_DEC      desplazar e ir al estado 82
    IDENTIFIER   desplazar e ir al estado 18

    value_data   ir al estado 83
    var_value    ir al estado 84
    exp_op       ir al estado 166
    inc_dec      ir al estado 86
    ops_inc_dec  ir al estado 38
    func_call    ir al estado 87


Estado 110

   36 loop: FOR_KW LEFT_PARENT for_decl RIGHT_PARENT • std_block_d

    LEFT_BRACKET  desplazar e ir al estado 44

    std_block_d  ir al estado 167


Estado 111

   39 for_decl: for_vrs_dec COLON • for_cond COLON for_sec

    OP_SUB       desplazar e ir al estado 74
    OP_NOT       desplazar e ir al estado 75
    OP_INC       desplazar e ir al estado 3
    OP_DEC       desplazar e ir al estado 4
    LEFT_PARENT  desplazar e ir al estado 76
    D_COLON      desplazar e ir al estado 5
    TRUE_KW      desplazar e ir al estado 77
    FALSE_KW     desplazar e ir al estado 78
    CHAR         desplazar e ir al estado 79
    STRING       desplazar e ir al estado 80
    NUM          desplazar e ir al estado 81
    NUM_DEC      desplazar e ir al estado 82
    IDENTIFIER   desplazar e ir al estado 18

    for_cond     ir al estado 168
    value_data   ir al estado 83
    var_value    ir al estado 84
    exp_op       ir al estado 169
    inc_dec      ir al estado 86
    ops_inc_dec  ir al estado 38
    func_call    ir al estado 87


Estado 112

   41 for_vrs_dec: for_var COMMA • for_vrs_dec

    IDENTIFIER  desplazar e ir al estado 70

    for_vrs_dec  ir al estado 170
    for_var      ir al estado 73


Estado 113

   98 exp_op: exp_op • OP_ADD exp_op
   99       | exp_op • OP_SUB exp_op
  100       | exp_op • OP_MUL exp_op
  101       | exp_op • OP_DIV exp_op
  102       | exp_op • OP_MOD exp_op
  103       | OP_SUB exp_op •
  104       | exp_op • OP_GT exp_op
  105       | exp_op • OP_LT exp_op
  106       | exp_op • OP_GTE exp_op
  107       | exp_op • OP_LTE exp_op
  108       | exp_op • OP_EQ exp_op
  109       | exp_op • OP_NEQ exp_op
  110       | exp_op • OP_AND exp_op
  111       | exp_op • OP_OR exp_op

    $default  reduce usando la regla 103 (exp_op)


Estado 114

   98 exp_op: exp_op • OP_ADD exp_op
   99       | exp_op • OP_SUB exp_op
  100       | exp_op • OP_MUL exp_op
  101       | exp_op • OP_DIV exp_op
  102       | exp_op • OP_MOD exp_op
  104       | exp_op • OP_GT exp_op
  105       | exp_op • OP_LT exp_op
  106       | exp_op • OP_GTE exp_op
  107       | exp_op • OP_LTE exp_op
  108       | exp_op • OP_EQ exp_op
  109       | exp_op • OP_NEQ exp_op
  110       | exp_op • OP_AND exp_op
  111       | exp_op • OP_OR exp_op
  112       | OP_NOT exp_op •

    $default  reduce usando la regla 112 (exp_op)


Estado 115

   98 exp_op: exp_op • OP_ADD exp_op
   99       | exp_op • OP_SUB exp_op
  100       | exp_op • OP_MUL exp_op
  101       | exp_op • OP_DIV exp_op
  102       | exp_op • OP_MOD exp_op
  104       | exp_op • OP_GT exp_op
  105       | exp_op • OP_LT exp_op
  106       | exp_op • OP_GTE exp_op
  107       | exp_op • OP_LTE exp_op
  108       | exp_op • OP_EQ exp_op
  109       | exp_op • OP_NEQ exp_op
  110       | exp_op • OP_AND exp_op
  111       | exp_op • OP_OR exp_op
  119       | LEFT_PARENT exp_op • RIGHT_PARENT

    OP_AND        desplazar e ir al estado 122
    OP_OR         desplazar e ir al estado 123
    OP_EQ         desplazar e ir al estado 124
    OP_NEQ        desplazar e ir al estado 125
    OP_GT         desplazar e ir al estado 126
    OP_LT         desplazar e ir al estado 127
    OP_GTE        desplazar e ir al estado 128
    OP_LTE        desplazar e ir al estado 129
    OP_ADD        desplazar e ir al estado 130
    OP_SUB        desplazar e ir al estado 131
    OP_MUL        desplazar e ir al estado 132
    OP_DIV        desplazar e ir al estado 133
    OP_MOD        desplazar e ir al estado 134
    RIGHT_PARENT  desplazar e ir al estado 171


Estado 116

  113 exp_op: var_value OP_ASSIGN • exp_op

    OP_SUB       desplazar e ir al estado 74
    OP_NOT       desplazar e ir al estado 75
    OP_INC       desplazar e ir al estado 3
    OP_DEC       desplazar e ir al estado 4
    LEFT_PARENT  desplazar e ir al estado 76
    D_COLON      desplazar e ir al estado 5
    TRUE_KW      desplazar e ir al estado 77
    FALSE_KW     desplazar e ir al estado 78
    CHAR         desplazar e ir al estado 79
    STRING       desplazar e ir al estado 80
    NUM          desplazar e ir al estado 81
    NUM_DEC      desplazar e ir al estado 82
    IDENTIFIER   desplazar e ir al estado 18

    value_data   ir al estado 83
    var_value    ir al estado 84
    exp_op       ir al estado 172
    inc_dec      ir al estado 86
    ops_inc_dec  ir al estado 38
    func_call    ir al estado 87


Estado 117

  114 exp_op: var_value OP_ADD_ASSIGN • exp_op

    OP_SUB       desplazar e ir al estado 74
    OP_NOT       desplazar e ir al estado 75
    OP_INC       desplazar e ir al estado 3
    OP_DEC       desplazar e ir al estado 4
    LEFT_PARENT  desplazar e ir al estado 76
    D_COLON      desplazar e ir al estado 5
    TRUE_KW      desplazar e ir al estado 77
    FALSE_KW     desplazar e ir al estado 78
    CHAR         desplazar e ir al estado 79
    STRING       desplazar e ir al estado 80
    NUM          desplazar e ir al estado 81
    NUM_DEC      desplazar e ir al estado 82
    IDENTIFIER   desplazar e ir al estado 18

    value_data   ir al estado 83
    var_value    ir al estado 84
    exp_op       ir al estado 173
    inc_dec      ir al estado 86
    ops_inc_dec  ir al estado 38
    func_call    ir al estado 87


Estado 118

  115 exp_op: var_value OP_SUB_ASSIGN • exp_op

    OP_SUB       desplazar e ir al estado 74
    OP_NOT       desplazar e ir al estado 75
    OP_INC       desplazar e ir al estado 3
    OP_DEC       desplazar e ir al estado 4
    LEFT_PARENT  desplazar e ir al estado 76
    D_COLON      desplazar e ir al estado 5
    TRUE_KW      desplazar e ir al estado 77
    FALSE_KW     desplazar e ir al estado 78
    CHAR         desplazar e ir al estado 79
    STRING       desplazar e ir al estado 80
    NUM          desplazar e ir al estado 81
    NUM_DEC      desplazar e ir al estado 82
    IDENTIFIER   desplazar e ir al estado 18

    value_data   ir al estado 83
    var_value    ir al estado 84
    exp_op       ir al estado 174
    inc_dec      ir al estado 86
    ops_inc_dec  ir al estado 38
    func_call    ir al estado 87


Estado 119

  116 exp_op: var_value OP_MUL_ASSIGN • exp_op

    OP_SUB       desplazar e ir al estado 74
    OP_NOT       desplazar e ir al estado 75
    OP_INC       desplazar e ir al estado 3
    OP_DEC       desplazar e ir al estado 4
    LEFT_PARENT  desplazar e ir al estado 76
    D_COLON      desplazar e ir al estado 5
    TRUE_KW      desplazar e ir al estado 77
    FALSE_KW     desplazar e ir al estado 78
    CHAR         desplazar e ir al estado 79
    STRING       desplazar e ir al estado 80
    NUM          desplazar e ir al estado 81
    NUM_DEC      desplazar e ir al estado 82
    IDENTIFIER   desplazar e ir al estado 18

    value_data   ir al estado 83
    var_value    ir al estado 84
    exp_op       ir al estado 175
    inc_dec      ir al estado 86
    ops_inc_dec  ir al estado 38
    func_call    ir al estado 87


Estado 120

  117 exp_op: var_value OP_DIV_ASSIGN • exp_op

    OP_SUB       desplazar e ir al estado 74
    OP_NOT       desplazar e ir al estado 75
    OP_INC       desplazar e ir al estado 3
    OP_DEC       desplazar e ir al estado 4
    LEFT_PARENT  desplazar e ir al estado 76
    D_COLON      desplazar e ir al estado 5
    TRUE_KW      desplazar e ir al estado 77
    FALSE_KW     desplazar e ir al estado 78
    CHAR         desplazar e ir al estado 79
    STRING       desplazar e ir al estado 80
    NUM          desplazar e ir al estado 81
    NUM_DEC      desplazar e ir al estado 82
    IDENTIFIER   desplazar e ir al estado 18

    value_data   ir al estado 83
    var_value    ir al estado 84
    exp_op       ir al estado 176
    inc_dec      ir al estado 86
    ops_inc_dec  ir al estado 38
    func_call    ir al estado 87


Estado 121

  118 exp_op: var_value OP_MOD_ASSIGN • exp_op

    OP_SUB       desplazar e ir al estado 74
    OP_NOT       desplazar e ir al estado 75
    OP_INC       desplazar e ir al estado 3
    OP_DEC       desplazar e ir al estado 4
    LEFT_PARENT  desplazar e ir al estado 76
    D_COLON      desplazar e ir al estado 5
    TRUE_KW      desplazar e ir al estado 77
    FALSE_KW     desplazar e ir al estado 78
    CHAR         desplazar e ir al estado 79
    STRING       desplazar e ir al estado 80
    NUM          desplazar e ir al estado 81
    NUM_DEC      desplazar e ir al estado 82
    IDENTIFIER   desplazar e ir al estado 18

    value_data   ir al estado 83
    var_value    ir al estado 84
    exp_op       ir al estado 177
    inc_dec      ir al estado 86
    ops_inc_dec  ir al estado 38
    func_call    ir al estado 87


Estado 122

  110 exp_op: exp_op OP_AND • exp_op

    OP_SUB       desplazar e ir al estado 74
    OP_NOT       desplazar e ir al estado 75
    OP_INC       desplazar e ir al estado 3
    OP_DEC       desplazar e ir al estado 4
    LEFT_PARENT  desplazar e ir al estado 76
    D_COLON      desplazar e ir al estado 5
    TRUE_KW      desplazar e ir al estado 77
    FALSE_KW     desplazar e ir al estado 78
    CHAR         desplazar e ir al estado 79
    STRING       desplazar e ir al estado 80
    NUM          desplazar e ir al estado 81
    NUM_DEC      desplazar e ir al estado 82
    IDENTIFIER   desplazar e ir al estado 18

    value_data   ir al estado 83
    var_value    ir al estado 84
    exp_op       ir al estado 178
    inc_dec      ir al estado 86
    ops_inc_dec  ir al estado 38
    func_call    ir al estado 87


Estado 123

  111 exp_op: exp_op OP_OR • exp_op

    OP_SUB       desplazar e ir al estado 74
    OP_NOT       desplazar e ir al estado 75
    OP_INC       desplazar e ir al estado 3
    OP_DEC       desplazar e ir al estado 4
    LEFT_PARENT  desplazar e ir al estado 76
    D_COLON      desplazar e ir al estado 5
    TRUE_KW      desplazar e ir al estado 77
    FALSE_KW     desplazar e ir al estado 78
    CHAR         desplazar e ir al estado 79
    STRING       desplazar e ir al estado 80
    NUM          desplazar e ir al estado 81
    NUM_DEC      desplazar e ir al estado 82
    IDENTIFIER   desplazar e ir al estado 18

    value_data   ir al estado 83
    var_value    ir al estado 84
    exp_op       ir al estado 179
    inc_dec      ir al estado 86
    ops_inc_dec  ir al estado 38
    func_call    ir al estado 87


Estado 124

  108 exp_op: exp_op OP_EQ • exp_op

    OP_SUB       desplazar e ir al estado 74
    OP_NOT       desplazar e ir al estado 75
    OP_INC       desplazar e ir al estado 3
    OP_DEC       desplazar e ir al estado 4
    LEFT_PARENT  desplazar e ir al estado 76
    D_COLON      desplazar e ir al estado 5
    TRUE_KW      desplazar e ir al estado 77
    FALSE_KW     desplazar e ir al estado 78
    CHAR         desplazar e ir al estado 79
    STRING       desplazar e ir al estado 80
    NUM          desplazar e ir al estado 81
    NUM_DEC      desplazar e ir al estado 82
    IDENTIFIER   desplazar e ir al estado 18

    value_data   ir al estado 83
    var_value    ir al estado 84
    exp_op       ir al estado 180
    inc_dec      ir al estado 86
    ops_inc_dec  ir al estado 38
    func_call    ir al estado 87


Estado 125

  109 exp_op: exp_op OP_NEQ • exp_op

    OP_SUB       desplazar e ir al estado 74
    OP_NOT       desplazar e ir al estado 75
    OP_INC       desplazar e ir al estado 3
    OP_DEC       desplazar e ir al estado 4
    LEFT_PARENT  desplazar e ir al estado 76
    D_COLON      desplazar e ir al estado 5
    TRUE_KW      desplazar e ir al estado 77
    FALSE_KW     desplazar e ir al estado 78
    CHAR         desplazar e ir al estado 79
    STRING       desplazar e ir al estado 80
    NUM          desplazar e ir al estado 81
    NUM_DEC      desplazar e ir al estado 82
    IDENTIFIER   desplazar e ir al estado 18

    value_data   ir al estado 83
    var_value    ir al estado 84
    exp_op       ir al estado 181
    inc_dec      ir al estado 86
    ops_inc_dec  ir al estado 38
    func_call    ir al estado 87


Estado 126

  104 exp_op: exp_op OP_GT • exp_op

    OP_SUB       desplazar e ir al estado 74
    OP_NOT       desplazar e ir al estado 75
    OP_INC       desplazar e ir al estado 3
    OP_DEC       desplazar e ir al estado 4
    LEFT_PARENT  desplazar e ir al estado 76
    D_COLON      desplazar e ir al estado 5
    TRUE_KW      desplazar e ir al estado 77
    FALSE_KW     desplazar e ir al estado 78
    CHAR         desplazar e ir al estado 79
    STRING       desplazar e ir al estado 80
    NUM          desplazar e ir al estado 81
    NUM_DEC      desplazar e ir al estado 82
    IDENTIFIER   desplazar e ir al estado 18

    value_data   ir al estado 83
    var_value    ir al estado 84
    exp_op       ir al estado 182
    inc_dec      ir al estado 86
    ops_inc_dec  ir al estado 38
    func_call    ir al estado 87


Estado 127

  105 exp_op: exp_op OP_LT • exp_op

    OP_SUB       desplazar e ir al estado 74
    OP_NOT       desplazar e ir al estado 75
    OP_INC       desplazar e ir al estado 3
    OP_DEC       desplazar e ir al estado 4
    LEFT_PARENT  desplazar e ir al estado 76
    D_COLON      desplazar e ir al estado 5
    TRUE_KW      desplazar e ir al estado 77
    FALSE_KW     desplazar e ir al estado 78
    CHAR         desplazar e ir al estado 79
    STRING       desplazar e ir al estado 80
    NUM          desplazar e ir al estado 81
    NUM_DEC      desplazar e ir al estado 82
    IDENTIFIER   desplazar e ir al estado 18

    value_data   ir al estado 83
    var_value    ir al estado 84
    exp_op       ir al estado 183
    inc_dec      ir al estado 86
    ops_inc_dec  ir al estado 38
    func_call    ir al estado 87


Estado 128

  106 exp_op: exp_op OP_GTE • exp_op

    OP_SUB       desplazar e ir al estado 74
    OP_NOT       desplazar e ir al estado 75
    OP_INC       desplazar e ir al estado 3
    OP_DEC       desplazar e ir al estado 4
    LEFT_PARENT  desplazar e ir al estado 76
    D_COLON      desplazar e ir al estado 5
    TRUE_KW      desplazar e ir al estado 77
    FALSE_KW     desplazar e ir al estado 78
    CHAR         desplazar e ir al estado 79
    STRING       desplazar e ir al estado 80
    NUM          desplazar e ir al estado 81
    NUM_DEC      desplazar e ir al estado 82
    IDENTIFIER   desplazar e ir al estado 18

    value_data   ir al estado 83
    var_value    ir al estado 84
    exp_op       ir al estado 184
    inc_dec      ir al estado 86
    ops_inc_dec  ir al estado 38
    func_call    ir al estado 87


Estado 129

  107 exp_op: exp_op OP_LTE • exp_op

    OP_SUB       desplazar e ir al estado 74
    OP_NOT       desplazar e ir al estado 75
    OP_INC       desplazar e ir al estado 3
    OP_DEC       desplazar e ir al estado 4
    LEFT_PARENT  desplazar e ir al estado 76
    D_COLON      desplazar e ir al estado 5
    TRUE_KW      desplazar e ir al estado 77
    FALSE_KW     desplazar e ir al estado 78
    CHAR         desplazar e ir al estado 79
    STRING       desplazar e ir al estado 80
    NUM          desplazar e ir al estado 81
    NUM_DEC      desplazar e ir al estado 82
    IDENTIFIER   desplazar e ir al estado 18

    value_data   ir al estado 83
    var_value    ir al estado 84
    exp_op       ir al estado 185
    inc_dec      ir al estado 86
    ops_inc_dec  ir al estado 38
    func_call    ir al estado 87


Estado 130

   98 exp_op: exp_op OP_ADD • exp_op

    OP_SUB       desplazar e ir al estado 74
    OP_NOT       desplazar e ir al estado 75
    OP_INC       desplazar e ir al estado 3
    OP_DEC       desplazar e ir al estado 4
    LEFT_PARENT  desplazar e ir al estado 76
    D_COLON      desplazar e ir al estado 5
    TRUE_KW      desplazar e ir al estado 77
    FALSE_KW     desplazar e ir al estado 78
    CHAR         desplazar e ir al estado 79
    STRING       desplazar e ir al estado 80
    NUM          desplazar e ir al estado 81
    NUM_DEC      desplazar e ir al estado 82
    IDENTIFIER   desplazar e ir al estado 18

    value_data   ir al estado 83
    var_value    ir al estado 84
    exp_op       ir al estado 186
    inc_dec      ir al estado 86
    ops_inc_dec  ir al estado 38
    func_call    ir al estado 87


Estado 131

   99 exp_op: exp_op OP_SUB • exp_op

    OP_SUB       desplazar e ir al estado 74
    OP_NOT       desplazar e ir al estado 75
    OP_INC       desplazar e ir al estado 3
    OP_DEC       desplazar e ir al estado 4
    LEFT_PARENT  desplazar e ir al estado 76
    D_COLON      desplazar e ir al estado 5
    TRUE_KW      desplazar e ir al estado 77
    FALSE_KW     desplazar e ir al estado 78
    CHAR         desplazar e ir al estado 79
    STRING       desplazar e ir al estado 80
    NUM          desplazar e ir al estado 81
    NUM_DEC      desplazar e ir al estado 82
    IDENTIFIER   desplazar e ir al estado 18

    value_data   ir al estado 83
    var_value    ir al estado 84
    exp_op       ir al estado 187
    inc_dec      ir al estado 86
    ops_inc_dec  ir al estado 38
    func_call    ir al estado 87


Estado 132

  100 exp_op: exp_op OP_MUL • exp_op

    OP_SUB       desplazar e ir al estado 74
    OP_NOT       desplazar e ir al estado 75
    OP_INC       desplazar e ir al estado 3
    OP_DEC       desplazar e ir al estado 4
    LEFT_PARENT  desplazar e ir al estado 76
    D_COLON      desplazar e ir al estado 5
    TRUE_KW      desplazar e ir al estado 77
    FALSE_KW     desplazar e ir al estado 78
    CHAR         desplazar e ir al estado 79
    STRING       desplazar e ir al estado 80
    NUM          desplazar e ir al estado 81
    NUM_DEC      desplazar e ir al estado 82
    IDENTIFIER   desplazar e ir al estado 18

    value_data   ir al estado 83
    var_value    ir al estado 84
    exp_op       ir al estado 188
    inc_dec      ir al estado 86
    ops_inc_dec  ir al estado 38
    func_call    ir al estado 87


Estado 133

  101 exp_op: exp_op OP_DIV • exp_op

    OP_SUB       desplazar e ir al estado 74
    OP_NOT       desplazar e ir al estado 75
    OP_INC       desplazar e ir al estado 3
    OP_DEC       desplazar e ir al estado 4
    LEFT_PARENT  desplazar e ir al estado 76
    D_COLON      desplazar e ir al estado 5
    TRUE_KW      desplazar e ir al estado 77
    FALSE_KW     desplazar e ir al estado 78
    CHAR         desplazar e ir al estado 79
    STRING       desplazar e ir al estado 80
    NUM          desplazar e ir al estado 81
    NUM_DEC      desplazar e ir al estado 82
    IDENTIFIER   desplazar e ir al estado 18

    value_data   ir al estado 83
    var_value    ir al estado 84
    exp_op       ir al estado 189
    inc_dec      ir al estado 86
    ops_inc_dec  ir al estado 38
    func_call    ir al estado 87


Estado 134

  102 exp_op: exp_op OP_MOD • exp_op

    OP_SUB       desplazar e ir al estado 74
    OP_NOT       desplazar e ir al estado 75
    OP_INC       desplazar e ir al estado 3
    OP_DEC       desplazar e ir al estado 4
    LEFT_PARENT  desplazar e ir al estado 76
    D_COLON      desplazar e ir al estado 5
    TRUE_KW      desplazar e ir al estado 77
    FALSE_KW     desplazar e ir al estado 78
    CHAR         desplazar e ir al estado 79
    STRING       desplazar e ir al estado 80
    NUM          desplazar e ir al estado 81
    NUM_DEC      desplazar e ir al estado 82
    IDENTIFIER   desplazar e ir al estado 18

    value_data   ir al estado 83
    var_value    ir al estado 84
    exp_op       ir al estado 190
    inc_dec      ir al estado 86
    ops_inc_dec  ir al estado 38
    func_call    ir al estado 87


Estado 135

   48 while_exp: WHILE_KW LEFT_PARENT exp_op RIGHT_PARENT •

    $default  reduce usando la regla 48 (while_exp)


Estado 136

   16 std_block_d: LEFT_BRACKET $@1 block • RIGHT_BRACKET
   19 block: block • block_line

    THROW_KW       desplazar e ir al estado 143
    OP_INC         desplazar e ir al estado 3
    OP_DEC         desplazar e ir al estado 4
    RIGHT_BRACKET  desplazar e ir al estado 191
    D_COLON        desplazar e ir al estado 5
    FOR_KW         desplazar e ir al estado 6
    WHILE_KW       desplazar e ir al estado 7
    DO_KW          desplazar e ir al estado 8
    BREAK_KW       desplazar e ir al estado 145
    RETURN_KW      desplazar e ir al estado 146
    TRY_KW         desplazar e ir al estado 10
    CHAR_KW        desplazar e ir al estado 11
    INT_KW         desplazar e ir al estado 12
    FLOAT_KW       desplazar e ir al estado 13
    BOOL_KW        desplazar e ir al estado 14
    STRING_KW      desplazar e ir al estado 15
    IF_KW          desplazar e ir al estado 16
    SWITCH_KW      desplazar e ir al estado 17
    IDENTIFIER     desplazar e ir al estado 18
    EOL            desplazar e ir al estado 147

    block_line   ir al estado 148
    block_exp    ir al estado 149
    rtrn         ir al estado 150
    throw_dec    ir al estado 151
    loop         ir al estado 152
    while_exp    ir al estado 26
    conditional  ir al estado 153
    if_els_stmt  ir al estado 28
    if_stmt      ir al estado 29
    switch_stmt  ir al estado 30
    exception    ir al estado 154
    try_catch    ir al estado 32
    instance     ir al estado 155
    inst_id      ir al estado 34
    type         ir al estado 35
    var_value    ir al estado 36
    inc_dec      ir al estado 156
    ops_inc_dec  ir al estado 38
    func_call    ir al estado 157
    asingn       ir al estado 158


Estado 137

   75 func_params: LEFT_PARENT RIGHT_PARENT •

    $default  reduce usando la regla 75 (func_params)


Estado 138

   79 param: IDENTIFIER • COLON type
   80      | IDENTIFIER • COLON type OP_ASSIGN exp_op

    COLON  desplazar e ir al estado 192


Estado 139

   74 func_params: LEFT_PARENT params_sec • RIGHT_PARENT

    RIGHT_PARENT  desplazar e ir al estado 193


Estado 140

   76 params_sec: param •
   77           | param • COMMA params_sec
   78           | param • COMMA EOL params_sec

    COMMA  desplazar e ir al estado 194

    $default  reduce usando la regla 76 (params_sec)


Estado 141

   72 func_type: COLON • type
   73          | COLON • VOID_KW

    CHAR_KW    desplazar e ir al estado 11
    INT_KW     desplazar e ir al estado 12
    FLOAT_KW   desplazar e ir al estado 13
    BOOL_KW    desplazar e ir al estado 14
    STRING_KW  desplazar e ir al estado 15
    VOID_KW    desplazar e ir al estado 195

    type  ir al estado 196


Estado 142

   17 func_dec: FUNCTION_KW IDENTIFIER func_params func_type •

    $default  reduce usando la regla 17 (func_dec)


Estado 143

   34 throw_dec: THROW_KW • IDENTIFIER LEFT_PARENT STRING RIGHT_PARENT
   35          | THROW_KW • IDENTIFIER LEFT_PARENT RIGHT_PARENT

    IDENTIFIER  desplazar e ir al estado 197


Estado 144

   71 try_catch: TRY_KW LEFT_BRACKET block RIGHT_BRACKET • CATCH_KW LEFT_PARENT IDENTIFIER RIGHT_PARENT LEFT_BRACKET block RIGHT_BRACKET

    CATCH_KW  desplazar e ir al estado 198


Estado 145

   23 block_exp: BREAK_KW •

    $default  reduce usando la regla 23 (block_exp)


Estado 146

   32 rtrn: RETURN_KW • exp_op
   33     | RETURN_KW •

    OP_SUB       desplazar e ir al estado 74
    OP_NOT       desplazar e ir al estado 75
    OP_INC       desplazar e ir al estado 3
    OP_DEC       desplazar e ir al estado 4
    LEFT_PARENT  desplazar e ir al estado 76
    D_COLON      desplazar e ir al estado 5
    TRUE_KW      desplazar e ir al estado 77
    FALSE_KW     desplazar e ir al estado 78
    CHAR         desplazar e ir al estado 79
    STRING       desplazar e ir al estado 80
    NUM          desplazar e ir al estado 81
    NUM_DEC      desplazar e ir al estado 82
    IDENTIFIER   desplazar e ir al estado 18

    $default  reduce usando la regla 33 (rtrn)

    value_data   ir al estado 83
    var_value    ir al estado 84
    exp_op       ir al estado 199
    inc_dec      ir al estado 86
    ops_inc_dec  ir al estado 38
    func_call    ir al estado 87


Estado 147

   20 block_line: EOL •

    $default  reduce usando la regla 20 (block_line)


Estado 148

   19 block: block block_line •

    $default  reduce usando la regla 19 (block)


Estado 149

   21 block_line: block_exp • EOL

    EOL  desplazar e ir al estado 200


Estado 150

   30 block_exp: rtrn •

    $default  reduce usando la regla 30 (block_exp)


Estado 151

   31 block_exp: throw_dec •

    $default  reduce usando la regla 31 (block_exp)


Estado 152

   27 block_exp: loop •

    $default  reduce usando la regla 27 (block_exp)


Estado 153

   28 block_exp: conditional •

    $default  reduce usando la regla 28 (block_exp)


Estado 154

   29 block_exp: exception •

    $default  reduce usando la regla 29 (block_exp)


Estado 155

   22 block_exp: instance •

    $default  reduce usando la regla 22 (block_exp)


Estado 156

   24 block_exp: inc_dec •

    $default  reduce usando la regla 24 (block_exp)


Estado 157

   25 block_exp: func_call •

    $default  reduce usando la regla 25 (block_exp)


Estado 158

   26 block_exp: asingn •

    $default  reduce usando la regla 26 (block_exp)


Estado 159

   55 if_stmt: IF_KW LEFT_PARENT exp_op $@2 • RIGHT_PARENT std_block_d

    RIGHT_PARENT  desplazar e ir al estado 201


Estado 160

   61 switch_stmt: SWITCH_KW LEFT_PARENT exp_op RIGHT_PARENT • LEFT_BRACKET EOL switch_block $@3 RIGHT_BRACKET
   62            | SWITCH_KW LEFT_PARENT exp_op RIGHT_PARENT • LEFT_BRACKET EOL RIGHT_BRACKET

    LEFT_BRACKET  desplazar e ir al estado 202


Estado 161

  132 func_arg: IDENTIFIER COLON • exp_op

    OP_SUB       desplazar e ir al estado 74
    OP_NOT       desplazar e ir al estado 75
    OP_INC       desplazar e ir al estado 3
    OP_DEC       desplazar e ir al estado 4
    LEFT_PARENT  desplazar e ir al estado 76
    D_COLON      desplazar e ir al estado 5
    TRUE_KW      desplazar e ir al estado 77
    FALSE_KW     desplazar e ir al estado 78
    CHAR         desplazar e ir al estado 79
    STRING       desplazar e ir al estado 80
    NUM          desplazar e ir al estado 81
    NUM_DEC      desplazar e ir al estado 82
    IDENTIFIER   desplazar e ir al estado 18

    value_data   ir al estado 83
    var_value    ir al estado 84
    exp_op       ir al estado 203
    inc_dec      ir al estado 86
    ops_inc_dec  ir al estado 38
    func_call    ir al estado 87


Estado 162

  128 func_call: IDENTIFIER LEFT_PARENT func_args RIGHT_PARENT •

    $default  reduce usando la regla 128 (func_call)


Estado 163

  130 func_args: func_arg COMMA • func_args
  131          | func_arg COMMA • EOL func_args

    OP_SUB       desplazar e ir al estado 74
    OP_NOT       desplazar e ir al estado 75
    OP_INC       desplazar e ir al estado 3
    OP_DEC       desplazar e ir al estado 4
    LEFT_PARENT  desplazar e ir al estado 76
    D_COLON      desplazar e ir al estado 5
    TRUE_KW      desplazar e ir al estado 77
    FALSE_KW     desplazar e ir al estado 78
    CHAR         desplazar e ir al estado 79
    STRING       desplazar e ir al estado 80
    NUM          desplazar e ir al estado 81
    NUM_DEC      desplazar e ir al estado 82
    IDENTIFIER   desplazar e ir al estado 96
    EOL          desplazar e ir al estado 204

    value_data   ir al estado 83
    var_value    ir al estado 84
    exp_op       ir al estado 97
    inc_dec      ir al estado 86
    ops_inc_dec  ir al estado 38
    func_call    ir al estado 87
    func_args    ir al estado 205
    func_arg     ir al estado 99


Estado 164

   58 els_if_stmt: els_if_stmt ELSE_KW if_stmt •

    $default  reduce usando la regla 58 (els_if_stmt)


Estado 165

   19 block: block • block_line
   70 exception: try_catch FINALLY_KW LEFT_BRACKET block • RIGHT_BRACKET

    THROW_KW       desplazar e ir al estado 143
    OP_INC         desplazar e ir al estado 3
    OP_DEC         desplazar e ir al estado 4
    RIGHT_BRACKET  desplazar e ir al estado 206
    D_COLON        desplazar e ir al estado 5
    FOR_KW         desplazar e ir al estado 6
    WHILE_KW       desplazar e ir al estado 7
    DO_KW          desplazar e ir al estado 8
    BREAK_KW       desplazar e ir al estado 145
    RETURN_KW      desplazar e ir al estado 146
    TRY_KW         desplazar e ir al estado 10
    CHAR_KW        desplazar e ir al estado 11
    INT_KW         desplazar e ir al estado 12
    FLOAT_KW       desplazar e ir al estado 13
    BOOL_KW        desplazar e ir al estado 14
    STRING_KW      desplazar e ir al estado 15
    IF_KW          desplazar e ir al estado 16
    SWITCH_KW      desplazar e ir al estado 17
    IDENTIFIER     desplazar e ir al estado 18
    EOL            desplazar e ir al estado 147

    block_line   ir al estado 148
    block_exp    ir al estado 149
    rtrn         ir al estado 150
    throw_dec    ir al estado 151
    loop         ir al estado 152
    while_exp    ir al estado 26
    conditional  ir al estado 153
    if_els_stmt  ir al estado 28
    if_stmt      ir al estado 29
    switch_stmt  ir al estado 30
    exception    ir al estado 154
    try_catch    ir al estado 32
    instance     ir al estado 155
    inst_id      ir al estado 34
    type         ir al estado 35
    var_value    ir al estado 36
    inc_dec      ir al estado 156
    ops_inc_dec  ir al estado 38
    func_call    ir al estado 157
    asingn       ir al estado 158


Estado 166

   42 for_var: IDENTIFIER OP_ASSIGN exp_op •
   98 exp_op: exp_op • OP_ADD exp_op
   99       | exp_op • OP_SUB exp_op
  100       | exp_op • OP_MUL exp_op
  101       | exp_op • OP_DIV exp_op
  102       | exp_op • OP_MOD exp_op
  104       | exp_op • OP_GT exp_op
  105       | exp_op • OP_LT exp_op
  106       | exp_op • OP_GTE exp_op
  107       | exp_op • OP_LTE exp_op
  108       | exp_op • OP_EQ exp_op
  109       | exp_op • OP_NEQ exp_op
  110       | exp_op • OP_AND exp_op
  111       | exp_op • OP_OR exp_op

    OP_AND  desplazar e ir al estado 122
    OP_OR   desplazar e ir al estado 123
    OP_EQ   desplazar e ir al estado 124
    OP_NEQ  desplazar e ir al estado 125
    OP_GT   desplazar e ir al estado 126
    OP_LT   desplazar e ir al estado 127
    OP_GTE  desplazar e ir al estado 128
    OP_LTE  desplazar e ir al estado 129
    OP_ADD  desplazar e ir al estado 130
    OP_SUB  desplazar e ir al estado 131
    OP_MUL  desplazar e ir al estado 132
    OP_DIV  desplazar e ir al estado 133
    OP_MOD  desplazar e ir al estado 134

    $default  reduce usando la regla 42 (for_var)


Estado 167

   36 loop: FOR_KW LEFT_PARENT for_decl RIGHT_PARENT std_block_d •

    $default  reduce usando la regla 36 (loop)


Estado 168

   39 for_decl: for_vrs_dec COLON for_cond • COLON for_sec

    COLON  desplazar e ir al estado 207


Estado 169

   43 for_cond: exp_op •
   98 exp_op: exp_op • OP_ADD exp_op
   99       | exp_op • OP_SUB exp_op
  100       | exp_op • OP_MUL exp_op
  101       | exp_op • OP_DIV exp_op
  102       | exp_op • OP_MOD exp_op
  104       | exp_op • OP_GT exp_op
  105       | exp_op • OP_LT exp_op
  106       | exp_op • OP_GTE exp_op
  107       | exp_op • OP_LTE exp_op
  108       | exp_op • OP_EQ exp_op
  109       | exp_op • OP_NEQ exp_op
  110       | exp_op • OP_AND exp_op
  111       | exp_op • OP_OR exp_op

    OP_AND  desplazar e ir al estado 122
    OP_OR   desplazar e ir al estado 123
    OP_EQ   desplazar e ir al estado 124
    OP_NEQ  desplazar e ir al estado 125
    OP_GT   desplazar e ir al estado 126
    OP_LT   desplazar e ir al estado 127
    OP_GTE  desplazar e ir al estado 128
    OP_LTE  desplazar e ir al estado 129
    OP_ADD  desplazar e ir al estado 130
    OP_SUB  desplazar e ir al estado 131
    OP_MUL  desplazar e ir al estado 132
    OP_DIV  desplazar e ir al estado 133
    OP_MOD  desplazar e ir al estado 134

    $default  reduce usando la regla 43 (for_cond)


Estado 170

   41 for_vrs_dec: for_var COMMA for_vrs_dec •

    $default  reduce usando la regla 41 (for_vrs_dec)


Estado 171

  119 exp_op: LEFT_PARENT exp_op RIGHT_PARENT •

    $default  reduce usando la regla 119 (exp_op)


Estado 172

   98 exp_op: exp_op • OP_ADD exp_op
   99       | exp_op • OP_SUB exp_op
  100       | exp_op • OP_MUL exp_op
  101       | exp_op • OP_DIV exp_op
  102       | exp_op • OP_MOD exp_op
  104       | exp_op • OP_GT exp_op
  105       | exp_op • OP_LT exp_op
  106       | exp_op • OP_GTE exp_op
  107       | exp_op • OP_LTE exp_op
  108       | exp_op • OP_EQ exp_op
  109       | exp_op • OP_NEQ exp_op
  110       | exp_op • OP_AND exp_op
  111       | exp_op • OP_OR exp_op
  113       | var_value OP_ASSIGN exp_op •

    OP_AND  desplazar e ir al estado 122
    OP_OR   desplazar e ir al estado 123
    OP_EQ   desplazar e ir al estado 124
    OP_NEQ  desplazar e ir al estado 125
    OP_GT   desplazar e ir al estado 126
    OP_LT   desplazar e ir al estado 127
    OP_GTE  desplazar e ir al estado 128
    OP_LTE  desplazar e ir al estado 129
    OP_ADD  desplazar e ir al estado 130
    OP_SUB  desplazar e ir al estado 131
    OP_MUL  desplazar e ir al estado 132
    OP_DIV  desplazar e ir al estado 133
    OP_MOD  desplazar e ir al estado 134

    $default  reduce usando la regla 113 (exp_op)


Estado 173

   98 exp_op: exp_op • OP_ADD exp_op
   99       | exp_op • OP_SUB exp_op
  100       | exp_op • OP_MUL exp_op
  101       | exp_op • OP_DIV exp_op
  102       | exp_op • OP_MOD exp_op
  104       | exp_op • OP_GT exp_op
  105       | exp_op • OP_LT exp_op
  106       | exp_op • OP_GTE exp_op
  107       | exp_op • OP_LTE exp_op
  108       | exp_op • OP_EQ exp_op
  109       | exp_op • OP_NEQ exp_op
  110       | exp_op • OP_AND exp_op
  111       | exp_op • OP_OR exp_op
  114       | var_value OP_ADD_ASSIGN exp_op •

    OP_AND  desplazar e ir al estado 122
    OP_OR   desplazar e ir al estado 123
    OP_EQ   desplazar e ir al estado 124
    OP_NEQ  desplazar e ir al estado 125
    OP_GT   desplazar e ir al estado 126
    OP_LT   desplazar e ir al estado 127
    OP_GTE  desplazar e ir al estado 128
    OP_LTE  desplazar e ir al estado 129
    OP_ADD  desplazar e ir al estado 130
    OP_SUB  desplazar e ir al estado 131
    OP_MUL  desplazar e ir al estado 132
    OP_DIV  desplazar e ir al estado 133
    OP_MOD  desplazar e ir al estado 134

    $default  reduce usando la regla 114 (exp_op)


Estado 174

   98 exp_op: exp_op • OP_ADD exp_op
   99       | exp_op • OP_SUB exp_op
  100       | exp_op • OP_MUL exp_op
  101       | exp_op • OP_DIV exp_op
  102       | exp_op • OP_MOD exp_op
  104       | exp_op • OP_GT exp_op
  105       | exp_op • OP_LT exp_op
  106       | exp_op • OP_GTE exp_op
  107       | exp_op • OP_LTE exp_op
  108       | exp_op • OP_EQ exp_op
  109       | exp_op • OP_NEQ exp_op
  110       | exp_op • OP_AND exp_op
  111       | exp_op • OP_OR exp_op
  115       | var_value OP_SUB_ASSIGN exp_op •

    OP_AND  desplazar e ir al estado 122
    OP_OR   desplazar e ir al estado 123
    OP_EQ   desplazar e ir al estado 124
    OP_NEQ  desplazar e ir al estado 125
    OP_GT   desplazar e ir al estado 126
    OP_LT   desplazar e ir al estado 127
    OP_GTE  desplazar e ir al estado 128
    OP_LTE  desplazar e ir al estado 129
    OP_ADD  desplazar e ir al estado 130
    OP_SUB  desplazar e ir al estado 131
    OP_MUL  desplazar e ir al estado 132
    OP_DIV  desplazar e ir al estado 133
    OP_MOD  desplazar e ir al estado 134

    $default  reduce usando la regla 115 (exp_op)


Estado 175

   98 exp_op: exp_op • OP_ADD exp_op
   99       | exp_op • OP_SUB exp_op
  100       | exp_op • OP_MUL exp_op
  101       | exp_op • OP_DIV exp_op
  102       | exp_op • OP_MOD exp_op
  104       | exp_op • OP_GT exp_op
  105       | exp_op • OP_LT exp_op
  106       | exp_op • OP_GTE exp_op
  107       | exp_op • OP_LTE exp_op
  108       | exp_op • OP_EQ exp_op
  109       | exp_op • OP_NEQ exp_op
  110       | exp_op • OP_AND exp_op
  111       | exp_op • OP_OR exp_op
  116       | var_value OP_MUL_ASSIGN exp_op •

    OP_AND  desplazar e ir al estado 122
    OP_OR   desplazar e ir al estado 123
    OP_EQ   desplazar e ir al estado 124
    OP_NEQ  desplazar e ir al estado 125
    OP_GT   desplazar e ir al estado 126
    OP_LT   desplazar e ir al estado 127
    OP_GTE  desplazar e ir al estado 128
    OP_LTE  desplazar e ir al estado 129
    OP_ADD  desplazar e ir al estado 130
    OP_SUB  desplazar e ir al estado 131
    OP_MUL  desplazar e ir al estado 132
    OP_DIV  desplazar e ir al estado 133
    OP_MOD  desplazar e ir al estado 134

    $default  reduce usando la regla 116 (exp_op)


Estado 176

   98 exp_op: exp_op • OP_ADD exp_op
   99       | exp_op • OP_SUB exp_op
  100       | exp_op • OP_MUL exp_op
  101       | exp_op • OP_DIV exp_op
  102       | exp_op • OP_MOD exp_op
  104       | exp_op • OP_GT exp_op
  105       | exp_op • OP_LT exp_op
  106       | exp_op • OP_GTE exp_op
  107       | exp_op • OP_LTE exp_op
  108       | exp_op • OP_EQ exp_op
  109       | exp_op • OP_NEQ exp_op
  110       | exp_op • OP_AND exp_op
  111       | exp_op • OP_OR exp_op
  117       | var_value OP_DIV_ASSIGN exp_op •

    OP_AND  desplazar e ir al estado 122
    OP_OR   desplazar e ir al estado 123
    OP_EQ   desplazar e ir al estado 124
    OP_NEQ  desplazar e ir al estado 125
    OP_GT   desplazar e ir al estado 126
    OP_LT   desplazar e ir al estado 127
    OP_GTE  desplazar e ir al estado 128
    OP_LTE  desplazar e ir al estado 129
    OP_ADD  desplazar e ir al estado 130
    OP_SUB  desplazar e ir al estado 131
    OP_MUL  desplazar e ir al estado 132
    OP_DIV  desplazar e ir al estado 133
    OP_MOD  desplazar e ir al estado 134

    $default  reduce usando la regla 117 (exp_op)


Estado 177

   98 exp_op: exp_op • OP_ADD exp_op
   99       | exp_op • OP_SUB exp_op
  100       | exp_op • OP_MUL exp_op
  101       | exp_op • OP_DIV exp_op
  102       | exp_op • OP_MOD exp_op
  104       | exp_op • OP_GT exp_op
  105       | exp_op • OP_LT exp_op
  106       | exp_op • OP_GTE exp_op
  107       | exp_op • OP_LTE exp_op
  108       | exp_op • OP_EQ exp_op
  109       | exp_op • OP_NEQ exp_op
  110       | exp_op • OP_AND exp_op
  111       | exp_op • OP_OR exp_op
  118       | var_value OP_MOD_ASSIGN exp_op •

    OP_AND  desplazar e ir al estado 122
    OP_OR   desplazar e ir al estado 123
    OP_EQ   desplazar e ir al estado 124
    OP_NEQ  desplazar e ir al estado 125
    OP_GT   desplazar e ir al estado 126
    OP_LT   desplazar e ir al estado 127
    OP_GTE  desplazar e ir al estado 128
    OP_LTE  desplazar e ir al estado 129
    OP_ADD  desplazar e ir al estado 130
    OP_SUB  desplazar e ir al estado 131
    OP_MUL  desplazar e ir al estado 132
    OP_DIV  desplazar e ir al estado 133
    OP_MOD  desplazar e ir al estado 134

    $default  reduce usando la regla 118 (exp_op)


Estado 178

   98 exp_op: exp_op • OP_ADD exp_op
   99       | exp_op • OP_SUB exp_op
  100       | exp_op • OP_MUL exp_op
  101       | exp_op • OP_DIV exp_op
  102       | exp_op • OP_MOD exp_op
  104       | exp_op • OP_GT exp_op
  105       | exp_op • OP_LT exp_op
  106       | exp_op • OP_GTE exp_op
  107       | exp_op • OP_LTE exp_op
  108       | exp_op • OP_EQ exp_op
  109       | exp_op • OP_NEQ exp_op
  110       | exp_op • OP_AND exp_op
  110       | exp_op OP_AND exp_op •
  111       | exp_op • OP_OR exp_op

    OP_EQ   desplazar e ir al estado 124
    OP_NEQ  desplazar e ir al estado 125
    OP_GT   desplazar e ir al estado 126
    OP_LT   desplazar e ir al estado 127
    OP_GTE  desplazar e ir al estado 128
    OP_LTE  desplazar e ir al estado 129
    OP_ADD  desplazar e ir al estado 130
    OP_SUB  desplazar e ir al estado 131
    OP_MUL  desplazar e ir al estado 132
    OP_DIV  desplazar e ir al estado 133
    OP_MOD  desplazar e ir al estado 134

    $default  reduce usando la regla 110 (exp_op)


Estado 179

   98 exp_op: exp_op • OP_ADD exp_op
   99       | exp_op • OP_SUB exp_op
  100       | exp_op • OP_MUL exp_op
  101       | exp_op • OP_DIV exp_op
  102       | exp_op • OP_MOD exp_op
  104       | exp_op • OP_GT exp_op
  105       | exp_op • OP_LT exp_op
  106       | exp_op • OP_GTE exp_op
  107       | exp_op • OP_LTE exp_op
  108       | exp_op • OP_EQ exp_op
  109       | exp_op • OP_NEQ exp_op
  110       | exp_op • OP_AND exp_op
  111       | exp_op • OP_OR exp_op
  111       | exp_op OP_OR exp_op •

    OP_EQ   desplazar e ir al estado 124
    OP_NEQ  desplazar e ir al estado 125
    OP_GT   desplazar e ir al estado 126
    OP_LT   desplazar e ir al estado 127
    OP_GTE  desplazar e ir al estado 128
    OP_LTE  desplazar e ir al estado 129
    OP_ADD  desplazar e ir al estado 130
    OP_SUB  desplazar e ir al estado 131
    OP_MUL  desplazar e ir al estado 132
    OP_DIV  desplazar e ir al estado 133
    OP_MOD  desplazar e ir al estado 134

    $default  reduce usando la regla 111 (exp_op)


Estado 180

   98 exp_op: exp_op • OP_ADD exp_op
   99       | exp_op • OP_SUB exp_op
  100       | exp_op • OP_MUL exp_op
  101       | exp_op • OP_DIV exp_op
  102       | exp_op • OP_MOD exp_op
  104       | exp_op • OP_GT exp_op
  105       | exp_op • OP_LT exp_op
  106       | exp_op • OP_GTE exp_op
  107       | exp_op • OP_LTE exp_op
  108       | exp_op • OP_EQ exp_op
  108       | exp_op OP_EQ exp_op •
  109       | exp_op • OP_NEQ exp_op
  110       | exp_op • OP_AND exp_op
  111       | exp_op • OP_OR exp_op

    OP_GT   desplazar e ir al estado 126
    OP_LT   desplazar e ir al estado 127
    OP_GTE  desplazar e ir al estado 128
    OP_LTE  desplazar e ir al estado 129
    OP_ADD  desplazar e ir al estado 130
    OP_SUB  desplazar e ir al estado 131
    OP_MUL  desplazar e ir al estado 132
    OP_DIV  desplazar e ir al estado 133
    OP_MOD  desplazar e ir al estado 134

    $default  reduce usando la regla 108 (exp_op)


Estado 181

   98 exp_op: exp_op • OP_ADD exp_op
   99       | exp_op • OP_SUB exp_op
  100       | exp_op • OP_MUL exp_op
  101       | exp_op • OP_DIV exp_op
  102       | exp_op • OP_MOD exp_op
  104       | exp_op • OP_GT exp_op
  105       | exp_op • OP_LT exp_op
  106       | exp_op • OP_GTE exp_op
  107       | exp_op • OP_LTE exp_op
  108       | exp_op • OP_EQ exp_op
  109       | exp_op • OP_NEQ exp_op
  109       | exp_op OP_NEQ exp_op •
  110       | exp_op • OP_AND exp_op
  111       | exp_op • OP_OR exp_op

    OP_GT   desplazar e ir al estado 126
    OP_LT   desplazar e ir al estado 127
    OP_GTE  desplazar e ir al estado 128
    OP_LTE  desplazar e ir al estado 129
    OP_ADD  desplazar e ir al estado 130
    OP_SUB  desplazar e ir al estado 131
    OP_MUL  desplazar e ir al estado 132
    OP_DIV  desplazar e ir al estado 133
    OP_MOD  desplazar e ir al estado 134

    $default  reduce usando la regla 109 (exp_op)


Estado 182

   98 exp_op: exp_op • OP_ADD exp_op
   99       | exp_op • OP_SUB exp_op
  100       | exp_op • OP_MUL exp_op
  101       | exp_op • OP_DIV exp_op
  102       | exp_op • OP_MOD exp_op
  104       | exp_op • OP_GT exp_op
  104       | exp_op OP_GT exp_op •
  105       | exp_op • OP_LT exp_op
  106       | exp_op • OP_GTE exp_op
  107       | exp_op • OP_LTE exp_op
  108       | exp_op • OP_EQ exp_op
  109       | exp_op • OP_NEQ exp_op
  110       | exp_op • OP_AND exp_op
  111       | exp_op • OP_OR exp_op

    OP_ADD  desplazar e ir al estado 130
    OP_SUB  desplazar e ir al estado 131
    OP_MUL  desplazar e ir al estado 132
    OP_DIV  desplazar e ir al estado 133
    OP_MOD  desplazar e ir al estado 134

    $default  reduce usando la regla 104 (exp_op)


Estado 183

   98 exp_op: exp_op • OP_ADD exp_op
   99       | exp_op • OP_SUB exp_op
  100       | exp_op • OP_MUL exp_op
  101       | exp_op • OP_DIV exp_op
  102       | exp_op • OP_MOD exp_op
  104       | exp_op • OP_GT exp_op
  105       | exp_op • OP_LT exp_op
  105       | exp_op OP_LT exp_op •
  106       | exp_op • OP_GTE exp_op
  107       | exp_op • OP_LTE exp_op
  108       | exp_op • OP_EQ exp_op
  109       | exp_op • OP_NEQ exp_op
  110       | exp_op • OP_AND exp_op
  111       | exp_op • OP_OR exp_op

    OP_ADD  desplazar e ir al estado 130
    OP_SUB  desplazar e ir al estado 131
    OP_MUL  desplazar e ir al estado 132
    OP_DIV  desplazar e ir al estado 133
    OP_MOD  desplazar e ir al estado 134

    $default  reduce usando la regla 105 (exp_op)


Estado 184

   98 exp_op: exp_op • OP_ADD exp_op
   99       | exp_op • OP_SUB exp_op
  100       | exp_op • OP_MUL exp_op
  101       | exp_op • OP_DIV exp_op
  102       | exp_op • OP_MOD exp_op
  104       | exp_op • OP_GT exp_op
  105       | exp_op • OP_LT exp_op
  106       | exp_op • OP_GTE exp_op
  106       | exp_op OP_GTE exp_op •
  107       | exp_op • OP_LTE exp_op
  108       | exp_op • OP_EQ exp_op
  109       | exp_op • OP_NEQ exp_op
  110       | exp_op • OP_AND exp_op
  111       | exp_op • OP_OR exp_op

    OP_ADD  desplazar e ir al estado 130
    OP_SUB  desplazar e ir al estado 131
    OP_MUL  desplazar e ir al estado 132
    OP_DIV  desplazar e ir al estado 133
    OP_MOD  desplazar e ir al estado 134

    $default  reduce usando la regla 106 (exp_op)


Estado 185

   98 exp_op: exp_op • OP_ADD exp_op
   99       | exp_op • OP_SUB exp_op
  100       | exp_op • OP_MUL exp_op
  101       | exp_op • OP_DIV exp_op
  102       | exp_op • OP_MOD exp_op
  104       | exp_op • OP_GT exp_op
  105       | exp_op • OP_LT exp_op
  106       | exp_op • OP_GTE exp_op
  107       | exp_op • OP_LTE exp_op
  107       | exp_op OP_LTE exp_op •
  108       | exp_op • OP_EQ exp_op
  109       | exp_op • OP_NEQ exp_op
  110       | exp_op • OP_AND exp_op
  111       | exp_op • OP_OR exp_op

    OP_ADD  desplazar e ir al estado 130
    OP_SUB  desplazar e ir al estado 131
    OP_MUL  desplazar e ir al estado 132
    OP_DIV  desplazar e ir al estado 133
    OP_MOD  desplazar e ir al estado 134

    $default  reduce usando la regla 107 (exp_op)


Estado 186

   98 exp_op: exp_op • OP_ADD exp_op
   98       | exp_op OP_ADD exp_op •
   99       | exp_op • OP_SUB exp_op
  100       | exp_op • OP_MUL exp_op
  101       | exp_op • OP_DIV exp_op
  102       | exp_op • OP_MOD exp_op
  104       | exp_op • OP_GT exp_op
  105       | exp_op • OP_LT exp_op
  106       | exp_op • OP_GTE exp_op
  107       | exp_op • OP_LTE exp_op
  108       | exp_op • OP_EQ exp_op
  109       | exp_op • OP_NEQ exp_op
  110       | exp_op • OP_AND exp_op
  111       | exp_op • OP_OR exp_op

    OP_MUL  desplazar e ir al estado 132
    OP_DIV  desplazar e ir al estado 133
    OP_MOD  desplazar e ir al estado 134

    $default  reduce usando la regla 98 (exp_op)


Estado 187

   98 exp_op: exp_op • OP_ADD exp_op
   99       | exp_op • OP_SUB exp_op
   99       | exp_op OP_SUB exp_op •
  100       | exp_op • OP_MUL exp_op
  101       | exp_op • OP_DIV exp_op
  102       | exp_op • OP_MOD exp_op
  104       | exp_op • OP_GT exp_op
  105       | exp_op • OP_LT exp_op
  106       | exp_op • OP_GTE exp_op
  107       | exp_op • OP_LTE exp_op
  108       | exp_op • OP_EQ exp_op
  109       | exp_op • OP_NEQ exp_op
  110       | exp_op • OP_AND exp_op
  111       | exp_op • OP_OR exp_op

    OP_MUL  desplazar e ir al estado 132
    OP_DIV  desplazar e ir al estado 133
    OP_MOD  desplazar e ir al estado 134

    $default  reduce usando la regla 99 (exp_op)


Estado 188

   98 exp_op: exp_op • OP_ADD exp_op
   99       | exp_op • OP_SUB exp_op
  100       | exp_op • OP_MUL exp_op
  100       | exp_op OP_MUL exp_op •
  101       | exp_op • OP_DIV exp_op
  102       | exp_op • OP_MOD exp_op
  104       | exp_op • OP_GT exp_op
  105       | exp_op • OP_LT exp_op
  106       | exp_op • OP_GTE exp_op
  107       | exp_op • OP_LTE exp_op
  108       | exp_op • OP_EQ exp_op
  109       | exp_op • OP_NEQ exp_op
  110       | exp_op • OP_AND exp_op
  111       | exp_op • OP_OR exp_op

    $default  reduce usando la regla 100 (exp_op)


Estado 189

   98 exp_op: exp_op • OP_ADD exp_op
   99       | exp_op • OP_SUB exp_op
  100       | exp_op • OP_MUL exp_op
  101       | exp_op • OP_DIV exp_op
  101       | exp_op OP_DIV exp_op •
  102       | exp_op • OP_MOD exp_op
  104       | exp_op • OP_GT exp_op
  105       | exp_op • OP_LT exp_op
  106       | exp_op • OP_GTE exp_op
  107       | exp_op • OP_LTE exp_op
  108       | exp_op • OP_EQ exp_op
  109       | exp_op • OP_NEQ exp_op
  110       | exp_op • OP_AND exp_op
  111       | exp_op • OP_OR exp_op

    $default  reduce usando la regla 101 (exp_op)


Estado 190

   98 exp_op: exp_op • OP_ADD exp_op
   99       | exp_op • OP_SUB exp_op
  100       | exp_op • OP_MUL exp_op
  101       | exp_op • OP_DIV exp_op
  102       | exp_op • OP_MOD exp_op
  102       | exp_op OP_MOD exp_op •
  104       | exp_op • OP_GT exp_op
  105       | exp_op • OP_LT exp_op
  106       | exp_op • OP_GTE exp_op
  107       | exp_op • OP_LTE exp_op
  108       | exp_op • OP_EQ exp_op
  109       | exp_op • OP_NEQ exp_op
  110       | exp_op • OP_AND exp_op
  111       | exp_op • OP_OR exp_op

    $default  reduce usando la regla 102 (exp_op)


Estado 191

   16 std_block_d: LEFT_BRACKET $@1 block RIGHT_BRACKET •

    $default  reduce usando la regla 16 (std_block_d)


Estado 192

   79 param: IDENTIFIER COLON • type
   80      | IDENTIFIER COLON • type OP_ASSIGN exp_op

    CHAR_KW    desplazar e ir al estado 11
    INT_KW     desplazar e ir al estado 12
    FLOAT_KW   desplazar e ir al estado 13
    BOOL_KW    desplazar e ir al estado 14
    STRING_KW  desplazar e ir al estado 15

    type  ir al estado 208


Estado 193

   74 func_params: LEFT_PARENT params_sec RIGHT_PARENT •

    $default  reduce usando la regla 74 (func_params)


Estado 194

   77 params_sec: param COMMA • params_sec
   78           | param COMMA • EOL params_sec

    IDENTIFIER  desplazar e ir al estado 138
    EOL         desplazar e ir al estado 209

    params_sec  ir al estado 210
    param       ir al estado 140


Estado 195

   73 func_type: COLON VOID_KW •

    $default  reduce usando la regla 73 (func_type)


Estado 196

   72 func_type: COLON type •

    $default  reduce usando la regla 72 (func_type)


Estado 197

   34 throw_dec: THROW_KW IDENTIFIER • LEFT_PARENT STRING RIGHT_PARENT
   35          | THROW_KW IDENTIFIER • LEFT_PARENT RIGHT_PARENT

    LEFT_PARENT  desplazar e ir al estado 211


Estado 198

   71 try_catch: TRY_KW LEFT_BRACKET block RIGHT_BRACKET CATCH_KW • LEFT_PARENT IDENTIFIER RIGHT_PARENT LEFT_BRACKET block RIGHT_BRACKET

    LEFT_PARENT  desplazar e ir al estado 212


Estado 199

   32 rtrn: RETURN_KW exp_op •
   98 exp_op: exp_op • OP_ADD exp_op
   99       | exp_op • OP_SUB exp_op
  100       | exp_op • OP_MUL exp_op
  101       | exp_op • OP_DIV exp_op
  102       | exp_op • OP_MOD exp_op
  104       | exp_op • OP_GT exp_op
  105       | exp_op • OP_LT exp_op
  106       | exp_op • OP_GTE exp_op
  107       | exp_op • OP_LTE exp_op
  108       | exp_op • OP_EQ exp_op
  109       | exp_op • OP_NEQ exp_op
  110       | exp_op • OP_AND exp_op
  111       | exp_op • OP_OR exp_op

    OP_AND  desplazar e ir al estado 122
    OP_OR   desplazar e ir al estado 123
    OP_EQ   desplazar e ir al estado 124
    OP_NEQ  desplazar e ir al estado 125
    OP_GT   desplazar e ir al estado 126
    OP_LT   desplazar e ir al estado 127
    OP_GTE  desplazar e ir al estado 128
    OP_LTE  desplazar e ir al estado 129
    OP_ADD  desplazar e ir al estado 130
    OP_SUB  desplazar e ir al estado 131
    OP_MUL  desplazar e ir al estado 132
    OP_DIV  desplazar e ir al estado 133
    OP_MOD  desplazar e ir al estado 134

    $default  reduce usando la regla 32 (rtrn)


Estado 200

   21 block_line: block_exp EOL •

    $default  reduce usando la regla 21 (block_line)


Estado 201

   55 if_stmt: IF_KW LEFT_PARENT exp_op $@2 RIGHT_PARENT • std_block_d

    LEFT_BRACKET  desplazar e ir al estado 44

    std_block_d  ir al estado 213


Estado 202

   61 switch_stmt: SWITCH_KW LEFT_PARENT exp_op RIGHT_PARENT LEFT_BRACKET • EOL switch_block $@3 RIGHT_BRACKET
   62            | SWITCH_KW LEFT_PARENT exp_op RIGHT_PARENT LEFT_BRACKET • EOL RIGHT_BRACKET

    EOL  desplazar e ir al estado 214


Estado 203

   98 exp_op: exp_op • OP_ADD exp_op
   99       | exp_op • OP_SUB exp_op
  100       | exp_op • OP_MUL exp_op
  101       | exp_op • OP_DIV exp_op
  102       | exp_op • OP_MOD exp_op
  104       | exp_op • OP_GT exp_op
  105       | exp_op • OP_LT exp_op
  106       | exp_op • OP_GTE exp_op
  107       | exp_op • OP_LTE exp_op
  108       | exp_op • OP_EQ exp_op
  109       | exp_op • OP_NEQ exp_op
  110       | exp_op • OP_AND exp_op
  111       | exp_op • OP_OR exp_op
  132 func_arg: IDENTIFIER COLON exp_op •

    OP_AND  desplazar e ir al estado 122
    OP_OR   desplazar e ir al estado 123
    OP_EQ   desplazar e ir al estado 124
    OP_NEQ  desplazar e ir al estado 125
    OP_GT   desplazar e ir al estado 126
    OP_LT   desplazar e ir al estado 127
    OP_GTE  desplazar e ir al estado 128
    OP_LTE  desplazar e ir al estado 129
    OP_ADD  desplazar e ir al estado 130
    OP_SUB  desplazar e ir al estado 131
    OP_MUL  desplazar e ir al estado 132
    OP_DIV  desplazar e ir al estado 133
    OP_MOD  desplazar e ir al estado 134

    $default  reduce usando la regla 132 (func_arg)


Estado 204

  131 func_args: func_arg COMMA EOL • func_args

    OP_SUB       desplazar e ir al estado 74
    OP_NOT       desplazar e ir al estado 75
    OP_INC       desplazar e ir al estado 3
    OP_DEC       desplazar e ir al estado 4
    LEFT_PARENT  desplazar e ir al estado 76
    D_COLON      desplazar e ir al estado 5
    TRUE_KW      desplazar e ir al estado 77
    FALSE_KW     desplazar e ir al estado 78
    CHAR         desplazar e ir al estado 79
    STRING       desplazar e ir al estado 80
    NUM          desplazar e ir al estado 81
    NUM_DEC      desplazar e ir al estado 82
    IDENTIFIER   desplazar e ir al estado 96

    value_data   ir al estado 83
    var_value    ir al estado 84
    exp_op       ir al estado 97
    inc_dec      ir al estado 86
    ops_inc_dec  ir al estado 38
    func_call    ir al estado 87
    func_args    ir al estado 215
    func_arg     ir al estado 99


Estado 205

  130 func_args: func_arg COMMA func_args •

    $default  reduce usando la regla 130 (func_args)


Estado 206

   70 exception: try_catch FINALLY_KW LEFT_BRACKET block RIGHT_BRACKET •

    $default  reduce usando la regla 70 (exception)


Estado 207

   39 for_decl: for_vrs_dec COLON for_cond COLON • for_sec

    OP_INC      desplazar e ir al estado 3
    OP_DEC      desplazar e ir al estado 4
    D_COLON     desplazar e ir al estado 5
    IDENTIFIER  desplazar e ir al estado 68

    for_sec      ir al estado 216
    for_iter     ir al estado 217
    var_value    ir al estado 36
    inc_dec      ir al estado 218
    ops_inc_dec  ir al estado 38
    asingn       ir al estado 219


Estado 208

   79 param: IDENTIFIER COLON type •
   80      | IDENTIFIER COLON type • OP_ASSIGN exp_op

    OP_ASSIGN  desplazar e ir al estado 220

    $default  reduce usando la regla 79 (param)


Estado 209

   78 params_sec: param COMMA EOL • params_sec

    IDENTIFIER  desplazar e ir al estado 138

    params_sec  ir al estado 221
    param       ir al estado 140


Estado 210

   77 params_sec: param COMMA params_sec •

    $default  reduce usando la regla 77 (params_sec)


Estado 211

   34 throw_dec: THROW_KW IDENTIFIER LEFT_PARENT • STRING RIGHT_PARENT
   35          | THROW_KW IDENTIFIER LEFT_PARENT • RIGHT_PARENT

    RIGHT_PARENT  desplazar e ir al estado 222
    STRING        desplazar e ir al estado 223


Estado 212

   71 try_catch: TRY_KW LEFT_BRACKET block RIGHT_BRACKET CATCH_KW LEFT_PARENT • IDENTIFIER RIGHT_PARENT LEFT_BRACKET block RIGHT_BRACKET

    IDENTIFIER  desplazar e ir al estado 224


Estado 213

   55 if_stmt: IF_KW LEFT_PARENT exp_op $@2 RIGHT_PARENT std_block_d •

    $default  reduce usando la regla 55 (if_stmt)


Estado 214

   61 switch_stmt: SWITCH_KW LEFT_PARENT exp_op RIGHT_PARENT LEFT_BRACKET EOL • switch_block $@3 RIGHT_BRACKET
   62            | SWITCH_KW LEFT_PARENT exp_op RIGHT_PARENT LEFT_BRACKET EOL • RIGHT_BRACKET

    RIGHT_BRACKET  desplazar e ir al estado 225
    CASE_KW        desplazar e ir al estado 226
    DEFAULT_KW     desplazar e ir al estado 227

    switch_block  ir al estado 228
    switch_line   ir al estado 229


Estado 215

  131 func_args: func_arg COMMA EOL func_args •

    $default  reduce usando la regla 131 (func_args)


Estado 216

   39 for_decl: for_vrs_dec COLON for_cond COLON for_sec •

    $default  reduce usando la regla 39 (for_decl)


Estado 217

   44 for_sec: for_iter •
   45        | for_iter • COMMA for_sec

    COMMA  desplazar e ir al estado 230

    $default  reduce usando la regla 44 (for_sec)


Estado 218

   46 for_iter: inc_dec •

    $default  reduce usando la regla 46 (for_iter)


Estado 219

   47 for_iter: asingn •

    $default  reduce usando la regla 47 (for_iter)


Estado 220

   80 param: IDENTIFIER COLON type OP_ASSIGN • exp_op

    OP_SUB       desplazar e ir al estado 74
    OP_NOT       desplazar e ir al estado 75
    OP_INC       desplazar e ir al estado 3
    OP_DEC       desplazar e ir al estado 4
    LEFT_PARENT  desplazar e ir al estado 76
    D_COLON      desplazar e ir al estado 5
    TRUE_KW      desplazar e ir al estado 77
    FALSE_KW     desplazar e ir al estado 78
    CHAR         desplazar e ir al estado 79
    STRING       desplazar e ir al estado 80
    NUM          desplazar e ir al estado 81
    NUM_DEC      desplazar e ir al estado 82
    IDENTIFIER   desplazar e ir al estado 18

    value_data   ir al estado 83
    var_value    ir al estado 84
    exp_op       ir al estado 231
    inc_dec      ir al estado 86
    ops_inc_dec  ir al estado 38
    func_call    ir al estado 87


Estado 221

   78 params_sec: param COMMA EOL params_sec •

    $default  reduce usando la regla 78 (params_sec)


Estado 222

   35 throw_dec: THROW_KW IDENTIFIER LEFT_PARENT RIGHT_PARENT •

    $default  reduce usando la regla 35 (throw_dec)


Estado 223

   34 throw_dec: THROW_KW IDENTIFIER LEFT_PARENT STRING • RIGHT_PARENT

    RIGHT_PARENT  desplazar e ir al estado 232


Estado 224

   71 try_catch: TRY_KW LEFT_BRACKET block RIGHT_BRACKET CATCH_KW LEFT_PARENT IDENTIFIER • RIGHT_PARENT LEFT_BRACKET block RIGHT_BRACKET

    RIGHT_PARENT  desplazar e ir al estado 233


Estado 225

   62 switch_stmt: SWITCH_KW LEFT_PARENT exp_op RIGHT_PARENT LEFT_BRACKET EOL RIGHT_BRACKET •

    $default  reduce usando la regla 62 (switch_stmt)


Estado 226

   66 switch_line: CASE_KW • exp_op COLON $@4 block

    OP_SUB       desplazar e ir al estado 74
    OP_NOT       desplazar e ir al estado 75
    OP_INC       desplazar e ir al estado 3
    OP_DEC       desplazar e ir al estado 4
    LEFT_PARENT  desplazar e ir al estado 76
    D_COLON      desplazar e ir al estado 5
    TRUE_KW      desplazar e ir al estado 77
    FALSE_KW     desplazar e ir al estado 78
    CHAR         desplazar e ir al estado 79
    STRING       desplazar e ir al estado 80
    NUM          desplazar e ir al estado 81
    NUM_DEC      desplazar e ir al estado 82
    IDENTIFIER   desplazar e ir al estado 18

    value_data   ir al estado 83
    var_value    ir al estado 84
    exp_op       ir al estado 234
    inc_dec      ir al estado 86
    ops_inc_dec  ir al estado 38
    func_call    ir al estado 87


Estado 227

   68 switch_line: DEFAULT_KW • COLON $@5 block

    COLON  desplazar e ir al estado 235


Estado 228

   61 switch_stmt: SWITCH_KW LEFT_PARENT exp_op RIGHT_PARENT LEFT_BRACKET EOL switch_block • $@3 RIGHT_BRACKET
   64 switch_block: switch_block • switch_line

    CASE_KW     desplazar e ir al estado 226
    DEFAULT_KW  desplazar e ir al estado 227

    $default  reduce usando la regla 60 ($@3)

    $@3          ir al estado 236
    switch_line  ir al estado 237


Estado 229

   63 switch_block: switch_line •

    $default  reduce usando la regla 63 (switch_block)


Estado 230

   45 for_sec: for_iter COMMA • for_sec

    OP_INC      desplazar e ir al estado 3
    OP_DEC      desplazar e ir al estado 4
    D_COLON     desplazar e ir al estado 5
    IDENTIFIER  desplazar e ir al estado 68

    for_sec      ir al estado 238
    for_iter     ir al estado 217
    var_value    ir al estado 36
    inc_dec      ir al estado 218
    ops_inc_dec  ir al estado 38
    asingn       ir al estado 219


Estado 231

   80 param: IDENTIFIER COLON type OP_ASSIGN exp_op •
   98 exp_op: exp_op • OP_ADD exp_op
   99       | exp_op • OP_SUB exp_op
  100       | exp_op • OP_MUL exp_op
  101       | exp_op • OP_DIV exp_op
  102       | exp_op • OP_MOD exp_op
  104       | exp_op • OP_GT exp_op
  105       | exp_op • OP_LT exp_op
  106       | exp_op • OP_GTE exp_op
  107       | exp_op • OP_LTE exp_op
  108       | exp_op • OP_EQ exp_op
  109       | exp_op • OP_NEQ exp_op
  110       | exp_op • OP_AND exp_op
  111       | exp_op • OP_OR exp_op

    OP_AND  desplazar e ir al estado 122
    OP_OR   desplazar e ir al estado 123
    OP_EQ   desplazar e ir al estado 124
    OP_NEQ  desplazar e ir al estado 125
    OP_GT   desplazar e ir al estado 126
    OP_LT   desplazar e ir al estado 127
    OP_GTE  desplazar e ir al estado 128
    OP_LTE  desplazar e ir al estado 129
    OP_ADD  desplazar e ir al estado 130
    OP_SUB  desplazar e ir al estado 131
    OP_MUL  desplazar e ir al estado 132
    OP_DIV  desplazar e ir al estado 133
    OP_MOD  desplazar e ir al estado 134

    $default  reduce usando la regla 80 (param)


Estado 232

   34 throw_dec: THROW_KW IDENTIFIER LEFT_PARENT STRING RIGHT_PARENT •

    $default  reduce usando la regla 34 (throw_dec)


Estado 233

   71 try_catch: TRY_KW LEFT_BRACKET block RIGHT_BRACKET CATCH_KW LEFT_PARENT IDENTIFIER RIGHT_PARENT • LEFT_BRACKET block RIGHT_BRACKET

    LEFT_BRACKET  desplazar e ir al estado 239


Estado 234

   66 switch_line: CASE_KW exp_op • COLON $@4 block
   98 exp_op: exp_op • OP_ADD exp_op
   99       | exp_op • OP_SUB exp_op
  100       | exp_op • OP_MUL exp_op
  101       | exp_op • OP_DIV exp_op
  102       | exp_op • OP_MOD exp_op
  104       | exp_op • OP_GT exp_op
  105       | exp_op • OP_LT exp_op
  106       | exp_op • OP_GTE exp_op
  107       | exp_op • OP_LTE exp_op
  108       | exp_op • OP_EQ exp_op
  109       | exp_op • OP_NEQ exp_op
  110       | exp_op • OP_AND exp_op
  111       | exp_op • OP_OR exp_op

    OP_AND  desplazar e ir al estado 122
    OP_OR   desplazar e ir al estado 123
    OP_EQ   desplazar e ir al estado 124
    OP_NEQ  desplazar e ir al estado 125
    OP_GT   desplazar e ir al estado 126
    OP_LT   desplazar e ir al estado 127
    OP_GTE  desplazar e ir al estado 128
    OP_LTE  desplazar e ir al estado 129
    OP_ADD  desplazar e ir al estado 130
    OP_SUB  desplazar e ir al estado 131
    OP_MUL  desplazar e ir al estado 132
    OP_DIV  desplazar e ir al estado 133
    OP_MOD  desplazar e ir al estado 134
    COLON   desplazar e ir al estado 240


Estado 235

   68 switch_line: DEFAULT_KW COLON • $@5 block

    $default  reduce usando la regla 67 ($@5)

    $@5  ir al estado 241


Estado 236

   61 switch_stmt: SWITCH_KW LEFT_PARENT exp_op RIGHT_PARENT LEFT_BRACKET EOL switch_block $@3 • RIGHT_BRACKET

    RIGHT_BRACKET  desplazar e ir al estado 242


Estado 237

   64 switch_block: switch_block switch_line •

    $default  reduce usando la regla 64 (switch_block)


Estado 238

   45 for_sec: for_iter COMMA for_sec •

    $default  reduce usando la regla 45 (for_sec)


Estado 239

   71 try_catch: TRY_KW LEFT_BRACKET block RIGHT_BRACKET CATCH_KW LEFT_PARENT IDENTIFIER RIGHT_PARENT LEFT_BRACKET • block RIGHT_BRACKET

    $default  reduce usando la regla 18 (block)

    block  ir al estado 243


Estado 240

   66 switch_line: CASE_KW exp_op COLON • $@4 block

    $default  reduce usando la regla 65 ($@4)

    $@4  ir al estado 244


Estado 241

   68 switch_line: DEFAULT_KW COLON $@5 • block

    $default  reduce usando la regla 18 (block)

    block  ir al estado 245


Estado 242

   61 switch_stmt: SWITCH_KW LEFT_PARENT exp_op RIGHT_PARENT LEFT_BRACKET EOL switch_block $@3 RIGHT_BRACKET •

    $default  reduce usando la regla 61 (switch_stmt)


Estado 243

   19 block: block • block_line
   71 try_catch: TRY_KW LEFT_BRACKET block RIGHT_BRACKET CATCH_KW LEFT_PARENT IDENTIFIER RIGHT_PARENT LEFT_BRACKET block • RIGHT_BRACKET

    THROW_KW       desplazar e ir al estado 143
    OP_INC         desplazar e ir al estado 3
    OP_DEC         desplazar e ir al estado 4
    RIGHT_BRACKET  desplazar e ir al estado 246
    D_COLON        desplazar e ir al estado 5
    FOR_KW         desplazar e ir al estado 6
    WHILE_KW       desplazar e ir al estado 7
    DO_KW          desplazar e ir al estado 8
    BREAK_KW       desplazar e ir al estado 145
    RETURN_KW      desplazar e ir al estado 146
    TRY_KW         desplazar e ir al estado 10
    CHAR_KW        desplazar e ir al estado 11
    INT_KW         desplazar e ir al estado 12
    FLOAT_KW       desplazar e ir al estado 13
    BOOL_KW        desplazar e ir al estado 14
    STRING_KW      desplazar e ir al estado 15
    IF_KW          desplazar e ir al estado 16
    SWITCH_KW      desplazar e ir al estado 17
    IDENTIFIER     desplazar e ir al estado 18
    EOL            desplazar e ir al estado 147

    block_line   ir al estado 148
    block_exp    ir al estado 149
    rtrn         ir al estado 150
    throw_dec    ir al estado 151
    loop         ir al estado 152
    while_exp    ir al estado 26
    conditional  ir al estado 153
    if_els_stmt  ir al estado 28
    if_stmt      ir al estado 29
    switch_stmt  ir al estado 30
    exception    ir al estado 154
    try_catch    ir al estado 32
    instance     ir al estado 155
    inst_id      ir al estado 34
    type         ir al estado 35
    var_value    ir al estado 36
    inc_dec      ir al estado 156
    ops_inc_dec  ir al estado 38
    func_call    ir al estado 157
    asingn       ir al estado 158


Estado 244

   66 switch_line: CASE_KW exp_op COLON $@4 • block

    $default  reduce usando la regla 18 (block)

    block  ir al estado 247


Estado 245

   19 block: block • block_line
   68 switch_line: DEFAULT_KW COLON $@5 block •

    THROW_KW    desplazar e ir al estado 143
    OP_INC      desplazar e ir al estado 3
    OP_DEC      desplazar e ir al estado 4
    D_COLON     desplazar e ir al estado 5
    FOR_KW      desplazar e ir al estado 6
    WHILE_KW    desplazar e ir al estado 7
    DO_KW       desplazar e ir al estado 8
    BREAK_KW    desplazar e ir al estado 145
    RETURN_KW   desplazar e ir al estado 146
    TRY_KW      desplazar e ir al estado 10
    CHAR_KW     desplazar e ir al estado 11
    INT_KW      desplazar e ir al estado 12
    FLOAT_KW    desplazar e ir al estado 13
    BOOL_KW     desplazar e ir al estado 14
    STRING_KW   desplazar e ir al estado 15
    IF_KW       desplazar e ir al estado 16
    SWITCH_KW   desplazar e ir al estado 17
    IDENTIFIER  desplazar e ir al estado 18
    EOL         desplazar e ir al estado 147

    $default  reduce usando la regla 68 (switch_line)

    block_line   ir al estado 148
    block_exp    ir al estado 149
    rtrn         ir al estado 150
    throw_dec    ir al estado 151
    loop         ir al estado 152
    while_exp    ir al estado 26
    conditional  ir al estado 153
    if_els_stmt  ir al estado 28
    if_stmt      ir al estado 29
    switch_stmt  ir al estado 30
    exception    ir al estado 154
    try_catch    ir al estado 32
    instance     ir al estado 155
    inst_id      ir al estado 34
    type         ir al estado 35
    var_value    ir al estado 36
    inc_dec      ir al estado 156
    ops_inc_dec  ir al estado 38
    func_call    ir al estado 157
    asingn       ir al estado 158


Estado 246

   71 try_catch: TRY_KW LEFT_BRACKET block RIGHT_BRACKET CATCH_KW LEFT_PARENT IDENTIFIER RIGHT_PARENT LEFT_BRACKET block RIGHT_BRACKET •

    $default  reduce usando la regla 71 (try_catch)


Estado 247

   19 block: block • block_line
   66 switch_line: CASE_KW exp_op COLON $@4 block •

    THROW_KW    desplazar e ir al estado 143
    OP_INC      desplazar e ir al estado 3
    OP_DEC      desplazar e ir al estado 4
    D_COLON     desplazar e ir al estado 5
    FOR_KW      desplazar e ir al estado 6
    WHILE_KW    desplazar e ir al estado 7
    DO_KW       desplazar e ir al estado 8
    BREAK_KW    desplazar e ir al estado 145
    RETURN_KW   desplazar e ir al estado 146
    TRY_KW      desplazar e ir al estado 10
    CHAR_KW     desplazar e ir al estado 11
    INT_KW      desplazar e ir al estado 12
    FLOAT_KW    desplazar e ir al estado 13
    BOOL_KW     desplazar e ir al estado 14
    STRING_KW   desplazar e ir al estado 15
    IF_KW       desplazar e ir al estado 16
    SWITCH_KW   desplazar e ir al estado 17
    IDENTIFIER  desplazar e ir al estado 18
    EOL         desplazar e ir al estado 147

    $default  reduce usando la regla 66 (switch_line)

    block_line   ir al estado 148
    block_exp    ir al estado 149
    rtrn         ir al estado 150
    throw_dec    ir al estado 151
    loop         ir al estado 152
    while_exp    ir al estado 26
    conditional  ir al estado 153
    if_els_stmt  ir al estado 28
    if_stmt      ir al estado 29
    switch_stmt  ir al estado 30
    exception    ir al estado 154
    try_catch    ir al estado 32
    instance     ir al estado 155
    inst_id      ir al estado 34
    type         ir al estado 35
    var_value    ir al estado 36
    inc_dec      ir al estado 156
    ops_inc_dec  ir al estado 38
    func_call    ir al estado 157
    asingn       ir al estado 158
