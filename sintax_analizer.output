Terminales no usados en la gramática

    NULL_KW
    LEFT_SQUARE
    RIGHT_SQUARE
    DOT


Gramática

    0 $accept: in $end

    1 in: ε
    2   | in line

    3 line: EOL
    4     | exp EOL

    5 exp: instance
    6    | function
    7    | inc_dec
    8    | func_call
    9    | asingn

   10 function: func_dec std_blck_d

   11 $@1: ε

   12 std_blck_d: LEFT_BRACKET $@1 block RIGHT_BRACKET

   13 func_dec: FUNCTION_KW IDENTIFIER func_params func_type

   14 block: ε
   15      | block block_line

   16 block_line: EOL
   17           | block_exp EOL

   18 block_exp: instance
   19          | BREAK_KW
   20          | inc_dec
   21          | func_call
   22          | asingn
   23          | loop
   24          | conditional
   25          | exception
   26          | rtrn
   27          | throw

   28 rtrn: RETURN_KW exp_op
   29     | RETURN_KW

   30 throw: THROW_KW IDENTIFIER LEFT_PARENT STRING RIGHT_PARENT
   31      | THROW_KW IDENTIFIER LEFT_PARENT RIGHT_PARENT

   32 loop: FOR_KW LEFT_PARENT for_decl RIGHT_PARENT std_blck_d
   33     | while_exp std_blck_d
   34     | DO_KW std_blck_d while_exp

   35 for_decl: for_var COLON for_cond COLON for_sec

   36 for_var: IDENTIFIER OP_ASSIGN exp_op

   37 for_cond: exp_op

   38 for_sec: for_iter
   39        | for_iter COMMA for_sec

   40 for_iter: inc_dec
   41         | asingn

   42 while_exp: WHILE_KW LEFT_PARENT exp_op RIGHT_PARENT

   43 conditional: if_els_stmt
   44            | switch_stmt

   45 if_els_stmt: if_stmt
   46            | if_stmt else_stmt
   47            | if_stmt els_if_stmt

   48 $@2: ε

   49 if_stmt: IF_KW LEFT_PARENT exp_op $@2 RIGHT_PARENT std_blck_d

   50 else_stmt: ELSE_KW std_blck_d

   51 els_if_stmt: ELSE_KW if_stmt
   52            | els_if_stmt ELSE_KW if_stmt
   53            | els_if_stmt else_stmt

   54 $@3: ε

   55 switch_stmt: SWITCH_KW LEFT_PARENT exp_op RIGHT_PARENT LEFT_BRACKET EOL switch_block $@3 RIGHT_BRACKET
   56            | SWITCH_KW LEFT_PARENT exp_op RIGHT_PARENT LEFT_BRACKET EOL RIGHT_BRACKET

   57 switch_block: switch_line
   58             | switch_block switch_line

   59 $@4: ε

   60 switch_line: CASE_KW exp_op COLON $@4 block

   61 $@5: ε

   62 switch_line: DEFAULT_KW COLON $@5 block

   63 exception: try_catch
   64          | try_catch FINALLY_KW LEFT_BRACKET block RIGHT_BRACKET

   65 try_catch: TRY_KW LEFT_BRACKET block RIGHT_BRACKET CATCH_KW LEFT_PARENT IDENTIFIER RIGHT_PARENT LEFT_BRACKET block RIGHT_BRACKET

   66 func_type: COLON type
   67          | COLON VOID_KW

   68 func_params: LEFT_PARENT params_sec RIGHT_PARENT
   69            | LEFT_PARENT RIGHT_PARENT

   70 params_sec: param
   71           | param COMMA params_sec
   72           | param COMMA EOL params_sec

   73 param: IDENTIFIER COLON type
   74      | IDENTIFIER COLON type OP_ASSIGN exp_op

   75 instance: inst_id
   76         | inst_id OP_ASSIGN exp_op

   77 inst_id: type IDENTIFIER

   78 type: CHAR_KW
   79     | INT_KW
   80     | FLOAT_KW
   81     | BOOL_KW
   82     | STRING_KW

   83 value_data: CHAR
   84           | NUM
   85           | NUM_DEC
   86           | TRUE_KW
   87           | FALSE_KW
   88           | STRING
   89           | var_value

   90 var_value: IDENTIFIER
   91          | D_COLON IDENTIFIER

   92 exp_op: exp_op OP_ADD exp_op
   93       | exp_op OP_SUB exp_op
   94       | exp_op OP_MUL exp_op
   95       | exp_op OP_DIV exp_op
   96       | exp_op OP_MOD exp_op
   97       | OP_SUB exp_op
   98       | exp_op OP_GT exp_op
   99       | exp_op OP_LT exp_op
  100       | exp_op OP_GTE exp_op
  101       | exp_op OP_LTE exp_op
  102       | exp_op OP_EQ exp_op
  103       | exp_op OP_NEQ exp_op
  104       | exp_op OP_AND exp_op
  105       | exp_op OP_OR exp_op
  106       | OP_NOT exp_op
  107       | var_value OP_ASSIGN exp_op
  108       | var_value OP_ADD_ASSIGN exp_op
  109       | var_value OP_SUB_ASSIGN exp_op
  110       | var_value OP_MUL_ASSIGN exp_op
  111       | var_value OP_DIV_ASSIGN exp_op
  112       | var_value OP_MOD_ASSIGN exp_op
  113       | LEFT_PARENT exp_op RIGHT_PARENT
  114       | value_data
  115       | func_call
  116       | inc_dec

  117 inc_dec: var_value ops_inc_dec
  118        | ops_inc_dec var_value

  119 ops_inc_dec: OP_INC
  120            | OP_DEC

  121 func_call: IDENTIFIER LEFT_PARENT RIGHT_PARENT
  122          | IDENTIFIER LEFT_PARENT func_args RIGHT_PARENT

  123 func_args: func_arg
  124          | func_arg COMMA func_args
  125          | func_arg COMMA EOL func_args

  126 func_arg: IDENTIFIER COLON exp_op
  127         | exp_op

  128 asingn: var_value OP_ASSIGN exp_op
  129       | var_value OP_ADD_ASSIGN exp_op
  130       | var_value ops_assign exp_op

  131 ops_assign: OP_SUB_ASSIGN
  132           | OP_MUL_ASSIGN
  133           | OP_DIV_ASSIGN
  134           | OP_MOD_ASSIGN


Terminales con las reglas donde aparecen

    $end (0) 0
    error (256)
    CHAR_KW (258) 78
    INT_KW (259) 79
    FLOAT_KW (260) 80
    BOOL_KW (261) 81
    STRING_KW (262) 82
    VOID_KW (263) 67
    IF_KW (264) 49
    ELSE_KW (265) 50 51 52
    SWITCH_KW (266) 55 56
    CASE_KW (267) 60
    DEFAULT_KW (268) 62
    FOR_KW (269) 32
    WHILE_KW (270) 42
    DO_KW (271) 34
    BREAK_KW (272) 19
    RETURN_KW (273) 28 29
    TRUE_KW (274) 86
    FALSE_KW (275) 87
    FUNCTION_KW (276) 13
    TRY_KW (277) 65
    CATCH_KW (278) 65
    FINALLY_KW (279) 64
    THROW_KW (280) 30 31
    NULL_KW (281)
    OP_INC (282) 119
    OP_DEC (283) 120
    OP_ADD (284) 92
    OP_SUB (285) 93 97
    OP_MUL (286) 94
    OP_DIV (287) 95
    OP_MOD (288) 96
    OP_AND (289) 104
    OP_OR (290) 105
    OP_NOT (291) 106
    OP_EQ (292) 102
    OP_NEQ (293) 103
    OP_GT (294) 98
    OP_LT (295) 99
    OP_GTE (296) 100
    OP_LTE (297) 101
    OP_ASSIGN (298) 36 74 76 107 128
    OP_ADD_ASSIGN (299) 108 129
    OP_SUB_ASSIGN (300) 109 131
    OP_MUL_ASSIGN (301) 110 132
    OP_DIV_ASSIGN (302) 111 133
    OP_MOD_ASSIGN (303) 112 134
    UMINUS (304)
    LEFT_PARENT (305) 30 31 32 42 49 55 56 65 68 69 113 121 122
    RIGHT_PARENT (306) 30 31 32 42 49 55 56 65 68 69 113 121 122
    LEFT_BRACKET (307) 12 55 56 64 65
    RIGHT_BRACKET (308) 12 55 56 64 65
    LEFT_SQUARE (309)
    RIGHT_SQUARE (310)
    COMMA (311) 39 71 72 124 125
    DOT (312)
    D_COLON (313) 91
    COLON (314) 35 60 62 66 67 73 74 126
    CHAR <ival> (315) 83
    STRING <ival> (316) 30 88
    NUM <ival> (317) 84
    NUM_DEC <ival> (318) 85
    IDENTIFIER <sval> (319) 13 30 31 36 65 73 74 77 90 91 121 122 126
    EOL (320) 3 4 16 17 55 56 72 125


No terminales con las reglas donde aparecen

    $accept (66)
        on left: 0
    in (67)
        on left: 1 2
        on right: 0 2
    line (68)
        on left: 3 4
        on right: 2
    exp (69)
        on left: 5 6 7 8 9
        on right: 4
    function (70)
        on left: 10
        on right: 6
    std_blck_d (71)
        on left: 12
        on right: 10 32 33 34 49 50
    $@1 (72)
        on left: 11
        on right: 12
    func_dec (73)
        on left: 13
        on right: 10
    block (74)
        on left: 14 15
        on right: 12 15 60 62 64 65
    block_line (75)
        on left: 16 17
        on right: 15
    block_exp (76)
        on left: 18 19 20 21 22 23 24 25 26 27
        on right: 17
    rtrn <ival> (77)
        on left: 28 29
        on right: 26
    throw (78)
        on left: 30 31
        on right: 27
    loop (79)
        on left: 32 33 34
        on right: 23
    for_decl (80)
        on left: 35
        on right: 32
    for_var (81)
        on left: 36
        on right: 35
    for_cond (82)
        on left: 37
        on right: 35
    for_sec (83)
        on left: 38 39
        on right: 35 39
    for_iter (84)
        on left: 40 41
        on right: 38 39
    while_exp (85)
        on left: 42
        on right: 33 34
    conditional (86)
        on left: 43 44
        on right: 24
    if_els_stmt (87)
        on left: 45 46 47
        on right: 43
    if_stmt (88)
        on left: 49
        on right: 45 46 47 51 52
    $@2 (89)
        on left: 48
        on right: 49
    else_stmt (90)
        on left: 50
        on right: 46 53
    els_if_stmt (91)
        on left: 51 52 53
        on right: 47 52 53
    switch_stmt (92)
        on left: 55 56
        on right: 44
    $@3 (93)
        on left: 54
        on right: 55
    switch_block <ival> (94)
        on left: 57 58
        on right: 55 58
    switch_line <ival> (95)
        on left: 60 62
        on right: 57 58
    $@4 (96)
        on left: 59
        on right: 60
    $@5 (97)
        on left: 61
        on right: 62
    exception (98)
        on left: 63 64
        on right: 25
    try_catch (99)
        on left: 65
        on right: 63 64
    func_type <ival> (100)
        on left: 66 67
        on right: 13
    func_params (101)
        on left: 68 69
        on right: 13
    params_sec (102)
        on left: 70 71 72
        on right: 68 71 72
    param (103)
        on left: 73 74
        on right: 70 71 72
    instance (104)
        on left: 75 76
        on right: 5 18
    inst_id <ival> (105)
        on left: 77
        on right: 75 76
    type <ival> (106)
        on left: 78 79 80 81 82
        on right: 66 73 74 77
    value_data <ival> (107)
        on left: 83 84 85 86 87 88 89
        on right: 114
    var_value <ival> (108)
        on left: 90 91
        on right: 89 107 108 109 110 111 112 117 118 128 129 130
    exp_op <ival> (109)
        on left: 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116
        on right: 28 36 37 42 49 55 56 60 74 76 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 126 127 128 129 130
    inc_dec <ival> (110)
        on left: 117 118
        on right: 7 20 40 116
    ops_inc_dec (111)
        on left: 119 120
        on right: 117 118
    func_call <ival> (112)
        on left: 121 122
        on right: 8 21 115
    func_args (113)
        on left: 123 124 125
        on right: 122 124 125
    func_arg (114)
        on left: 126 127
        on right: 123 124 125
    asingn (115)
        on left: 128 129 130
        on right: 9 22 41
    ops_assign (116)
        on left: 131 132 133 134
        on right: 130


Estado 0

    0 $accept: • in $end

    $default  reduce usando la regla 1 (in)

    in  ir al estado 1


Estado 1

    0 $accept: in • $end
    2 in: in • line

    $end         desplazar e ir al estado 2
    CHAR_KW      desplazar e ir al estado 3
    INT_KW       desplazar e ir al estado 4
    FLOAT_KW     desplazar e ir al estado 5
    BOOL_KW      desplazar e ir al estado 6
    STRING_KW    desplazar e ir al estado 7
    FUNCTION_KW  desplazar e ir al estado 8
    OP_INC       desplazar e ir al estado 9
    OP_DEC       desplazar e ir al estado 10
    D_COLON      desplazar e ir al estado 11
    IDENTIFIER   desplazar e ir al estado 12
    EOL          desplazar e ir al estado 13

    line         ir al estado 14
    exp          ir al estado 15
    function     ir al estado 16
    func_dec     ir al estado 17
    instance     ir al estado 18
    inst_id      ir al estado 19
    type         ir al estado 20
    var_value    ir al estado 21
    inc_dec      ir al estado 22
    ops_inc_dec  ir al estado 23
    func_call    ir al estado 24
    asingn       ir al estado 25


Estado 2

    0 $accept: in $end •

    $default  aceptar


Estado 3

   78 type: CHAR_KW •

    $default  reduce usando la regla 78 (type)


Estado 4

   79 type: INT_KW •

    $default  reduce usando la regla 79 (type)


Estado 5

   80 type: FLOAT_KW •

    $default  reduce usando la regla 80 (type)


Estado 6

   81 type: BOOL_KW •

    $default  reduce usando la regla 81 (type)


Estado 7

   82 type: STRING_KW •

    $default  reduce usando la regla 82 (type)


Estado 8

   13 func_dec: FUNCTION_KW • IDENTIFIER func_params func_type

    IDENTIFIER  desplazar e ir al estado 26


Estado 9

  119 ops_inc_dec: OP_INC •

    $default  reduce usando la regla 119 (ops_inc_dec)


Estado 10

  120 ops_inc_dec: OP_DEC •

    $default  reduce usando la regla 120 (ops_inc_dec)


Estado 11

   91 var_value: D_COLON • IDENTIFIER

    IDENTIFIER  desplazar e ir al estado 27


Estado 12

   90 var_value: IDENTIFIER •
  121 func_call: IDENTIFIER • LEFT_PARENT RIGHT_PARENT
  122          | IDENTIFIER • LEFT_PARENT func_args RIGHT_PARENT

    LEFT_PARENT  desplazar e ir al estado 28

    $default  reduce usando la regla 90 (var_value)


Estado 13

    3 line: EOL •

    $default  reduce usando la regla 3 (line)


Estado 14

    2 in: in line •

    $default  reduce usando la regla 2 (in)


Estado 15

    4 line: exp • EOL

    EOL  desplazar e ir al estado 29


Estado 16

    6 exp: function •

    $default  reduce usando la regla 6 (exp)


Estado 17

   10 function: func_dec • std_blck_d

    LEFT_BRACKET  desplazar e ir al estado 30

    std_blck_d  ir al estado 31


Estado 18

    5 exp: instance •

    $default  reduce usando la regla 5 (exp)


Estado 19

   75 instance: inst_id •
   76         | inst_id • OP_ASSIGN exp_op

    OP_ASSIGN  desplazar e ir al estado 32

    $default  reduce usando la regla 75 (instance)


Estado 20

   77 inst_id: type • IDENTIFIER

    IDENTIFIER  desplazar e ir al estado 33


Estado 21

  117 inc_dec: var_value • ops_inc_dec
  128 asingn: var_value • OP_ASSIGN exp_op
  129       | var_value • OP_ADD_ASSIGN exp_op
  130       | var_value • ops_assign exp_op

    OP_INC         desplazar e ir al estado 9
    OP_DEC         desplazar e ir al estado 10
    OP_ASSIGN      desplazar e ir al estado 34
    OP_ADD_ASSIGN  desplazar e ir al estado 35
    OP_SUB_ASSIGN  desplazar e ir al estado 36
    OP_MUL_ASSIGN  desplazar e ir al estado 37
    OP_DIV_ASSIGN  desplazar e ir al estado 38
    OP_MOD_ASSIGN  desplazar e ir al estado 39

    ops_inc_dec  ir al estado 40
    ops_assign   ir al estado 41


Estado 22

    7 exp: inc_dec •

    $default  reduce usando la regla 7 (exp)


Estado 23

  118 inc_dec: ops_inc_dec • var_value

    D_COLON     desplazar e ir al estado 11
    IDENTIFIER  desplazar e ir al estado 42

    var_value  ir al estado 43


Estado 24

    8 exp: func_call •

    $default  reduce usando la regla 8 (exp)


Estado 25

    9 exp: asingn •

    $default  reduce usando la regla 9 (exp)


Estado 26

   13 func_dec: FUNCTION_KW IDENTIFIER • func_params func_type

    LEFT_PARENT  desplazar e ir al estado 44

    func_params  ir al estado 45


Estado 27

   91 var_value: D_COLON IDENTIFIER •

    $default  reduce usando la regla 91 (var_value)


Estado 28

  121 func_call: IDENTIFIER LEFT_PARENT • RIGHT_PARENT
  122          | IDENTIFIER LEFT_PARENT • func_args RIGHT_PARENT

    TRUE_KW       desplazar e ir al estado 46
    FALSE_KW      desplazar e ir al estado 47
    OP_INC        desplazar e ir al estado 9
    OP_DEC        desplazar e ir al estado 10
    OP_SUB        desplazar e ir al estado 48
    OP_NOT        desplazar e ir al estado 49
    LEFT_PARENT   desplazar e ir al estado 50
    RIGHT_PARENT  desplazar e ir al estado 51
    D_COLON       desplazar e ir al estado 11
    CHAR          desplazar e ir al estado 52
    STRING        desplazar e ir al estado 53
    NUM           desplazar e ir al estado 54
    NUM_DEC       desplazar e ir al estado 55
    IDENTIFIER    desplazar e ir al estado 56

    value_data   ir al estado 57
    var_value    ir al estado 58
    exp_op       ir al estado 59
    inc_dec      ir al estado 60
    ops_inc_dec  ir al estado 23
    func_call    ir al estado 61
    func_args    ir al estado 62
    func_arg     ir al estado 63


Estado 29

    4 line: exp EOL •

    $default  reduce usando la regla 4 (line)


Estado 30

   12 std_blck_d: LEFT_BRACKET • $@1 block RIGHT_BRACKET

    $default  reduce usando la regla 11 ($@1)

    $@1  ir al estado 64


Estado 31

   10 function: func_dec std_blck_d •

    $default  reduce usando la regla 10 (function)


Estado 32

   76 instance: inst_id OP_ASSIGN • exp_op

    TRUE_KW      desplazar e ir al estado 46
    FALSE_KW     desplazar e ir al estado 47
    OP_INC       desplazar e ir al estado 9
    OP_DEC       desplazar e ir al estado 10
    OP_SUB       desplazar e ir al estado 48
    OP_NOT       desplazar e ir al estado 49
    LEFT_PARENT  desplazar e ir al estado 50
    D_COLON      desplazar e ir al estado 11
    CHAR         desplazar e ir al estado 52
    STRING       desplazar e ir al estado 53
    NUM          desplazar e ir al estado 54
    NUM_DEC      desplazar e ir al estado 55
    IDENTIFIER   desplazar e ir al estado 12

    value_data   ir al estado 57
    var_value    ir al estado 58
    exp_op       ir al estado 65
    inc_dec      ir al estado 60
    ops_inc_dec  ir al estado 23
    func_call    ir al estado 61


Estado 33

   77 inst_id: type IDENTIFIER •

    $default  reduce usando la regla 77 (inst_id)


Estado 34

  128 asingn: var_value OP_ASSIGN • exp_op

    TRUE_KW      desplazar e ir al estado 46
    FALSE_KW     desplazar e ir al estado 47
    OP_INC       desplazar e ir al estado 9
    OP_DEC       desplazar e ir al estado 10
    OP_SUB       desplazar e ir al estado 48
    OP_NOT       desplazar e ir al estado 49
    LEFT_PARENT  desplazar e ir al estado 50
    D_COLON      desplazar e ir al estado 11
    CHAR         desplazar e ir al estado 52
    STRING       desplazar e ir al estado 53
    NUM          desplazar e ir al estado 54
    NUM_DEC      desplazar e ir al estado 55
    IDENTIFIER   desplazar e ir al estado 12

    value_data   ir al estado 57
    var_value    ir al estado 58
    exp_op       ir al estado 66
    inc_dec      ir al estado 60
    ops_inc_dec  ir al estado 23
    func_call    ir al estado 61


Estado 35

  129 asingn: var_value OP_ADD_ASSIGN • exp_op

    TRUE_KW      desplazar e ir al estado 46
    FALSE_KW     desplazar e ir al estado 47
    OP_INC       desplazar e ir al estado 9
    OP_DEC       desplazar e ir al estado 10
    OP_SUB       desplazar e ir al estado 48
    OP_NOT       desplazar e ir al estado 49
    LEFT_PARENT  desplazar e ir al estado 50
    D_COLON      desplazar e ir al estado 11
    CHAR         desplazar e ir al estado 52
    STRING       desplazar e ir al estado 53
    NUM          desplazar e ir al estado 54
    NUM_DEC      desplazar e ir al estado 55
    IDENTIFIER   desplazar e ir al estado 12

    value_data   ir al estado 57
    var_value    ir al estado 58
    exp_op       ir al estado 67
    inc_dec      ir al estado 60
    ops_inc_dec  ir al estado 23
    func_call    ir al estado 61


Estado 36

  131 ops_assign: OP_SUB_ASSIGN •

    $default  reduce usando la regla 131 (ops_assign)


Estado 37

  132 ops_assign: OP_MUL_ASSIGN •

    $default  reduce usando la regla 132 (ops_assign)


Estado 38

  133 ops_assign: OP_DIV_ASSIGN •

    $default  reduce usando la regla 133 (ops_assign)


Estado 39

  134 ops_assign: OP_MOD_ASSIGN •

    $default  reduce usando la regla 134 (ops_assign)


Estado 40

  117 inc_dec: var_value ops_inc_dec •

    $default  reduce usando la regla 117 (inc_dec)


Estado 41

  130 asingn: var_value ops_assign • exp_op

    TRUE_KW      desplazar e ir al estado 46
    FALSE_KW     desplazar e ir al estado 47
    OP_INC       desplazar e ir al estado 9
    OP_DEC       desplazar e ir al estado 10
    OP_SUB       desplazar e ir al estado 48
    OP_NOT       desplazar e ir al estado 49
    LEFT_PARENT  desplazar e ir al estado 50
    D_COLON      desplazar e ir al estado 11
    CHAR         desplazar e ir al estado 52
    STRING       desplazar e ir al estado 53
    NUM          desplazar e ir al estado 54
    NUM_DEC      desplazar e ir al estado 55
    IDENTIFIER   desplazar e ir al estado 12

    value_data   ir al estado 57
    var_value    ir al estado 58
    exp_op       ir al estado 68
    inc_dec      ir al estado 60
    ops_inc_dec  ir al estado 23
    func_call    ir al estado 61


Estado 42

   90 var_value: IDENTIFIER •

    $default  reduce usando la regla 90 (var_value)


Estado 43

  118 inc_dec: ops_inc_dec var_value •

    $default  reduce usando la regla 118 (inc_dec)


Estado 44

   68 func_params: LEFT_PARENT • params_sec RIGHT_PARENT
   69            | LEFT_PARENT • RIGHT_PARENT

    RIGHT_PARENT  desplazar e ir al estado 69
    IDENTIFIER    desplazar e ir al estado 70

    params_sec  ir al estado 71
    param       ir al estado 72


Estado 45

   13 func_dec: FUNCTION_KW IDENTIFIER func_params • func_type

    COLON  desplazar e ir al estado 73

    func_type  ir al estado 74


Estado 46

   86 value_data: TRUE_KW •

    $default  reduce usando la regla 86 (value_data)


Estado 47

   87 value_data: FALSE_KW •

    $default  reduce usando la regla 87 (value_data)


Estado 48

   97 exp_op: OP_SUB • exp_op

    TRUE_KW      desplazar e ir al estado 46
    FALSE_KW     desplazar e ir al estado 47
    OP_INC       desplazar e ir al estado 9
    OP_DEC       desplazar e ir al estado 10
    OP_SUB       desplazar e ir al estado 48
    OP_NOT       desplazar e ir al estado 49
    LEFT_PARENT  desplazar e ir al estado 50
    D_COLON      desplazar e ir al estado 11
    CHAR         desplazar e ir al estado 52
    STRING       desplazar e ir al estado 53
    NUM          desplazar e ir al estado 54
    NUM_DEC      desplazar e ir al estado 55
    IDENTIFIER   desplazar e ir al estado 12

    value_data   ir al estado 57
    var_value    ir al estado 58
    exp_op       ir al estado 75
    inc_dec      ir al estado 60
    ops_inc_dec  ir al estado 23
    func_call    ir al estado 61


Estado 49

  106 exp_op: OP_NOT • exp_op

    TRUE_KW      desplazar e ir al estado 46
    FALSE_KW     desplazar e ir al estado 47
    OP_INC       desplazar e ir al estado 9
    OP_DEC       desplazar e ir al estado 10
    OP_SUB       desplazar e ir al estado 48
    OP_NOT       desplazar e ir al estado 49
    LEFT_PARENT  desplazar e ir al estado 50
    D_COLON      desplazar e ir al estado 11
    CHAR         desplazar e ir al estado 52
    STRING       desplazar e ir al estado 53
    NUM          desplazar e ir al estado 54
    NUM_DEC      desplazar e ir al estado 55
    IDENTIFIER   desplazar e ir al estado 12

    value_data   ir al estado 57
    var_value    ir al estado 58
    exp_op       ir al estado 76
    inc_dec      ir al estado 60
    ops_inc_dec  ir al estado 23
    func_call    ir al estado 61


Estado 50

  113 exp_op: LEFT_PARENT • exp_op RIGHT_PARENT

    TRUE_KW      desplazar e ir al estado 46
    FALSE_KW     desplazar e ir al estado 47
    OP_INC       desplazar e ir al estado 9
    OP_DEC       desplazar e ir al estado 10
    OP_SUB       desplazar e ir al estado 48
    OP_NOT       desplazar e ir al estado 49
    LEFT_PARENT  desplazar e ir al estado 50
    D_COLON      desplazar e ir al estado 11
    CHAR         desplazar e ir al estado 52
    STRING       desplazar e ir al estado 53
    NUM          desplazar e ir al estado 54
    NUM_DEC      desplazar e ir al estado 55
    IDENTIFIER   desplazar e ir al estado 12

    value_data   ir al estado 57
    var_value    ir al estado 58
    exp_op       ir al estado 77
    inc_dec      ir al estado 60
    ops_inc_dec  ir al estado 23
    func_call    ir al estado 61


Estado 51

  121 func_call: IDENTIFIER LEFT_PARENT RIGHT_PARENT •

    $default  reduce usando la regla 121 (func_call)


Estado 52

   83 value_data: CHAR •

    $default  reduce usando la regla 83 (value_data)


Estado 53

   88 value_data: STRING •

    $default  reduce usando la regla 88 (value_data)


Estado 54

   84 value_data: NUM •

    $default  reduce usando la regla 84 (value_data)


Estado 55

   85 value_data: NUM_DEC •

    $default  reduce usando la regla 85 (value_data)


Estado 56

   90 var_value: IDENTIFIER •
  121 func_call: IDENTIFIER • LEFT_PARENT RIGHT_PARENT
  122          | IDENTIFIER • LEFT_PARENT func_args RIGHT_PARENT
  126 func_arg: IDENTIFIER • COLON exp_op

    LEFT_PARENT  desplazar e ir al estado 28
    COLON        desplazar e ir al estado 78

    $default  reduce usando la regla 90 (var_value)


Estado 57

  114 exp_op: value_data •

    $default  reduce usando la regla 114 (exp_op)


Estado 58

   89 value_data: var_value •
  107 exp_op: var_value • OP_ASSIGN exp_op
  108       | var_value • OP_ADD_ASSIGN exp_op
  109       | var_value • OP_SUB_ASSIGN exp_op
  110       | var_value • OP_MUL_ASSIGN exp_op
  111       | var_value • OP_DIV_ASSIGN exp_op
  112       | var_value • OP_MOD_ASSIGN exp_op
  117 inc_dec: var_value • ops_inc_dec

    OP_INC         desplazar e ir al estado 9
    OP_DEC         desplazar e ir al estado 10
    OP_ASSIGN      desplazar e ir al estado 79
    OP_ADD_ASSIGN  desplazar e ir al estado 80
    OP_SUB_ASSIGN  desplazar e ir al estado 81
    OP_MUL_ASSIGN  desplazar e ir al estado 82
    OP_DIV_ASSIGN  desplazar e ir al estado 83
    OP_MOD_ASSIGN  desplazar e ir al estado 84

    $default  reduce usando la regla 89 (value_data)

    ops_inc_dec  ir al estado 40


Estado 59

   92 exp_op: exp_op • OP_ADD exp_op
   93       | exp_op • OP_SUB exp_op
   94       | exp_op • OP_MUL exp_op
   95       | exp_op • OP_DIV exp_op
   96       | exp_op • OP_MOD exp_op
   98       | exp_op • OP_GT exp_op
   99       | exp_op • OP_LT exp_op
  100       | exp_op • OP_GTE exp_op
  101       | exp_op • OP_LTE exp_op
  102       | exp_op • OP_EQ exp_op
  103       | exp_op • OP_NEQ exp_op
  104       | exp_op • OP_AND exp_op
  105       | exp_op • OP_OR exp_op
  127 func_arg: exp_op •

    OP_ADD  desplazar e ir al estado 85
    OP_SUB  desplazar e ir al estado 86
    OP_MUL  desplazar e ir al estado 87
    OP_DIV  desplazar e ir al estado 88
    OP_MOD  desplazar e ir al estado 89
    OP_AND  desplazar e ir al estado 90
    OP_OR   desplazar e ir al estado 91
    OP_EQ   desplazar e ir al estado 92
    OP_NEQ  desplazar e ir al estado 93
    OP_GT   desplazar e ir al estado 94
    OP_LT   desplazar e ir al estado 95
    OP_GTE  desplazar e ir al estado 96
    OP_LTE  desplazar e ir al estado 97

    $default  reduce usando la regla 127 (func_arg)


Estado 60

  116 exp_op: inc_dec •

    $default  reduce usando la regla 116 (exp_op)


Estado 61

  115 exp_op: func_call •

    $default  reduce usando la regla 115 (exp_op)


Estado 62

  122 func_call: IDENTIFIER LEFT_PARENT func_args • RIGHT_PARENT

    RIGHT_PARENT  desplazar e ir al estado 98


Estado 63

  123 func_args: func_arg •
  124          | func_arg • COMMA func_args
  125          | func_arg • COMMA EOL func_args

    COMMA  desplazar e ir al estado 99

    $default  reduce usando la regla 123 (func_args)


Estado 64

   12 std_blck_d: LEFT_BRACKET $@1 • block RIGHT_BRACKET

    $default  reduce usando la regla 14 (block)

    block  ir al estado 100


Estado 65

   76 instance: inst_id OP_ASSIGN exp_op •
   92 exp_op: exp_op • OP_ADD exp_op
   93       | exp_op • OP_SUB exp_op
   94       | exp_op • OP_MUL exp_op
   95       | exp_op • OP_DIV exp_op
   96       | exp_op • OP_MOD exp_op
   98       | exp_op • OP_GT exp_op
   99       | exp_op • OP_LT exp_op
  100       | exp_op • OP_GTE exp_op
  101       | exp_op • OP_LTE exp_op
  102       | exp_op • OP_EQ exp_op
  103       | exp_op • OP_NEQ exp_op
  104       | exp_op • OP_AND exp_op
  105       | exp_op • OP_OR exp_op

    OP_ADD  desplazar e ir al estado 85
    OP_SUB  desplazar e ir al estado 86
    OP_MUL  desplazar e ir al estado 87
    OP_DIV  desplazar e ir al estado 88
    OP_MOD  desplazar e ir al estado 89
    OP_AND  desplazar e ir al estado 90
    OP_OR   desplazar e ir al estado 91
    OP_EQ   desplazar e ir al estado 92
    OP_NEQ  desplazar e ir al estado 93
    OP_GT   desplazar e ir al estado 94
    OP_LT   desplazar e ir al estado 95
    OP_GTE  desplazar e ir al estado 96
    OP_LTE  desplazar e ir al estado 97

    $default  reduce usando la regla 76 (instance)


Estado 66

   92 exp_op: exp_op • OP_ADD exp_op
   93       | exp_op • OP_SUB exp_op
   94       | exp_op • OP_MUL exp_op
   95       | exp_op • OP_DIV exp_op
   96       | exp_op • OP_MOD exp_op
   98       | exp_op • OP_GT exp_op
   99       | exp_op • OP_LT exp_op
  100       | exp_op • OP_GTE exp_op
  101       | exp_op • OP_LTE exp_op
  102       | exp_op • OP_EQ exp_op
  103       | exp_op • OP_NEQ exp_op
  104       | exp_op • OP_AND exp_op
  105       | exp_op • OP_OR exp_op
  128 asingn: var_value OP_ASSIGN exp_op •

    OP_ADD  desplazar e ir al estado 85
    OP_SUB  desplazar e ir al estado 86
    OP_MUL  desplazar e ir al estado 87
    OP_DIV  desplazar e ir al estado 88
    OP_MOD  desplazar e ir al estado 89
    OP_AND  desplazar e ir al estado 90
    OP_OR   desplazar e ir al estado 91
    OP_EQ   desplazar e ir al estado 92
    OP_NEQ  desplazar e ir al estado 93
    OP_GT   desplazar e ir al estado 94
    OP_LT   desplazar e ir al estado 95
    OP_GTE  desplazar e ir al estado 96
    OP_LTE  desplazar e ir al estado 97

    $default  reduce usando la regla 128 (asingn)


Estado 67

   92 exp_op: exp_op • OP_ADD exp_op
   93       | exp_op • OP_SUB exp_op
   94       | exp_op • OP_MUL exp_op
   95       | exp_op • OP_DIV exp_op
   96       | exp_op • OP_MOD exp_op
   98       | exp_op • OP_GT exp_op
   99       | exp_op • OP_LT exp_op
  100       | exp_op • OP_GTE exp_op
  101       | exp_op • OP_LTE exp_op
  102       | exp_op • OP_EQ exp_op
  103       | exp_op • OP_NEQ exp_op
  104       | exp_op • OP_AND exp_op
  105       | exp_op • OP_OR exp_op
  129 asingn: var_value OP_ADD_ASSIGN exp_op •

    OP_ADD  desplazar e ir al estado 85
    OP_SUB  desplazar e ir al estado 86
    OP_MUL  desplazar e ir al estado 87
    OP_DIV  desplazar e ir al estado 88
    OP_MOD  desplazar e ir al estado 89
    OP_AND  desplazar e ir al estado 90
    OP_OR   desplazar e ir al estado 91
    OP_EQ   desplazar e ir al estado 92
    OP_NEQ  desplazar e ir al estado 93
    OP_GT   desplazar e ir al estado 94
    OP_LT   desplazar e ir al estado 95
    OP_GTE  desplazar e ir al estado 96
    OP_LTE  desplazar e ir al estado 97

    $default  reduce usando la regla 129 (asingn)


Estado 68

   92 exp_op: exp_op • OP_ADD exp_op
   93       | exp_op • OP_SUB exp_op
   94       | exp_op • OP_MUL exp_op
   95       | exp_op • OP_DIV exp_op
   96       | exp_op • OP_MOD exp_op
   98       | exp_op • OP_GT exp_op
   99       | exp_op • OP_LT exp_op
  100       | exp_op • OP_GTE exp_op
  101       | exp_op • OP_LTE exp_op
  102       | exp_op • OP_EQ exp_op
  103       | exp_op • OP_NEQ exp_op
  104       | exp_op • OP_AND exp_op
  105       | exp_op • OP_OR exp_op
  130 asingn: var_value ops_assign exp_op •

    OP_ADD  desplazar e ir al estado 85
    OP_SUB  desplazar e ir al estado 86
    OP_MUL  desplazar e ir al estado 87
    OP_DIV  desplazar e ir al estado 88
    OP_MOD  desplazar e ir al estado 89
    OP_AND  desplazar e ir al estado 90
    OP_OR   desplazar e ir al estado 91
    OP_EQ   desplazar e ir al estado 92
    OP_NEQ  desplazar e ir al estado 93
    OP_GT   desplazar e ir al estado 94
    OP_LT   desplazar e ir al estado 95
    OP_GTE  desplazar e ir al estado 96
    OP_LTE  desplazar e ir al estado 97

    $default  reduce usando la regla 130 (asingn)


Estado 69

   69 func_params: LEFT_PARENT RIGHT_PARENT •

    $default  reduce usando la regla 69 (func_params)


Estado 70

   73 param: IDENTIFIER • COLON type
   74      | IDENTIFIER • COLON type OP_ASSIGN exp_op

    COLON  desplazar e ir al estado 101


Estado 71

   68 func_params: LEFT_PARENT params_sec • RIGHT_PARENT

    RIGHT_PARENT  desplazar e ir al estado 102


Estado 72

   70 params_sec: param •
   71           | param • COMMA params_sec
   72           | param • COMMA EOL params_sec

    COMMA  desplazar e ir al estado 103

    $default  reduce usando la regla 70 (params_sec)


Estado 73

   66 func_type: COLON • type
   67          | COLON • VOID_KW

    CHAR_KW    desplazar e ir al estado 3
    INT_KW     desplazar e ir al estado 4
    FLOAT_KW   desplazar e ir al estado 5
    BOOL_KW    desplazar e ir al estado 6
    STRING_KW  desplazar e ir al estado 7
    VOID_KW    desplazar e ir al estado 104

    type  ir al estado 105


Estado 74

   13 func_dec: FUNCTION_KW IDENTIFIER func_params func_type •

    $default  reduce usando la regla 13 (func_dec)


Estado 75

   92 exp_op: exp_op • OP_ADD exp_op
   93       | exp_op • OP_SUB exp_op
   94       | exp_op • OP_MUL exp_op
   95       | exp_op • OP_DIV exp_op
   96       | exp_op • OP_MOD exp_op
   97       | OP_SUB exp_op •
   98       | exp_op • OP_GT exp_op
   99       | exp_op • OP_LT exp_op
  100       | exp_op • OP_GTE exp_op
  101       | exp_op • OP_LTE exp_op
  102       | exp_op • OP_EQ exp_op
  103       | exp_op • OP_NEQ exp_op
  104       | exp_op • OP_AND exp_op
  105       | exp_op • OP_OR exp_op

    $default  reduce usando la regla 97 (exp_op)


Estado 76

   92 exp_op: exp_op • OP_ADD exp_op
   93       | exp_op • OP_SUB exp_op
   94       | exp_op • OP_MUL exp_op
   95       | exp_op • OP_DIV exp_op
   96       | exp_op • OP_MOD exp_op
   98       | exp_op • OP_GT exp_op
   99       | exp_op • OP_LT exp_op
  100       | exp_op • OP_GTE exp_op
  101       | exp_op • OP_LTE exp_op
  102       | exp_op • OP_EQ exp_op
  103       | exp_op • OP_NEQ exp_op
  104       | exp_op • OP_AND exp_op
  105       | exp_op • OP_OR exp_op
  106       | OP_NOT exp_op •

    OP_EQ   desplazar e ir al estado 92
    OP_NEQ  desplazar e ir al estado 93
    OP_GT   desplazar e ir al estado 94
    OP_LT   desplazar e ir al estado 95
    OP_GTE  desplazar e ir al estado 96
    OP_LTE  desplazar e ir al estado 97

    $default  reduce usando la regla 106 (exp_op)


Estado 77

   92 exp_op: exp_op • OP_ADD exp_op
   93       | exp_op • OP_SUB exp_op
   94       | exp_op • OP_MUL exp_op
   95       | exp_op • OP_DIV exp_op
   96       | exp_op • OP_MOD exp_op
   98       | exp_op • OP_GT exp_op
   99       | exp_op • OP_LT exp_op
  100       | exp_op • OP_GTE exp_op
  101       | exp_op • OP_LTE exp_op
  102       | exp_op • OP_EQ exp_op
  103       | exp_op • OP_NEQ exp_op
  104       | exp_op • OP_AND exp_op
  105       | exp_op • OP_OR exp_op
  113       | LEFT_PARENT exp_op • RIGHT_PARENT

    OP_ADD        desplazar e ir al estado 85
    OP_SUB        desplazar e ir al estado 86
    OP_MUL        desplazar e ir al estado 87
    OP_DIV        desplazar e ir al estado 88
    OP_MOD        desplazar e ir al estado 89
    OP_AND        desplazar e ir al estado 90
    OP_OR         desplazar e ir al estado 91
    OP_EQ         desplazar e ir al estado 92
    OP_NEQ        desplazar e ir al estado 93
    OP_GT         desplazar e ir al estado 94
    OP_LT         desplazar e ir al estado 95
    OP_GTE        desplazar e ir al estado 96
    OP_LTE        desplazar e ir al estado 97
    RIGHT_PARENT  desplazar e ir al estado 106


Estado 78

  126 func_arg: IDENTIFIER COLON • exp_op

    TRUE_KW      desplazar e ir al estado 46
    FALSE_KW     desplazar e ir al estado 47
    OP_INC       desplazar e ir al estado 9
    OP_DEC       desplazar e ir al estado 10
    OP_SUB       desplazar e ir al estado 48
    OP_NOT       desplazar e ir al estado 49
    LEFT_PARENT  desplazar e ir al estado 50
    D_COLON      desplazar e ir al estado 11
    CHAR         desplazar e ir al estado 52
    STRING       desplazar e ir al estado 53
    NUM          desplazar e ir al estado 54
    NUM_DEC      desplazar e ir al estado 55
    IDENTIFIER   desplazar e ir al estado 12

    value_data   ir al estado 57
    var_value    ir al estado 58
    exp_op       ir al estado 107
    inc_dec      ir al estado 60
    ops_inc_dec  ir al estado 23
    func_call    ir al estado 61


Estado 79

  107 exp_op: var_value OP_ASSIGN • exp_op

    TRUE_KW      desplazar e ir al estado 46
    FALSE_KW     desplazar e ir al estado 47
    OP_INC       desplazar e ir al estado 9
    OP_DEC       desplazar e ir al estado 10
    OP_SUB       desplazar e ir al estado 48
    OP_NOT       desplazar e ir al estado 49
    LEFT_PARENT  desplazar e ir al estado 50
    D_COLON      desplazar e ir al estado 11
    CHAR         desplazar e ir al estado 52
    STRING       desplazar e ir al estado 53
    NUM          desplazar e ir al estado 54
    NUM_DEC      desplazar e ir al estado 55
    IDENTIFIER   desplazar e ir al estado 12

    value_data   ir al estado 57
    var_value    ir al estado 58
    exp_op       ir al estado 108
    inc_dec      ir al estado 60
    ops_inc_dec  ir al estado 23
    func_call    ir al estado 61


Estado 80

  108 exp_op: var_value OP_ADD_ASSIGN • exp_op

    TRUE_KW      desplazar e ir al estado 46
    FALSE_KW     desplazar e ir al estado 47
    OP_INC       desplazar e ir al estado 9
    OP_DEC       desplazar e ir al estado 10
    OP_SUB       desplazar e ir al estado 48
    OP_NOT       desplazar e ir al estado 49
    LEFT_PARENT  desplazar e ir al estado 50
    D_COLON      desplazar e ir al estado 11
    CHAR         desplazar e ir al estado 52
    STRING       desplazar e ir al estado 53
    NUM          desplazar e ir al estado 54
    NUM_DEC      desplazar e ir al estado 55
    IDENTIFIER   desplazar e ir al estado 12

    value_data   ir al estado 57
    var_value    ir al estado 58
    exp_op       ir al estado 109
    inc_dec      ir al estado 60
    ops_inc_dec  ir al estado 23
    func_call    ir al estado 61


Estado 81

  109 exp_op: var_value OP_SUB_ASSIGN • exp_op

    TRUE_KW      desplazar e ir al estado 46
    FALSE_KW     desplazar e ir al estado 47
    OP_INC       desplazar e ir al estado 9
    OP_DEC       desplazar e ir al estado 10
    OP_SUB       desplazar e ir al estado 48
    OP_NOT       desplazar e ir al estado 49
    LEFT_PARENT  desplazar e ir al estado 50
    D_COLON      desplazar e ir al estado 11
    CHAR         desplazar e ir al estado 52
    STRING       desplazar e ir al estado 53
    NUM          desplazar e ir al estado 54
    NUM_DEC      desplazar e ir al estado 55
    IDENTIFIER   desplazar e ir al estado 12

    value_data   ir al estado 57
    var_value    ir al estado 58
    exp_op       ir al estado 110
    inc_dec      ir al estado 60
    ops_inc_dec  ir al estado 23
    func_call    ir al estado 61


Estado 82

  110 exp_op: var_value OP_MUL_ASSIGN • exp_op

    TRUE_KW      desplazar e ir al estado 46
    FALSE_KW     desplazar e ir al estado 47
    OP_INC       desplazar e ir al estado 9
    OP_DEC       desplazar e ir al estado 10
    OP_SUB       desplazar e ir al estado 48
    OP_NOT       desplazar e ir al estado 49
    LEFT_PARENT  desplazar e ir al estado 50
    D_COLON      desplazar e ir al estado 11
    CHAR         desplazar e ir al estado 52
    STRING       desplazar e ir al estado 53
    NUM          desplazar e ir al estado 54
    NUM_DEC      desplazar e ir al estado 55
    IDENTIFIER   desplazar e ir al estado 12

    value_data   ir al estado 57
    var_value    ir al estado 58
    exp_op       ir al estado 111
    inc_dec      ir al estado 60
    ops_inc_dec  ir al estado 23
    func_call    ir al estado 61


Estado 83

  111 exp_op: var_value OP_DIV_ASSIGN • exp_op

    TRUE_KW      desplazar e ir al estado 46
    FALSE_KW     desplazar e ir al estado 47
    OP_INC       desplazar e ir al estado 9
    OP_DEC       desplazar e ir al estado 10
    OP_SUB       desplazar e ir al estado 48
    OP_NOT       desplazar e ir al estado 49
    LEFT_PARENT  desplazar e ir al estado 50
    D_COLON      desplazar e ir al estado 11
    CHAR         desplazar e ir al estado 52
    STRING       desplazar e ir al estado 53
    NUM          desplazar e ir al estado 54
    NUM_DEC      desplazar e ir al estado 55
    IDENTIFIER   desplazar e ir al estado 12

    value_data   ir al estado 57
    var_value    ir al estado 58
    exp_op       ir al estado 112
    inc_dec      ir al estado 60
    ops_inc_dec  ir al estado 23
    func_call    ir al estado 61


Estado 84

  112 exp_op: var_value OP_MOD_ASSIGN • exp_op

    TRUE_KW      desplazar e ir al estado 46
    FALSE_KW     desplazar e ir al estado 47
    OP_INC       desplazar e ir al estado 9
    OP_DEC       desplazar e ir al estado 10
    OP_SUB       desplazar e ir al estado 48
    OP_NOT       desplazar e ir al estado 49
    LEFT_PARENT  desplazar e ir al estado 50
    D_COLON      desplazar e ir al estado 11
    CHAR         desplazar e ir al estado 52
    STRING       desplazar e ir al estado 53
    NUM          desplazar e ir al estado 54
    NUM_DEC      desplazar e ir al estado 55
    IDENTIFIER   desplazar e ir al estado 12

    value_data   ir al estado 57
    var_value    ir al estado 58
    exp_op       ir al estado 113
    inc_dec      ir al estado 60
    ops_inc_dec  ir al estado 23
    func_call    ir al estado 61


Estado 85

   92 exp_op: exp_op OP_ADD • exp_op

    TRUE_KW      desplazar e ir al estado 46
    FALSE_KW     desplazar e ir al estado 47
    OP_INC       desplazar e ir al estado 9
    OP_DEC       desplazar e ir al estado 10
    OP_SUB       desplazar e ir al estado 48
    OP_NOT       desplazar e ir al estado 49
    LEFT_PARENT  desplazar e ir al estado 50
    D_COLON      desplazar e ir al estado 11
    CHAR         desplazar e ir al estado 52
    STRING       desplazar e ir al estado 53
    NUM          desplazar e ir al estado 54
    NUM_DEC      desplazar e ir al estado 55
    IDENTIFIER   desplazar e ir al estado 12

    value_data   ir al estado 57
    var_value    ir al estado 58
    exp_op       ir al estado 114
    inc_dec      ir al estado 60
    ops_inc_dec  ir al estado 23
    func_call    ir al estado 61


Estado 86

   93 exp_op: exp_op OP_SUB • exp_op

    TRUE_KW      desplazar e ir al estado 46
    FALSE_KW     desplazar e ir al estado 47
    OP_INC       desplazar e ir al estado 9
    OP_DEC       desplazar e ir al estado 10
    OP_SUB       desplazar e ir al estado 48
    OP_NOT       desplazar e ir al estado 49
    LEFT_PARENT  desplazar e ir al estado 50
    D_COLON      desplazar e ir al estado 11
    CHAR         desplazar e ir al estado 52
    STRING       desplazar e ir al estado 53
    NUM          desplazar e ir al estado 54
    NUM_DEC      desplazar e ir al estado 55
    IDENTIFIER   desplazar e ir al estado 12

    value_data   ir al estado 57
    var_value    ir al estado 58
    exp_op       ir al estado 115
    inc_dec      ir al estado 60
    ops_inc_dec  ir al estado 23
    func_call    ir al estado 61


Estado 87

   94 exp_op: exp_op OP_MUL • exp_op

    TRUE_KW      desplazar e ir al estado 46
    FALSE_KW     desplazar e ir al estado 47
    OP_INC       desplazar e ir al estado 9
    OP_DEC       desplazar e ir al estado 10
    OP_SUB       desplazar e ir al estado 48
    OP_NOT       desplazar e ir al estado 49
    LEFT_PARENT  desplazar e ir al estado 50
    D_COLON      desplazar e ir al estado 11
    CHAR         desplazar e ir al estado 52
    STRING       desplazar e ir al estado 53
    NUM          desplazar e ir al estado 54
    NUM_DEC      desplazar e ir al estado 55
    IDENTIFIER   desplazar e ir al estado 12

    value_data   ir al estado 57
    var_value    ir al estado 58
    exp_op       ir al estado 116
    inc_dec      ir al estado 60
    ops_inc_dec  ir al estado 23
    func_call    ir al estado 61


Estado 88

   95 exp_op: exp_op OP_DIV • exp_op

    TRUE_KW      desplazar e ir al estado 46
    FALSE_KW     desplazar e ir al estado 47
    OP_INC       desplazar e ir al estado 9
    OP_DEC       desplazar e ir al estado 10
    OP_SUB       desplazar e ir al estado 48
    OP_NOT       desplazar e ir al estado 49
    LEFT_PARENT  desplazar e ir al estado 50
    D_COLON      desplazar e ir al estado 11
    CHAR         desplazar e ir al estado 52
    STRING       desplazar e ir al estado 53
    NUM          desplazar e ir al estado 54
    NUM_DEC      desplazar e ir al estado 55
    IDENTIFIER   desplazar e ir al estado 12

    value_data   ir al estado 57
    var_value    ir al estado 58
    exp_op       ir al estado 117
    inc_dec      ir al estado 60
    ops_inc_dec  ir al estado 23
    func_call    ir al estado 61


Estado 89

   96 exp_op: exp_op OP_MOD • exp_op

    TRUE_KW      desplazar e ir al estado 46
    FALSE_KW     desplazar e ir al estado 47
    OP_INC       desplazar e ir al estado 9
    OP_DEC       desplazar e ir al estado 10
    OP_SUB       desplazar e ir al estado 48
    OP_NOT       desplazar e ir al estado 49
    LEFT_PARENT  desplazar e ir al estado 50
    D_COLON      desplazar e ir al estado 11
    CHAR         desplazar e ir al estado 52
    STRING       desplazar e ir al estado 53
    NUM          desplazar e ir al estado 54
    NUM_DEC      desplazar e ir al estado 55
    IDENTIFIER   desplazar e ir al estado 12

    value_data   ir al estado 57
    var_value    ir al estado 58
    exp_op       ir al estado 118
    inc_dec      ir al estado 60
    ops_inc_dec  ir al estado 23
    func_call    ir al estado 61


Estado 90

  104 exp_op: exp_op OP_AND • exp_op

    TRUE_KW      desplazar e ir al estado 46
    FALSE_KW     desplazar e ir al estado 47
    OP_INC       desplazar e ir al estado 9
    OP_DEC       desplazar e ir al estado 10
    OP_SUB       desplazar e ir al estado 48
    OP_NOT       desplazar e ir al estado 49
    LEFT_PARENT  desplazar e ir al estado 50
    D_COLON      desplazar e ir al estado 11
    CHAR         desplazar e ir al estado 52
    STRING       desplazar e ir al estado 53
    NUM          desplazar e ir al estado 54
    NUM_DEC      desplazar e ir al estado 55
    IDENTIFIER   desplazar e ir al estado 12

    value_data   ir al estado 57
    var_value    ir al estado 58
    exp_op       ir al estado 119
    inc_dec      ir al estado 60
    ops_inc_dec  ir al estado 23
    func_call    ir al estado 61


Estado 91

  105 exp_op: exp_op OP_OR • exp_op

    TRUE_KW      desplazar e ir al estado 46
    FALSE_KW     desplazar e ir al estado 47
    OP_INC       desplazar e ir al estado 9
    OP_DEC       desplazar e ir al estado 10
    OP_SUB       desplazar e ir al estado 48
    OP_NOT       desplazar e ir al estado 49
    LEFT_PARENT  desplazar e ir al estado 50
    D_COLON      desplazar e ir al estado 11
    CHAR         desplazar e ir al estado 52
    STRING       desplazar e ir al estado 53
    NUM          desplazar e ir al estado 54
    NUM_DEC      desplazar e ir al estado 55
    IDENTIFIER   desplazar e ir al estado 12

    value_data   ir al estado 57
    var_value    ir al estado 58
    exp_op       ir al estado 120
    inc_dec      ir al estado 60
    ops_inc_dec  ir al estado 23
    func_call    ir al estado 61


Estado 92

  102 exp_op: exp_op OP_EQ • exp_op

    TRUE_KW      desplazar e ir al estado 46
    FALSE_KW     desplazar e ir al estado 47
    OP_INC       desplazar e ir al estado 9
    OP_DEC       desplazar e ir al estado 10
    OP_SUB       desplazar e ir al estado 48
    OP_NOT       desplazar e ir al estado 49
    LEFT_PARENT  desplazar e ir al estado 50
    D_COLON      desplazar e ir al estado 11
    CHAR         desplazar e ir al estado 52
    STRING       desplazar e ir al estado 53
    NUM          desplazar e ir al estado 54
    NUM_DEC      desplazar e ir al estado 55
    IDENTIFIER   desplazar e ir al estado 12

    value_data   ir al estado 57
    var_value    ir al estado 58
    exp_op       ir al estado 121
    inc_dec      ir al estado 60
    ops_inc_dec  ir al estado 23
    func_call    ir al estado 61


Estado 93

  103 exp_op: exp_op OP_NEQ • exp_op

    TRUE_KW      desplazar e ir al estado 46
    FALSE_KW     desplazar e ir al estado 47
    OP_INC       desplazar e ir al estado 9
    OP_DEC       desplazar e ir al estado 10
    OP_SUB       desplazar e ir al estado 48
    OP_NOT       desplazar e ir al estado 49
    LEFT_PARENT  desplazar e ir al estado 50
    D_COLON      desplazar e ir al estado 11
    CHAR         desplazar e ir al estado 52
    STRING       desplazar e ir al estado 53
    NUM          desplazar e ir al estado 54
    NUM_DEC      desplazar e ir al estado 55
    IDENTIFIER   desplazar e ir al estado 12

    value_data   ir al estado 57
    var_value    ir al estado 58
    exp_op       ir al estado 122
    inc_dec      ir al estado 60
    ops_inc_dec  ir al estado 23
    func_call    ir al estado 61


Estado 94

   98 exp_op: exp_op OP_GT • exp_op

    TRUE_KW      desplazar e ir al estado 46
    FALSE_KW     desplazar e ir al estado 47
    OP_INC       desplazar e ir al estado 9
    OP_DEC       desplazar e ir al estado 10
    OP_SUB       desplazar e ir al estado 48
    OP_NOT       desplazar e ir al estado 49
    LEFT_PARENT  desplazar e ir al estado 50
    D_COLON      desplazar e ir al estado 11
    CHAR         desplazar e ir al estado 52
    STRING       desplazar e ir al estado 53
    NUM          desplazar e ir al estado 54
    NUM_DEC      desplazar e ir al estado 55
    IDENTIFIER   desplazar e ir al estado 12

    value_data   ir al estado 57
    var_value    ir al estado 58
    exp_op       ir al estado 123
    inc_dec      ir al estado 60
    ops_inc_dec  ir al estado 23
    func_call    ir al estado 61


Estado 95

   99 exp_op: exp_op OP_LT • exp_op

    TRUE_KW      desplazar e ir al estado 46
    FALSE_KW     desplazar e ir al estado 47
    OP_INC       desplazar e ir al estado 9
    OP_DEC       desplazar e ir al estado 10
    OP_SUB       desplazar e ir al estado 48
    OP_NOT       desplazar e ir al estado 49
    LEFT_PARENT  desplazar e ir al estado 50
    D_COLON      desplazar e ir al estado 11
    CHAR         desplazar e ir al estado 52
    STRING       desplazar e ir al estado 53
    NUM          desplazar e ir al estado 54
    NUM_DEC      desplazar e ir al estado 55
    IDENTIFIER   desplazar e ir al estado 12

    value_data   ir al estado 57
    var_value    ir al estado 58
    exp_op       ir al estado 124
    inc_dec      ir al estado 60
    ops_inc_dec  ir al estado 23
    func_call    ir al estado 61


Estado 96

  100 exp_op: exp_op OP_GTE • exp_op

    TRUE_KW      desplazar e ir al estado 46
    FALSE_KW     desplazar e ir al estado 47
    OP_INC       desplazar e ir al estado 9
    OP_DEC       desplazar e ir al estado 10
    OP_SUB       desplazar e ir al estado 48
    OP_NOT       desplazar e ir al estado 49
    LEFT_PARENT  desplazar e ir al estado 50
    D_COLON      desplazar e ir al estado 11
    CHAR         desplazar e ir al estado 52
    STRING       desplazar e ir al estado 53
    NUM          desplazar e ir al estado 54
    NUM_DEC      desplazar e ir al estado 55
    IDENTIFIER   desplazar e ir al estado 12

    value_data   ir al estado 57
    var_value    ir al estado 58
    exp_op       ir al estado 125
    inc_dec      ir al estado 60
    ops_inc_dec  ir al estado 23
    func_call    ir al estado 61


Estado 97

  101 exp_op: exp_op OP_LTE • exp_op

    TRUE_KW      desplazar e ir al estado 46
    FALSE_KW     desplazar e ir al estado 47
    OP_INC       desplazar e ir al estado 9
    OP_DEC       desplazar e ir al estado 10
    OP_SUB       desplazar e ir al estado 48
    OP_NOT       desplazar e ir al estado 49
    LEFT_PARENT  desplazar e ir al estado 50
    D_COLON      desplazar e ir al estado 11
    CHAR         desplazar e ir al estado 52
    STRING       desplazar e ir al estado 53
    NUM          desplazar e ir al estado 54
    NUM_DEC      desplazar e ir al estado 55
    IDENTIFIER   desplazar e ir al estado 12

    value_data   ir al estado 57
    var_value    ir al estado 58
    exp_op       ir al estado 126
    inc_dec      ir al estado 60
    ops_inc_dec  ir al estado 23
    func_call    ir al estado 61


Estado 98

  122 func_call: IDENTIFIER LEFT_PARENT func_args RIGHT_PARENT •

    $default  reduce usando la regla 122 (func_call)


Estado 99

  124 func_args: func_arg COMMA • func_args
  125          | func_arg COMMA • EOL func_args

    TRUE_KW      desplazar e ir al estado 46
    FALSE_KW     desplazar e ir al estado 47
    OP_INC       desplazar e ir al estado 9
    OP_DEC       desplazar e ir al estado 10
    OP_SUB       desplazar e ir al estado 48
    OP_NOT       desplazar e ir al estado 49
    LEFT_PARENT  desplazar e ir al estado 50
    D_COLON      desplazar e ir al estado 11
    CHAR         desplazar e ir al estado 52
    STRING       desplazar e ir al estado 53
    NUM          desplazar e ir al estado 54
    NUM_DEC      desplazar e ir al estado 55
    IDENTIFIER   desplazar e ir al estado 56
    EOL          desplazar e ir al estado 127

    value_data   ir al estado 57
    var_value    ir al estado 58
    exp_op       ir al estado 59
    inc_dec      ir al estado 60
    ops_inc_dec  ir al estado 23
    func_call    ir al estado 61
    func_args    ir al estado 128
    func_arg     ir al estado 63


Estado 100

   12 std_blck_d: LEFT_BRACKET $@1 block • RIGHT_BRACKET
   15 block: block • block_line

    CHAR_KW        desplazar e ir al estado 3
    INT_KW         desplazar e ir al estado 4
    FLOAT_KW       desplazar e ir al estado 5
    BOOL_KW        desplazar e ir al estado 6
    STRING_KW      desplazar e ir al estado 7
    IF_KW          desplazar e ir al estado 129
    SWITCH_KW      desplazar e ir al estado 130
    FOR_KW         desplazar e ir al estado 131
    WHILE_KW       desplazar e ir al estado 132
    DO_KW          desplazar e ir al estado 133
    BREAK_KW       desplazar e ir al estado 134
    RETURN_KW      desplazar e ir al estado 135
    TRY_KW         desplazar e ir al estado 136
    THROW_KW       desplazar e ir al estado 137
    OP_INC         desplazar e ir al estado 9
    OP_DEC         desplazar e ir al estado 10
    RIGHT_BRACKET  desplazar e ir al estado 138
    D_COLON        desplazar e ir al estado 11
    IDENTIFIER     desplazar e ir al estado 12
    EOL            desplazar e ir al estado 139

    block_line   ir al estado 140
    block_exp    ir al estado 141
    rtrn         ir al estado 142
    throw        ir al estado 143
    loop         ir al estado 144
    while_exp    ir al estado 145
    conditional  ir al estado 146
    if_els_stmt  ir al estado 147
    if_stmt      ir al estado 148
    switch_stmt  ir al estado 149
    exception    ir al estado 150
    try_catch    ir al estado 151
    instance     ir al estado 152
    inst_id      ir al estado 19
    type         ir al estado 20
    var_value    ir al estado 21
    inc_dec      ir al estado 153
    ops_inc_dec  ir al estado 23
    func_call    ir al estado 154
    asingn       ir al estado 155


Estado 101

   73 param: IDENTIFIER COLON • type
   74      | IDENTIFIER COLON • type OP_ASSIGN exp_op

    CHAR_KW    desplazar e ir al estado 3
    INT_KW     desplazar e ir al estado 4
    FLOAT_KW   desplazar e ir al estado 5
    BOOL_KW    desplazar e ir al estado 6
    STRING_KW  desplazar e ir al estado 7

    type  ir al estado 156


Estado 102

   68 func_params: LEFT_PARENT params_sec RIGHT_PARENT •

    $default  reduce usando la regla 68 (func_params)


Estado 103

   71 params_sec: param COMMA • params_sec
   72           | param COMMA • EOL params_sec

    IDENTIFIER  desplazar e ir al estado 70
    EOL         desplazar e ir al estado 157

    params_sec  ir al estado 158
    param       ir al estado 72


Estado 104

   67 func_type: COLON VOID_KW •

    $default  reduce usando la regla 67 (func_type)


Estado 105

   66 func_type: COLON type •

    $default  reduce usando la regla 66 (func_type)


Estado 106

  113 exp_op: LEFT_PARENT exp_op RIGHT_PARENT •

    $default  reduce usando la regla 113 (exp_op)


Estado 107

   92 exp_op: exp_op • OP_ADD exp_op
   93       | exp_op • OP_SUB exp_op
   94       | exp_op • OP_MUL exp_op
   95       | exp_op • OP_DIV exp_op
   96       | exp_op • OP_MOD exp_op
   98       | exp_op • OP_GT exp_op
   99       | exp_op • OP_LT exp_op
  100       | exp_op • OP_GTE exp_op
  101       | exp_op • OP_LTE exp_op
  102       | exp_op • OP_EQ exp_op
  103       | exp_op • OP_NEQ exp_op
  104       | exp_op • OP_AND exp_op
  105       | exp_op • OP_OR exp_op
  126 func_arg: IDENTIFIER COLON exp_op •

    OP_ADD  desplazar e ir al estado 85
    OP_SUB  desplazar e ir al estado 86
    OP_MUL  desplazar e ir al estado 87
    OP_DIV  desplazar e ir al estado 88
    OP_MOD  desplazar e ir al estado 89
    OP_AND  desplazar e ir al estado 90
    OP_OR   desplazar e ir al estado 91
    OP_EQ   desplazar e ir al estado 92
    OP_NEQ  desplazar e ir al estado 93
    OP_GT   desplazar e ir al estado 94
    OP_LT   desplazar e ir al estado 95
    OP_GTE  desplazar e ir al estado 96
    OP_LTE  desplazar e ir al estado 97

    $default  reduce usando la regla 126 (func_arg)


Estado 108

   92 exp_op: exp_op • OP_ADD exp_op
   93       | exp_op • OP_SUB exp_op
   94       | exp_op • OP_MUL exp_op
   95       | exp_op • OP_DIV exp_op
   96       | exp_op • OP_MOD exp_op
   98       | exp_op • OP_GT exp_op
   99       | exp_op • OP_LT exp_op
  100       | exp_op • OP_GTE exp_op
  101       | exp_op • OP_LTE exp_op
  102       | exp_op • OP_EQ exp_op
  103       | exp_op • OP_NEQ exp_op
  104       | exp_op • OP_AND exp_op
  105       | exp_op • OP_OR exp_op
  107       | var_value OP_ASSIGN exp_op •

    $default  reduce usando la regla 107 (exp_op)


Estado 109

   92 exp_op: exp_op • OP_ADD exp_op
   93       | exp_op • OP_SUB exp_op
   94       | exp_op • OP_MUL exp_op
   95       | exp_op • OP_DIV exp_op
   96       | exp_op • OP_MOD exp_op
   98       | exp_op • OP_GT exp_op
   99       | exp_op • OP_LT exp_op
  100       | exp_op • OP_GTE exp_op
  101       | exp_op • OP_LTE exp_op
  102       | exp_op • OP_EQ exp_op
  103       | exp_op • OP_NEQ exp_op
  104       | exp_op • OP_AND exp_op
  105       | exp_op • OP_OR exp_op
  108       | var_value OP_ADD_ASSIGN exp_op •

    $default  reduce usando la regla 108 (exp_op)


Estado 110

   92 exp_op: exp_op • OP_ADD exp_op
   93       | exp_op • OP_SUB exp_op
   94       | exp_op • OP_MUL exp_op
   95       | exp_op • OP_DIV exp_op
   96       | exp_op • OP_MOD exp_op
   98       | exp_op • OP_GT exp_op
   99       | exp_op • OP_LT exp_op
  100       | exp_op • OP_GTE exp_op
  101       | exp_op • OP_LTE exp_op
  102       | exp_op • OP_EQ exp_op
  103       | exp_op • OP_NEQ exp_op
  104       | exp_op • OP_AND exp_op
  105       | exp_op • OP_OR exp_op
  109       | var_value OP_SUB_ASSIGN exp_op •

    $default  reduce usando la regla 109 (exp_op)


Estado 111

   92 exp_op: exp_op • OP_ADD exp_op
   93       | exp_op • OP_SUB exp_op
   94       | exp_op • OP_MUL exp_op
   95       | exp_op • OP_DIV exp_op
   96       | exp_op • OP_MOD exp_op
   98       | exp_op • OP_GT exp_op
   99       | exp_op • OP_LT exp_op
  100       | exp_op • OP_GTE exp_op
  101       | exp_op • OP_LTE exp_op
  102       | exp_op • OP_EQ exp_op
  103       | exp_op • OP_NEQ exp_op
  104       | exp_op • OP_AND exp_op
  105       | exp_op • OP_OR exp_op
  110       | var_value OP_MUL_ASSIGN exp_op •

    $default  reduce usando la regla 110 (exp_op)


Estado 112

   92 exp_op: exp_op • OP_ADD exp_op
   93       | exp_op • OP_SUB exp_op
   94       | exp_op • OP_MUL exp_op
   95       | exp_op • OP_DIV exp_op
   96       | exp_op • OP_MOD exp_op
   98       | exp_op • OP_GT exp_op
   99       | exp_op • OP_LT exp_op
  100       | exp_op • OP_GTE exp_op
  101       | exp_op • OP_LTE exp_op
  102       | exp_op • OP_EQ exp_op
  103       | exp_op • OP_NEQ exp_op
  104       | exp_op • OP_AND exp_op
  105       | exp_op • OP_OR exp_op
  111       | var_value OP_DIV_ASSIGN exp_op •

    $default  reduce usando la regla 111 (exp_op)


Estado 113

   92 exp_op: exp_op • OP_ADD exp_op
   93       | exp_op • OP_SUB exp_op
   94       | exp_op • OP_MUL exp_op
   95       | exp_op • OP_DIV exp_op
   96       | exp_op • OP_MOD exp_op
   98       | exp_op • OP_GT exp_op
   99       | exp_op • OP_LT exp_op
  100       | exp_op • OP_GTE exp_op
  101       | exp_op • OP_LTE exp_op
  102       | exp_op • OP_EQ exp_op
  103       | exp_op • OP_NEQ exp_op
  104       | exp_op • OP_AND exp_op
  105       | exp_op • OP_OR exp_op
  112       | var_value OP_MOD_ASSIGN exp_op •

    $default  reduce usando la regla 112 (exp_op)


Estado 114

   92 exp_op: exp_op • OP_ADD exp_op
   92       | exp_op OP_ADD exp_op •
   93       | exp_op • OP_SUB exp_op
   94       | exp_op • OP_MUL exp_op
   95       | exp_op • OP_DIV exp_op
   96       | exp_op • OP_MOD exp_op
   98       | exp_op • OP_GT exp_op
   99       | exp_op • OP_LT exp_op
  100       | exp_op • OP_GTE exp_op
  101       | exp_op • OP_LTE exp_op
  102       | exp_op • OP_EQ exp_op
  103       | exp_op • OP_NEQ exp_op
  104       | exp_op • OP_AND exp_op
  105       | exp_op • OP_OR exp_op

    OP_AND  desplazar e ir al estado 90
    OP_OR   desplazar e ir al estado 91
    OP_EQ   desplazar e ir al estado 92
    OP_NEQ  desplazar e ir al estado 93
    OP_GT   desplazar e ir al estado 94
    OP_LT   desplazar e ir al estado 95
    OP_GTE  desplazar e ir al estado 96
    OP_LTE  desplazar e ir al estado 97

    $default  reduce usando la regla 92 (exp_op)


Estado 115

   92 exp_op: exp_op • OP_ADD exp_op
   93       | exp_op • OP_SUB exp_op
   93       | exp_op OP_SUB exp_op •
   94       | exp_op • OP_MUL exp_op
   95       | exp_op • OP_DIV exp_op
   96       | exp_op • OP_MOD exp_op
   98       | exp_op • OP_GT exp_op
   99       | exp_op • OP_LT exp_op
  100       | exp_op • OP_GTE exp_op
  101       | exp_op • OP_LTE exp_op
  102       | exp_op • OP_EQ exp_op
  103       | exp_op • OP_NEQ exp_op
  104       | exp_op • OP_AND exp_op
  105       | exp_op • OP_OR exp_op

    OP_AND  desplazar e ir al estado 90
    OP_OR   desplazar e ir al estado 91
    OP_EQ   desplazar e ir al estado 92
    OP_NEQ  desplazar e ir al estado 93
    OP_GT   desplazar e ir al estado 94
    OP_LT   desplazar e ir al estado 95
    OP_GTE  desplazar e ir al estado 96
    OP_LTE  desplazar e ir al estado 97

    $default  reduce usando la regla 93 (exp_op)


Estado 116

   92 exp_op: exp_op • OP_ADD exp_op
   93       | exp_op • OP_SUB exp_op
   94       | exp_op • OP_MUL exp_op
   94       | exp_op OP_MUL exp_op •
   95       | exp_op • OP_DIV exp_op
   96       | exp_op • OP_MOD exp_op
   98       | exp_op • OP_GT exp_op
   99       | exp_op • OP_LT exp_op
  100       | exp_op • OP_GTE exp_op
  101       | exp_op • OP_LTE exp_op
  102       | exp_op • OP_EQ exp_op
  103       | exp_op • OP_NEQ exp_op
  104       | exp_op • OP_AND exp_op
  105       | exp_op • OP_OR exp_op

    OP_AND  desplazar e ir al estado 90
    OP_OR   desplazar e ir al estado 91
    OP_EQ   desplazar e ir al estado 92
    OP_NEQ  desplazar e ir al estado 93
    OP_GT   desplazar e ir al estado 94
    OP_LT   desplazar e ir al estado 95
    OP_GTE  desplazar e ir al estado 96
    OP_LTE  desplazar e ir al estado 97

    $default  reduce usando la regla 94 (exp_op)


Estado 117

   92 exp_op: exp_op • OP_ADD exp_op
   93       | exp_op • OP_SUB exp_op
   94       | exp_op • OP_MUL exp_op
   95       | exp_op • OP_DIV exp_op
   95       | exp_op OP_DIV exp_op •
   96       | exp_op • OP_MOD exp_op
   98       | exp_op • OP_GT exp_op
   99       | exp_op • OP_LT exp_op
  100       | exp_op • OP_GTE exp_op
  101       | exp_op • OP_LTE exp_op
  102       | exp_op • OP_EQ exp_op
  103       | exp_op • OP_NEQ exp_op
  104       | exp_op • OP_AND exp_op
  105       | exp_op • OP_OR exp_op

    OP_AND  desplazar e ir al estado 90
    OP_OR   desplazar e ir al estado 91
    OP_EQ   desplazar e ir al estado 92
    OP_NEQ  desplazar e ir al estado 93
    OP_GT   desplazar e ir al estado 94
    OP_LT   desplazar e ir al estado 95
    OP_GTE  desplazar e ir al estado 96
    OP_LTE  desplazar e ir al estado 97

    $default  reduce usando la regla 95 (exp_op)


Estado 118

   92 exp_op: exp_op • OP_ADD exp_op
   93       | exp_op • OP_SUB exp_op
   94       | exp_op • OP_MUL exp_op
   95       | exp_op • OP_DIV exp_op
   96       | exp_op • OP_MOD exp_op
   96       | exp_op OP_MOD exp_op •
   98       | exp_op • OP_GT exp_op
   99       | exp_op • OP_LT exp_op
  100       | exp_op • OP_GTE exp_op
  101       | exp_op • OP_LTE exp_op
  102       | exp_op • OP_EQ exp_op
  103       | exp_op • OP_NEQ exp_op
  104       | exp_op • OP_AND exp_op
  105       | exp_op • OP_OR exp_op

    OP_AND  desplazar e ir al estado 90
    OP_OR   desplazar e ir al estado 91
    OP_EQ   desplazar e ir al estado 92
    OP_NEQ  desplazar e ir al estado 93
    OP_GT   desplazar e ir al estado 94
    OP_LT   desplazar e ir al estado 95
    OP_GTE  desplazar e ir al estado 96
    OP_LTE  desplazar e ir al estado 97

    $default  reduce usando la regla 96 (exp_op)


Estado 119

   92 exp_op: exp_op • OP_ADD exp_op
   93       | exp_op • OP_SUB exp_op
   94       | exp_op • OP_MUL exp_op
   95       | exp_op • OP_DIV exp_op
   96       | exp_op • OP_MOD exp_op
   98       | exp_op • OP_GT exp_op
   99       | exp_op • OP_LT exp_op
  100       | exp_op • OP_GTE exp_op
  101       | exp_op • OP_LTE exp_op
  102       | exp_op • OP_EQ exp_op
  103       | exp_op • OP_NEQ exp_op
  104       | exp_op • OP_AND exp_op
  104       | exp_op OP_AND exp_op •
  105       | exp_op • OP_OR exp_op

    OP_EQ   desplazar e ir al estado 92
    OP_NEQ  desplazar e ir al estado 93
    OP_GT   desplazar e ir al estado 94
    OP_LT   desplazar e ir al estado 95
    OP_GTE  desplazar e ir al estado 96
    OP_LTE  desplazar e ir al estado 97

    $default  reduce usando la regla 104 (exp_op)


Estado 120

   92 exp_op: exp_op • OP_ADD exp_op
   93       | exp_op • OP_SUB exp_op
   94       | exp_op • OP_MUL exp_op
   95       | exp_op • OP_DIV exp_op
   96       | exp_op • OP_MOD exp_op
   98       | exp_op • OP_GT exp_op
   99       | exp_op • OP_LT exp_op
  100       | exp_op • OP_GTE exp_op
  101       | exp_op • OP_LTE exp_op
  102       | exp_op • OP_EQ exp_op
  103       | exp_op • OP_NEQ exp_op
  104       | exp_op • OP_AND exp_op
  105       | exp_op • OP_OR exp_op
  105       | exp_op OP_OR exp_op •

    OP_EQ   desplazar e ir al estado 92
    OP_NEQ  desplazar e ir al estado 93
    OP_GT   desplazar e ir al estado 94
    OP_LT   desplazar e ir al estado 95
    OP_GTE  desplazar e ir al estado 96
    OP_LTE  desplazar e ir al estado 97

    $default  reduce usando la regla 105 (exp_op)


Estado 121

   92 exp_op: exp_op • OP_ADD exp_op
   93       | exp_op • OP_SUB exp_op
   94       | exp_op • OP_MUL exp_op
   95       | exp_op • OP_DIV exp_op
   96       | exp_op • OP_MOD exp_op
   98       | exp_op • OP_GT exp_op
   99       | exp_op • OP_LT exp_op
  100       | exp_op • OP_GTE exp_op
  101       | exp_op • OP_LTE exp_op
  102       | exp_op • OP_EQ exp_op
  102       | exp_op OP_EQ exp_op •
  103       | exp_op • OP_NEQ exp_op
  104       | exp_op • OP_AND exp_op
  105       | exp_op • OP_OR exp_op

    $default  reduce usando la regla 102 (exp_op)


Estado 122

   92 exp_op: exp_op • OP_ADD exp_op
   93       | exp_op • OP_SUB exp_op
   94       | exp_op • OP_MUL exp_op
   95       | exp_op • OP_DIV exp_op
   96       | exp_op • OP_MOD exp_op
   98       | exp_op • OP_GT exp_op
   99       | exp_op • OP_LT exp_op
  100       | exp_op • OP_GTE exp_op
  101       | exp_op • OP_LTE exp_op
  102       | exp_op • OP_EQ exp_op
  103       | exp_op • OP_NEQ exp_op
  103       | exp_op OP_NEQ exp_op •
  104       | exp_op • OP_AND exp_op
  105       | exp_op • OP_OR exp_op

    $default  reduce usando la regla 103 (exp_op)


Estado 123

   92 exp_op: exp_op • OP_ADD exp_op
   93       | exp_op • OP_SUB exp_op
   94       | exp_op • OP_MUL exp_op
   95       | exp_op • OP_DIV exp_op
   96       | exp_op • OP_MOD exp_op
   98       | exp_op • OP_GT exp_op
   98       | exp_op OP_GT exp_op •
   99       | exp_op • OP_LT exp_op
  100       | exp_op • OP_GTE exp_op
  101       | exp_op • OP_LTE exp_op
  102       | exp_op • OP_EQ exp_op
  103       | exp_op • OP_NEQ exp_op
  104       | exp_op • OP_AND exp_op
  105       | exp_op • OP_OR exp_op

    $default  reduce usando la regla 98 (exp_op)


Estado 124

   92 exp_op: exp_op • OP_ADD exp_op
   93       | exp_op • OP_SUB exp_op
   94       | exp_op • OP_MUL exp_op
   95       | exp_op • OP_DIV exp_op
   96       | exp_op • OP_MOD exp_op
   98       | exp_op • OP_GT exp_op
   99       | exp_op • OP_LT exp_op
   99       | exp_op OP_LT exp_op •
  100       | exp_op • OP_GTE exp_op
  101       | exp_op • OP_LTE exp_op
  102       | exp_op • OP_EQ exp_op
  103       | exp_op • OP_NEQ exp_op
  104       | exp_op • OP_AND exp_op
  105       | exp_op • OP_OR exp_op

    $default  reduce usando la regla 99 (exp_op)


Estado 125

   92 exp_op: exp_op • OP_ADD exp_op
   93       | exp_op • OP_SUB exp_op
   94       | exp_op • OP_MUL exp_op
   95       | exp_op • OP_DIV exp_op
   96       | exp_op • OP_MOD exp_op
   98       | exp_op • OP_GT exp_op
   99       | exp_op • OP_LT exp_op
  100       | exp_op • OP_GTE exp_op
  100       | exp_op OP_GTE exp_op •
  101       | exp_op • OP_LTE exp_op
  102       | exp_op • OP_EQ exp_op
  103       | exp_op • OP_NEQ exp_op
  104       | exp_op • OP_AND exp_op
  105       | exp_op • OP_OR exp_op

    $default  reduce usando la regla 100 (exp_op)


Estado 126

   92 exp_op: exp_op • OP_ADD exp_op
   93       | exp_op • OP_SUB exp_op
   94       | exp_op • OP_MUL exp_op
   95       | exp_op • OP_DIV exp_op
   96       | exp_op • OP_MOD exp_op
   98       | exp_op • OP_GT exp_op
   99       | exp_op • OP_LT exp_op
  100       | exp_op • OP_GTE exp_op
  101       | exp_op • OP_LTE exp_op
  101       | exp_op OP_LTE exp_op •
  102       | exp_op • OP_EQ exp_op
  103       | exp_op • OP_NEQ exp_op
  104       | exp_op • OP_AND exp_op
  105       | exp_op • OP_OR exp_op

    $default  reduce usando la regla 101 (exp_op)


Estado 127

  125 func_args: func_arg COMMA EOL • func_args

    TRUE_KW      desplazar e ir al estado 46
    FALSE_KW     desplazar e ir al estado 47
    OP_INC       desplazar e ir al estado 9
    OP_DEC       desplazar e ir al estado 10
    OP_SUB       desplazar e ir al estado 48
    OP_NOT       desplazar e ir al estado 49
    LEFT_PARENT  desplazar e ir al estado 50
    D_COLON      desplazar e ir al estado 11
    CHAR         desplazar e ir al estado 52
    STRING       desplazar e ir al estado 53
    NUM          desplazar e ir al estado 54
    NUM_DEC      desplazar e ir al estado 55
    IDENTIFIER   desplazar e ir al estado 56

    value_data   ir al estado 57
    var_value    ir al estado 58
    exp_op       ir al estado 59
    inc_dec      ir al estado 60
    ops_inc_dec  ir al estado 23
    func_call    ir al estado 61
    func_args    ir al estado 159
    func_arg     ir al estado 63


Estado 128

  124 func_args: func_arg COMMA func_args •

    $default  reduce usando la regla 124 (func_args)


Estado 129

   49 if_stmt: IF_KW • LEFT_PARENT exp_op $@2 RIGHT_PARENT std_blck_d

    LEFT_PARENT  desplazar e ir al estado 160


Estado 130

   55 switch_stmt: SWITCH_KW • LEFT_PARENT exp_op RIGHT_PARENT LEFT_BRACKET EOL switch_block $@3 RIGHT_BRACKET
   56            | SWITCH_KW • LEFT_PARENT exp_op RIGHT_PARENT LEFT_BRACKET EOL RIGHT_BRACKET

    LEFT_PARENT  desplazar e ir al estado 161


Estado 131

   32 loop: FOR_KW • LEFT_PARENT for_decl RIGHT_PARENT std_blck_d

    LEFT_PARENT  desplazar e ir al estado 162


Estado 132

   42 while_exp: WHILE_KW • LEFT_PARENT exp_op RIGHT_PARENT

    LEFT_PARENT  desplazar e ir al estado 163


Estado 133

   34 loop: DO_KW • std_blck_d while_exp

    LEFT_BRACKET  desplazar e ir al estado 30

    std_blck_d  ir al estado 164


Estado 134

   19 block_exp: BREAK_KW •

    $default  reduce usando la regla 19 (block_exp)


Estado 135

   28 rtrn: RETURN_KW • exp_op
   29     | RETURN_KW •

    TRUE_KW      desplazar e ir al estado 46
    FALSE_KW     desplazar e ir al estado 47
    OP_INC       desplazar e ir al estado 9
    OP_DEC       desplazar e ir al estado 10
    OP_SUB       desplazar e ir al estado 48
    OP_NOT       desplazar e ir al estado 49
    LEFT_PARENT  desplazar e ir al estado 50
    D_COLON      desplazar e ir al estado 11
    CHAR         desplazar e ir al estado 52
    STRING       desplazar e ir al estado 53
    NUM          desplazar e ir al estado 54
    NUM_DEC      desplazar e ir al estado 55
    IDENTIFIER   desplazar e ir al estado 12

    $default  reduce usando la regla 29 (rtrn)

    value_data   ir al estado 57
    var_value    ir al estado 58
    exp_op       ir al estado 165
    inc_dec      ir al estado 60
    ops_inc_dec  ir al estado 23
    func_call    ir al estado 61


Estado 136

   65 try_catch: TRY_KW • LEFT_BRACKET block RIGHT_BRACKET CATCH_KW LEFT_PARENT IDENTIFIER RIGHT_PARENT LEFT_BRACKET block RIGHT_BRACKET

    LEFT_BRACKET  desplazar e ir al estado 166


Estado 137

   30 throw: THROW_KW • IDENTIFIER LEFT_PARENT STRING RIGHT_PARENT
   31      | THROW_KW • IDENTIFIER LEFT_PARENT RIGHT_PARENT

    IDENTIFIER  desplazar e ir al estado 167


Estado 138

   12 std_blck_d: LEFT_BRACKET $@1 block RIGHT_BRACKET •

    $default  reduce usando la regla 12 (std_blck_d)


Estado 139

   16 block_line: EOL •

    $default  reduce usando la regla 16 (block_line)


Estado 140

   15 block: block block_line •

    $default  reduce usando la regla 15 (block)


Estado 141

   17 block_line: block_exp • EOL

    EOL  desplazar e ir al estado 168


Estado 142

   26 block_exp: rtrn •

    $default  reduce usando la regla 26 (block_exp)


Estado 143

   27 block_exp: throw •

    $default  reduce usando la regla 27 (block_exp)


Estado 144

   23 block_exp: loop •

    $default  reduce usando la regla 23 (block_exp)


Estado 145

   33 loop: while_exp • std_blck_d

    LEFT_BRACKET  desplazar e ir al estado 30

    std_blck_d  ir al estado 169


Estado 146

   24 block_exp: conditional •

    $default  reduce usando la regla 24 (block_exp)


Estado 147

   43 conditional: if_els_stmt •

    $default  reduce usando la regla 43 (conditional)


Estado 148

   45 if_els_stmt: if_stmt •
   46            | if_stmt • else_stmt
   47            | if_stmt • els_if_stmt

    ELSE_KW  desplazar e ir al estado 170

    $default  reduce usando la regla 45 (if_els_stmt)

    else_stmt    ir al estado 171
    els_if_stmt  ir al estado 172


Estado 149

   44 conditional: switch_stmt •

    $default  reduce usando la regla 44 (conditional)


Estado 150

   25 block_exp: exception •

    $default  reduce usando la regla 25 (block_exp)


Estado 151

   63 exception: try_catch •
   64          | try_catch • FINALLY_KW LEFT_BRACKET block RIGHT_BRACKET

    FINALLY_KW  desplazar e ir al estado 173

    $default  reduce usando la regla 63 (exception)


Estado 152

   18 block_exp: instance •

    $default  reduce usando la regla 18 (block_exp)


Estado 153

   20 block_exp: inc_dec •

    $default  reduce usando la regla 20 (block_exp)


Estado 154

   21 block_exp: func_call •

    $default  reduce usando la regla 21 (block_exp)


Estado 155

   22 block_exp: asingn •

    $default  reduce usando la regla 22 (block_exp)


Estado 156

   73 param: IDENTIFIER COLON type •
   74      | IDENTIFIER COLON type • OP_ASSIGN exp_op

    OP_ASSIGN  desplazar e ir al estado 174

    $default  reduce usando la regla 73 (param)


Estado 157

   72 params_sec: param COMMA EOL • params_sec

    IDENTIFIER  desplazar e ir al estado 70

    params_sec  ir al estado 175
    param       ir al estado 72


Estado 158

   71 params_sec: param COMMA params_sec •

    $default  reduce usando la regla 71 (params_sec)


Estado 159

  125 func_args: func_arg COMMA EOL func_args •

    $default  reduce usando la regla 125 (func_args)


Estado 160

   49 if_stmt: IF_KW LEFT_PARENT • exp_op $@2 RIGHT_PARENT std_blck_d

    TRUE_KW      desplazar e ir al estado 46
    FALSE_KW     desplazar e ir al estado 47
    OP_INC       desplazar e ir al estado 9
    OP_DEC       desplazar e ir al estado 10
    OP_SUB       desplazar e ir al estado 48
    OP_NOT       desplazar e ir al estado 49
    LEFT_PARENT  desplazar e ir al estado 50
    D_COLON      desplazar e ir al estado 11
    CHAR         desplazar e ir al estado 52
    STRING       desplazar e ir al estado 53
    NUM          desplazar e ir al estado 54
    NUM_DEC      desplazar e ir al estado 55
    IDENTIFIER   desplazar e ir al estado 12

    value_data   ir al estado 57
    var_value    ir al estado 58
    exp_op       ir al estado 176
    inc_dec      ir al estado 60
    ops_inc_dec  ir al estado 23
    func_call    ir al estado 61


Estado 161

   55 switch_stmt: SWITCH_KW LEFT_PARENT • exp_op RIGHT_PARENT LEFT_BRACKET EOL switch_block $@3 RIGHT_BRACKET
   56            | SWITCH_KW LEFT_PARENT • exp_op RIGHT_PARENT LEFT_BRACKET EOL RIGHT_BRACKET

    TRUE_KW      desplazar e ir al estado 46
    FALSE_KW     desplazar e ir al estado 47
    OP_INC       desplazar e ir al estado 9
    OP_DEC       desplazar e ir al estado 10
    OP_SUB       desplazar e ir al estado 48
    OP_NOT       desplazar e ir al estado 49
    LEFT_PARENT  desplazar e ir al estado 50
    D_COLON      desplazar e ir al estado 11
    CHAR         desplazar e ir al estado 52
    STRING       desplazar e ir al estado 53
    NUM          desplazar e ir al estado 54
    NUM_DEC      desplazar e ir al estado 55
    IDENTIFIER   desplazar e ir al estado 12

    value_data   ir al estado 57
    var_value    ir al estado 58
    exp_op       ir al estado 177
    inc_dec      ir al estado 60
    ops_inc_dec  ir al estado 23
    func_call    ir al estado 61


Estado 162

   32 loop: FOR_KW LEFT_PARENT • for_decl RIGHT_PARENT std_blck_d

    IDENTIFIER  desplazar e ir al estado 178

    for_decl  ir al estado 179
    for_var   ir al estado 180


Estado 163

   42 while_exp: WHILE_KW LEFT_PARENT • exp_op RIGHT_PARENT

    TRUE_KW      desplazar e ir al estado 46
    FALSE_KW     desplazar e ir al estado 47
    OP_INC       desplazar e ir al estado 9
    OP_DEC       desplazar e ir al estado 10
    OP_SUB       desplazar e ir al estado 48
    OP_NOT       desplazar e ir al estado 49
    LEFT_PARENT  desplazar e ir al estado 50
    D_COLON      desplazar e ir al estado 11
    CHAR         desplazar e ir al estado 52
    STRING       desplazar e ir al estado 53
    NUM          desplazar e ir al estado 54
    NUM_DEC      desplazar e ir al estado 55
    IDENTIFIER   desplazar e ir al estado 12

    value_data   ir al estado 57
    var_value    ir al estado 58
    exp_op       ir al estado 181
    inc_dec      ir al estado 60
    ops_inc_dec  ir al estado 23
    func_call    ir al estado 61


Estado 164

   34 loop: DO_KW std_blck_d • while_exp

    WHILE_KW  desplazar e ir al estado 132

    while_exp  ir al estado 182


Estado 165

   28 rtrn: RETURN_KW exp_op •
   92 exp_op: exp_op • OP_ADD exp_op
   93       | exp_op • OP_SUB exp_op
   94       | exp_op • OP_MUL exp_op
   95       | exp_op • OP_DIV exp_op
   96       | exp_op • OP_MOD exp_op
   98       | exp_op • OP_GT exp_op
   99       | exp_op • OP_LT exp_op
  100       | exp_op • OP_GTE exp_op
  101       | exp_op • OP_LTE exp_op
  102       | exp_op • OP_EQ exp_op
  103       | exp_op • OP_NEQ exp_op
  104       | exp_op • OP_AND exp_op
  105       | exp_op • OP_OR exp_op

    OP_ADD  desplazar e ir al estado 85
    OP_SUB  desplazar e ir al estado 86
    OP_MUL  desplazar e ir al estado 87
    OP_DIV  desplazar e ir al estado 88
    OP_MOD  desplazar e ir al estado 89
    OP_AND  desplazar e ir al estado 90
    OP_OR   desplazar e ir al estado 91
    OP_EQ   desplazar e ir al estado 92
    OP_NEQ  desplazar e ir al estado 93
    OP_GT   desplazar e ir al estado 94
    OP_LT   desplazar e ir al estado 95
    OP_GTE  desplazar e ir al estado 96
    OP_LTE  desplazar e ir al estado 97

    $default  reduce usando la regla 28 (rtrn)


Estado 166

   65 try_catch: TRY_KW LEFT_BRACKET • block RIGHT_BRACKET CATCH_KW LEFT_PARENT IDENTIFIER RIGHT_PARENT LEFT_BRACKET block RIGHT_BRACKET

    $default  reduce usando la regla 14 (block)

    block  ir al estado 183


Estado 167

   30 throw: THROW_KW IDENTIFIER • LEFT_PARENT STRING RIGHT_PARENT
   31      | THROW_KW IDENTIFIER • LEFT_PARENT RIGHT_PARENT

    LEFT_PARENT  desplazar e ir al estado 184


Estado 168

   17 block_line: block_exp EOL •

    $default  reduce usando la regla 17 (block_line)


Estado 169

   33 loop: while_exp std_blck_d •

    $default  reduce usando la regla 33 (loop)


Estado 170

   50 else_stmt: ELSE_KW • std_blck_d
   51 els_if_stmt: ELSE_KW • if_stmt

    IF_KW         desplazar e ir al estado 129
    LEFT_BRACKET  desplazar e ir al estado 30

    std_blck_d  ir al estado 185
    if_stmt     ir al estado 186


Estado 171

   46 if_els_stmt: if_stmt else_stmt •

    $default  reduce usando la regla 46 (if_els_stmt)


Estado 172

   47 if_els_stmt: if_stmt els_if_stmt •
   52 els_if_stmt: els_if_stmt • ELSE_KW if_stmt
   53            | els_if_stmt • else_stmt

    ELSE_KW  desplazar e ir al estado 187

    $default  reduce usando la regla 47 (if_els_stmt)

    else_stmt  ir al estado 188


Estado 173

   64 exception: try_catch FINALLY_KW • LEFT_BRACKET block RIGHT_BRACKET

    LEFT_BRACKET  desplazar e ir al estado 189


Estado 174

   74 param: IDENTIFIER COLON type OP_ASSIGN • exp_op

    TRUE_KW      desplazar e ir al estado 46
    FALSE_KW     desplazar e ir al estado 47
    OP_INC       desplazar e ir al estado 9
    OP_DEC       desplazar e ir al estado 10
    OP_SUB       desplazar e ir al estado 48
    OP_NOT       desplazar e ir al estado 49
    LEFT_PARENT  desplazar e ir al estado 50
    D_COLON      desplazar e ir al estado 11
    CHAR         desplazar e ir al estado 52
    STRING       desplazar e ir al estado 53
    NUM          desplazar e ir al estado 54
    NUM_DEC      desplazar e ir al estado 55
    IDENTIFIER   desplazar e ir al estado 12

    value_data   ir al estado 57
    var_value    ir al estado 58
    exp_op       ir al estado 190
    inc_dec      ir al estado 60
    ops_inc_dec  ir al estado 23
    func_call    ir al estado 61


Estado 175

   72 params_sec: param COMMA EOL params_sec •

    $default  reduce usando la regla 72 (params_sec)


Estado 176

   49 if_stmt: IF_KW LEFT_PARENT exp_op • $@2 RIGHT_PARENT std_blck_d
   92 exp_op: exp_op • OP_ADD exp_op
   93       | exp_op • OP_SUB exp_op
   94       | exp_op • OP_MUL exp_op
   95       | exp_op • OP_DIV exp_op
   96       | exp_op • OP_MOD exp_op
   98       | exp_op • OP_GT exp_op
   99       | exp_op • OP_LT exp_op
  100       | exp_op • OP_GTE exp_op
  101       | exp_op • OP_LTE exp_op
  102       | exp_op • OP_EQ exp_op
  103       | exp_op • OP_NEQ exp_op
  104       | exp_op • OP_AND exp_op
  105       | exp_op • OP_OR exp_op

    OP_ADD  desplazar e ir al estado 85
    OP_SUB  desplazar e ir al estado 86
    OP_MUL  desplazar e ir al estado 87
    OP_DIV  desplazar e ir al estado 88
    OP_MOD  desplazar e ir al estado 89
    OP_AND  desplazar e ir al estado 90
    OP_OR   desplazar e ir al estado 91
    OP_EQ   desplazar e ir al estado 92
    OP_NEQ  desplazar e ir al estado 93
    OP_GT   desplazar e ir al estado 94
    OP_LT   desplazar e ir al estado 95
    OP_GTE  desplazar e ir al estado 96
    OP_LTE  desplazar e ir al estado 97

    $default  reduce usando la regla 48 ($@2)

    $@2  ir al estado 191


Estado 177

   55 switch_stmt: SWITCH_KW LEFT_PARENT exp_op • RIGHT_PARENT LEFT_BRACKET EOL switch_block $@3 RIGHT_BRACKET
   56            | SWITCH_KW LEFT_PARENT exp_op • RIGHT_PARENT LEFT_BRACKET EOL RIGHT_BRACKET
   92 exp_op: exp_op • OP_ADD exp_op
   93       | exp_op • OP_SUB exp_op
   94       | exp_op • OP_MUL exp_op
   95       | exp_op • OP_DIV exp_op
   96       | exp_op • OP_MOD exp_op
   98       | exp_op • OP_GT exp_op
   99       | exp_op • OP_LT exp_op
  100       | exp_op • OP_GTE exp_op
  101       | exp_op • OP_LTE exp_op
  102       | exp_op • OP_EQ exp_op
  103       | exp_op • OP_NEQ exp_op
  104       | exp_op • OP_AND exp_op
  105       | exp_op • OP_OR exp_op

    OP_ADD        desplazar e ir al estado 85
    OP_SUB        desplazar e ir al estado 86
    OP_MUL        desplazar e ir al estado 87
    OP_DIV        desplazar e ir al estado 88
    OP_MOD        desplazar e ir al estado 89
    OP_AND        desplazar e ir al estado 90
    OP_OR         desplazar e ir al estado 91
    OP_EQ         desplazar e ir al estado 92
    OP_NEQ        desplazar e ir al estado 93
    OP_GT         desplazar e ir al estado 94
    OP_LT         desplazar e ir al estado 95
    OP_GTE        desplazar e ir al estado 96
    OP_LTE        desplazar e ir al estado 97
    RIGHT_PARENT  desplazar e ir al estado 192


Estado 178

   36 for_var: IDENTIFIER • OP_ASSIGN exp_op

    OP_ASSIGN  desplazar e ir al estado 193


Estado 179

   32 loop: FOR_KW LEFT_PARENT for_decl • RIGHT_PARENT std_blck_d

    RIGHT_PARENT  desplazar e ir al estado 194


Estado 180

   35 for_decl: for_var • COLON for_cond COLON for_sec

    COLON  desplazar e ir al estado 195


Estado 181

   42 while_exp: WHILE_KW LEFT_PARENT exp_op • RIGHT_PARENT
   92 exp_op: exp_op • OP_ADD exp_op
   93       | exp_op • OP_SUB exp_op
   94       | exp_op • OP_MUL exp_op
   95       | exp_op • OP_DIV exp_op
   96       | exp_op • OP_MOD exp_op
   98       | exp_op • OP_GT exp_op
   99       | exp_op • OP_LT exp_op
  100       | exp_op • OP_GTE exp_op
  101       | exp_op • OP_LTE exp_op
  102       | exp_op • OP_EQ exp_op
  103       | exp_op • OP_NEQ exp_op
  104       | exp_op • OP_AND exp_op
  105       | exp_op • OP_OR exp_op

    OP_ADD        desplazar e ir al estado 85
    OP_SUB        desplazar e ir al estado 86
    OP_MUL        desplazar e ir al estado 87
    OP_DIV        desplazar e ir al estado 88
    OP_MOD        desplazar e ir al estado 89
    OP_AND        desplazar e ir al estado 90
    OP_OR         desplazar e ir al estado 91
    OP_EQ         desplazar e ir al estado 92
    OP_NEQ        desplazar e ir al estado 93
    OP_GT         desplazar e ir al estado 94
    OP_LT         desplazar e ir al estado 95
    OP_GTE        desplazar e ir al estado 96
    OP_LTE        desplazar e ir al estado 97
    RIGHT_PARENT  desplazar e ir al estado 196


Estado 182

   34 loop: DO_KW std_blck_d while_exp •

    $default  reduce usando la regla 34 (loop)


Estado 183

   15 block: block • block_line
   65 try_catch: TRY_KW LEFT_BRACKET block • RIGHT_BRACKET CATCH_KW LEFT_PARENT IDENTIFIER RIGHT_PARENT LEFT_BRACKET block RIGHT_BRACKET

    CHAR_KW        desplazar e ir al estado 3
    INT_KW         desplazar e ir al estado 4
    FLOAT_KW       desplazar e ir al estado 5
    BOOL_KW        desplazar e ir al estado 6
    STRING_KW      desplazar e ir al estado 7
    IF_KW          desplazar e ir al estado 129
    SWITCH_KW      desplazar e ir al estado 130
    FOR_KW         desplazar e ir al estado 131
    WHILE_KW       desplazar e ir al estado 132
    DO_KW          desplazar e ir al estado 133
    BREAK_KW       desplazar e ir al estado 134
    RETURN_KW      desplazar e ir al estado 135
    TRY_KW         desplazar e ir al estado 136
    THROW_KW       desplazar e ir al estado 137
    OP_INC         desplazar e ir al estado 9
    OP_DEC         desplazar e ir al estado 10
    RIGHT_BRACKET  desplazar e ir al estado 197
    D_COLON        desplazar e ir al estado 11
    IDENTIFIER     desplazar e ir al estado 12
    EOL            desplazar e ir al estado 139

    block_line   ir al estado 140
    block_exp    ir al estado 141
    rtrn         ir al estado 142
    throw        ir al estado 143
    loop         ir al estado 144
    while_exp    ir al estado 145
    conditional  ir al estado 146
    if_els_stmt  ir al estado 147
    if_stmt      ir al estado 148
    switch_stmt  ir al estado 149
    exception    ir al estado 150
    try_catch    ir al estado 151
    instance     ir al estado 152
    inst_id      ir al estado 19
    type         ir al estado 20
    var_value    ir al estado 21
    inc_dec      ir al estado 153
    ops_inc_dec  ir al estado 23
    func_call    ir al estado 154
    asingn       ir al estado 155


Estado 184

   30 throw: THROW_KW IDENTIFIER LEFT_PARENT • STRING RIGHT_PARENT
   31      | THROW_KW IDENTIFIER LEFT_PARENT • RIGHT_PARENT

    RIGHT_PARENT  desplazar e ir al estado 198
    STRING        desplazar e ir al estado 199


Estado 185

   50 else_stmt: ELSE_KW std_blck_d •

    $default  reduce usando la regla 50 (else_stmt)


Estado 186

   51 els_if_stmt: ELSE_KW if_stmt •

    $default  reduce usando la regla 51 (els_if_stmt)


Estado 187

   50 else_stmt: ELSE_KW • std_blck_d
   52 els_if_stmt: els_if_stmt ELSE_KW • if_stmt

    IF_KW         desplazar e ir al estado 129
    LEFT_BRACKET  desplazar e ir al estado 30

    std_blck_d  ir al estado 185
    if_stmt     ir al estado 200


Estado 188

   53 els_if_stmt: els_if_stmt else_stmt •

    $default  reduce usando la regla 53 (els_if_stmt)


Estado 189

   64 exception: try_catch FINALLY_KW LEFT_BRACKET • block RIGHT_BRACKET

    $default  reduce usando la regla 14 (block)

    block  ir al estado 201


Estado 190

   74 param: IDENTIFIER COLON type OP_ASSIGN exp_op •
   92 exp_op: exp_op • OP_ADD exp_op
   93       | exp_op • OP_SUB exp_op
   94       | exp_op • OP_MUL exp_op
   95       | exp_op • OP_DIV exp_op
   96       | exp_op • OP_MOD exp_op
   98       | exp_op • OP_GT exp_op
   99       | exp_op • OP_LT exp_op
  100       | exp_op • OP_GTE exp_op
  101       | exp_op • OP_LTE exp_op
  102       | exp_op • OP_EQ exp_op
  103       | exp_op • OP_NEQ exp_op
  104       | exp_op • OP_AND exp_op
  105       | exp_op • OP_OR exp_op

    OP_ADD  desplazar e ir al estado 85
    OP_SUB  desplazar e ir al estado 86
    OP_MUL  desplazar e ir al estado 87
    OP_DIV  desplazar e ir al estado 88
    OP_MOD  desplazar e ir al estado 89
    OP_AND  desplazar e ir al estado 90
    OP_OR   desplazar e ir al estado 91
    OP_EQ   desplazar e ir al estado 92
    OP_NEQ  desplazar e ir al estado 93
    OP_GT   desplazar e ir al estado 94
    OP_LT   desplazar e ir al estado 95
    OP_GTE  desplazar e ir al estado 96
    OP_LTE  desplazar e ir al estado 97

    $default  reduce usando la regla 74 (param)


Estado 191

   49 if_stmt: IF_KW LEFT_PARENT exp_op $@2 • RIGHT_PARENT std_blck_d

    RIGHT_PARENT  desplazar e ir al estado 202


Estado 192

   55 switch_stmt: SWITCH_KW LEFT_PARENT exp_op RIGHT_PARENT • LEFT_BRACKET EOL switch_block $@3 RIGHT_BRACKET
   56            | SWITCH_KW LEFT_PARENT exp_op RIGHT_PARENT • LEFT_BRACKET EOL RIGHT_BRACKET

    LEFT_BRACKET  desplazar e ir al estado 203


Estado 193

   36 for_var: IDENTIFIER OP_ASSIGN • exp_op

    TRUE_KW      desplazar e ir al estado 46
    FALSE_KW     desplazar e ir al estado 47
    OP_INC       desplazar e ir al estado 9
    OP_DEC       desplazar e ir al estado 10
    OP_SUB       desplazar e ir al estado 48
    OP_NOT       desplazar e ir al estado 49
    LEFT_PARENT  desplazar e ir al estado 50
    D_COLON      desplazar e ir al estado 11
    CHAR         desplazar e ir al estado 52
    STRING       desplazar e ir al estado 53
    NUM          desplazar e ir al estado 54
    NUM_DEC      desplazar e ir al estado 55
    IDENTIFIER   desplazar e ir al estado 12

    value_data   ir al estado 57
    var_value    ir al estado 58
    exp_op       ir al estado 204
    inc_dec      ir al estado 60
    ops_inc_dec  ir al estado 23
    func_call    ir al estado 61


Estado 194

   32 loop: FOR_KW LEFT_PARENT for_decl RIGHT_PARENT • std_blck_d

    LEFT_BRACKET  desplazar e ir al estado 30

    std_blck_d  ir al estado 205


Estado 195

   35 for_decl: for_var COLON • for_cond COLON for_sec

    TRUE_KW      desplazar e ir al estado 46
    FALSE_KW     desplazar e ir al estado 47
    OP_INC       desplazar e ir al estado 9
    OP_DEC       desplazar e ir al estado 10
    OP_SUB       desplazar e ir al estado 48
    OP_NOT       desplazar e ir al estado 49
    LEFT_PARENT  desplazar e ir al estado 50
    D_COLON      desplazar e ir al estado 11
    CHAR         desplazar e ir al estado 52
    STRING       desplazar e ir al estado 53
    NUM          desplazar e ir al estado 54
    NUM_DEC      desplazar e ir al estado 55
    IDENTIFIER   desplazar e ir al estado 12

    for_cond     ir al estado 206
    value_data   ir al estado 57
    var_value    ir al estado 58
    exp_op       ir al estado 207
    inc_dec      ir al estado 60
    ops_inc_dec  ir al estado 23
    func_call    ir al estado 61


Estado 196

   42 while_exp: WHILE_KW LEFT_PARENT exp_op RIGHT_PARENT •

    $default  reduce usando la regla 42 (while_exp)


Estado 197

   65 try_catch: TRY_KW LEFT_BRACKET block RIGHT_BRACKET • CATCH_KW LEFT_PARENT IDENTIFIER RIGHT_PARENT LEFT_BRACKET block RIGHT_BRACKET

    CATCH_KW  desplazar e ir al estado 208


Estado 198

   31 throw: THROW_KW IDENTIFIER LEFT_PARENT RIGHT_PARENT •

    $default  reduce usando la regla 31 (throw)


Estado 199

   30 throw: THROW_KW IDENTIFIER LEFT_PARENT STRING • RIGHT_PARENT

    RIGHT_PARENT  desplazar e ir al estado 209


Estado 200

   52 els_if_stmt: els_if_stmt ELSE_KW if_stmt •

    $default  reduce usando la regla 52 (els_if_stmt)


Estado 201

   15 block: block • block_line
   64 exception: try_catch FINALLY_KW LEFT_BRACKET block • RIGHT_BRACKET

    CHAR_KW        desplazar e ir al estado 3
    INT_KW         desplazar e ir al estado 4
    FLOAT_KW       desplazar e ir al estado 5
    BOOL_KW        desplazar e ir al estado 6
    STRING_KW      desplazar e ir al estado 7
    IF_KW          desplazar e ir al estado 129
    SWITCH_KW      desplazar e ir al estado 130
    FOR_KW         desplazar e ir al estado 131
    WHILE_KW       desplazar e ir al estado 132
    DO_KW          desplazar e ir al estado 133
    BREAK_KW       desplazar e ir al estado 134
    RETURN_KW      desplazar e ir al estado 135
    TRY_KW         desplazar e ir al estado 136
    THROW_KW       desplazar e ir al estado 137
    OP_INC         desplazar e ir al estado 9
    OP_DEC         desplazar e ir al estado 10
    RIGHT_BRACKET  desplazar e ir al estado 210
    D_COLON        desplazar e ir al estado 11
    IDENTIFIER     desplazar e ir al estado 12
    EOL            desplazar e ir al estado 139

    block_line   ir al estado 140
    block_exp    ir al estado 141
    rtrn         ir al estado 142
    throw        ir al estado 143
    loop         ir al estado 144
    while_exp    ir al estado 145
    conditional  ir al estado 146
    if_els_stmt  ir al estado 147
    if_stmt      ir al estado 148
    switch_stmt  ir al estado 149
    exception    ir al estado 150
    try_catch    ir al estado 151
    instance     ir al estado 152
    inst_id      ir al estado 19
    type         ir al estado 20
    var_value    ir al estado 21
    inc_dec      ir al estado 153
    ops_inc_dec  ir al estado 23
    func_call    ir al estado 154
    asingn       ir al estado 155


Estado 202

   49 if_stmt: IF_KW LEFT_PARENT exp_op $@2 RIGHT_PARENT • std_blck_d

    LEFT_BRACKET  desplazar e ir al estado 30

    std_blck_d  ir al estado 211


Estado 203

   55 switch_stmt: SWITCH_KW LEFT_PARENT exp_op RIGHT_PARENT LEFT_BRACKET • EOL switch_block $@3 RIGHT_BRACKET
   56            | SWITCH_KW LEFT_PARENT exp_op RIGHT_PARENT LEFT_BRACKET • EOL RIGHT_BRACKET

    EOL  desplazar e ir al estado 212


Estado 204

   36 for_var: IDENTIFIER OP_ASSIGN exp_op •
   92 exp_op: exp_op • OP_ADD exp_op
   93       | exp_op • OP_SUB exp_op
   94       | exp_op • OP_MUL exp_op
   95       | exp_op • OP_DIV exp_op
   96       | exp_op • OP_MOD exp_op
   98       | exp_op • OP_GT exp_op
   99       | exp_op • OP_LT exp_op
  100       | exp_op • OP_GTE exp_op
  101       | exp_op • OP_LTE exp_op
  102       | exp_op • OP_EQ exp_op
  103       | exp_op • OP_NEQ exp_op
  104       | exp_op • OP_AND exp_op
  105       | exp_op • OP_OR exp_op

    OP_ADD  desplazar e ir al estado 85
    OP_SUB  desplazar e ir al estado 86
    OP_MUL  desplazar e ir al estado 87
    OP_DIV  desplazar e ir al estado 88
    OP_MOD  desplazar e ir al estado 89
    OP_AND  desplazar e ir al estado 90
    OP_OR   desplazar e ir al estado 91
    OP_EQ   desplazar e ir al estado 92
    OP_NEQ  desplazar e ir al estado 93
    OP_GT   desplazar e ir al estado 94
    OP_LT   desplazar e ir al estado 95
    OP_GTE  desplazar e ir al estado 96
    OP_LTE  desplazar e ir al estado 97

    $default  reduce usando la regla 36 (for_var)


Estado 205

   32 loop: FOR_KW LEFT_PARENT for_decl RIGHT_PARENT std_blck_d •

    $default  reduce usando la regla 32 (loop)


Estado 206

   35 for_decl: for_var COLON for_cond • COLON for_sec

    COLON  desplazar e ir al estado 213


Estado 207

   37 for_cond: exp_op •
   92 exp_op: exp_op • OP_ADD exp_op
   93       | exp_op • OP_SUB exp_op
   94       | exp_op • OP_MUL exp_op
   95       | exp_op • OP_DIV exp_op
   96       | exp_op • OP_MOD exp_op
   98       | exp_op • OP_GT exp_op
   99       | exp_op • OP_LT exp_op
  100       | exp_op • OP_GTE exp_op
  101       | exp_op • OP_LTE exp_op
  102       | exp_op • OP_EQ exp_op
  103       | exp_op • OP_NEQ exp_op
  104       | exp_op • OP_AND exp_op
  105       | exp_op • OP_OR exp_op

    OP_ADD  desplazar e ir al estado 85
    OP_SUB  desplazar e ir al estado 86
    OP_MUL  desplazar e ir al estado 87
    OP_DIV  desplazar e ir al estado 88
    OP_MOD  desplazar e ir al estado 89
    OP_AND  desplazar e ir al estado 90
    OP_OR   desplazar e ir al estado 91
    OP_EQ   desplazar e ir al estado 92
    OP_NEQ  desplazar e ir al estado 93
    OP_GT   desplazar e ir al estado 94
    OP_LT   desplazar e ir al estado 95
    OP_GTE  desplazar e ir al estado 96
    OP_LTE  desplazar e ir al estado 97

    $default  reduce usando la regla 37 (for_cond)


Estado 208

   65 try_catch: TRY_KW LEFT_BRACKET block RIGHT_BRACKET CATCH_KW • LEFT_PARENT IDENTIFIER RIGHT_PARENT LEFT_BRACKET block RIGHT_BRACKET

    LEFT_PARENT  desplazar e ir al estado 214


Estado 209

   30 throw: THROW_KW IDENTIFIER LEFT_PARENT STRING RIGHT_PARENT •

    $default  reduce usando la regla 30 (throw)


Estado 210

   64 exception: try_catch FINALLY_KW LEFT_BRACKET block RIGHT_BRACKET •

    $default  reduce usando la regla 64 (exception)


Estado 211

   49 if_stmt: IF_KW LEFT_PARENT exp_op $@2 RIGHT_PARENT std_blck_d •

    $default  reduce usando la regla 49 (if_stmt)


Estado 212

   55 switch_stmt: SWITCH_KW LEFT_PARENT exp_op RIGHT_PARENT LEFT_BRACKET EOL • switch_block $@3 RIGHT_BRACKET
   56            | SWITCH_KW LEFT_PARENT exp_op RIGHT_PARENT LEFT_BRACKET EOL • RIGHT_BRACKET

    CASE_KW        desplazar e ir al estado 215
    DEFAULT_KW     desplazar e ir al estado 216
    RIGHT_BRACKET  desplazar e ir al estado 217

    switch_block  ir al estado 218
    switch_line   ir al estado 219


Estado 213

   35 for_decl: for_var COLON for_cond COLON • for_sec

    OP_INC      desplazar e ir al estado 9
    OP_DEC      desplazar e ir al estado 10
    D_COLON     desplazar e ir al estado 11
    IDENTIFIER  desplazar e ir al estado 42

    for_sec      ir al estado 220
    for_iter     ir al estado 221
    var_value    ir al estado 21
    inc_dec      ir al estado 222
    ops_inc_dec  ir al estado 23
    asingn       ir al estado 223


Estado 214

   65 try_catch: TRY_KW LEFT_BRACKET block RIGHT_BRACKET CATCH_KW LEFT_PARENT • IDENTIFIER RIGHT_PARENT LEFT_BRACKET block RIGHT_BRACKET

    IDENTIFIER  desplazar e ir al estado 224


Estado 215

   60 switch_line: CASE_KW • exp_op COLON $@4 block

    TRUE_KW      desplazar e ir al estado 46
    FALSE_KW     desplazar e ir al estado 47
    OP_INC       desplazar e ir al estado 9
    OP_DEC       desplazar e ir al estado 10
    OP_SUB       desplazar e ir al estado 48
    OP_NOT       desplazar e ir al estado 49
    LEFT_PARENT  desplazar e ir al estado 50
    D_COLON      desplazar e ir al estado 11
    CHAR         desplazar e ir al estado 52
    STRING       desplazar e ir al estado 53
    NUM          desplazar e ir al estado 54
    NUM_DEC      desplazar e ir al estado 55
    IDENTIFIER   desplazar e ir al estado 12

    value_data   ir al estado 57
    var_value    ir al estado 58
    exp_op       ir al estado 225
    inc_dec      ir al estado 60
    ops_inc_dec  ir al estado 23
    func_call    ir al estado 61


Estado 216

   62 switch_line: DEFAULT_KW • COLON $@5 block

    COLON  desplazar e ir al estado 226


Estado 217

   56 switch_stmt: SWITCH_KW LEFT_PARENT exp_op RIGHT_PARENT LEFT_BRACKET EOL RIGHT_BRACKET •

    $default  reduce usando la regla 56 (switch_stmt)


Estado 218

   55 switch_stmt: SWITCH_KW LEFT_PARENT exp_op RIGHT_PARENT LEFT_BRACKET EOL switch_block • $@3 RIGHT_BRACKET
   58 switch_block: switch_block • switch_line

    CASE_KW     desplazar e ir al estado 215
    DEFAULT_KW  desplazar e ir al estado 216

    $default  reduce usando la regla 54 ($@3)

    $@3          ir al estado 227
    switch_line  ir al estado 228


Estado 219

   57 switch_block: switch_line •

    $default  reduce usando la regla 57 (switch_block)


Estado 220

   35 for_decl: for_var COLON for_cond COLON for_sec •

    $default  reduce usando la regla 35 (for_decl)


Estado 221

   38 for_sec: for_iter •
   39        | for_iter • COMMA for_sec

    COMMA  desplazar e ir al estado 229

    $default  reduce usando la regla 38 (for_sec)


Estado 222

   40 for_iter: inc_dec •

    $default  reduce usando la regla 40 (for_iter)


Estado 223

   41 for_iter: asingn •

    $default  reduce usando la regla 41 (for_iter)


Estado 224

   65 try_catch: TRY_KW LEFT_BRACKET block RIGHT_BRACKET CATCH_KW LEFT_PARENT IDENTIFIER • RIGHT_PARENT LEFT_BRACKET block RIGHT_BRACKET

    RIGHT_PARENT  desplazar e ir al estado 230


Estado 225

   60 switch_line: CASE_KW exp_op • COLON $@4 block
   92 exp_op: exp_op • OP_ADD exp_op
   93       | exp_op • OP_SUB exp_op
   94       | exp_op • OP_MUL exp_op
   95       | exp_op • OP_DIV exp_op
   96       | exp_op • OP_MOD exp_op
   98       | exp_op • OP_GT exp_op
   99       | exp_op • OP_LT exp_op
  100       | exp_op • OP_GTE exp_op
  101       | exp_op • OP_LTE exp_op
  102       | exp_op • OP_EQ exp_op
  103       | exp_op • OP_NEQ exp_op
  104       | exp_op • OP_AND exp_op
  105       | exp_op • OP_OR exp_op

    OP_ADD  desplazar e ir al estado 85
    OP_SUB  desplazar e ir al estado 86
    OP_MUL  desplazar e ir al estado 87
    OP_DIV  desplazar e ir al estado 88
    OP_MOD  desplazar e ir al estado 89
    OP_AND  desplazar e ir al estado 90
    OP_OR   desplazar e ir al estado 91
    OP_EQ   desplazar e ir al estado 92
    OP_NEQ  desplazar e ir al estado 93
    OP_GT   desplazar e ir al estado 94
    OP_LT   desplazar e ir al estado 95
    OP_GTE  desplazar e ir al estado 96
    OP_LTE  desplazar e ir al estado 97
    COLON   desplazar e ir al estado 231


Estado 226

   62 switch_line: DEFAULT_KW COLON • $@5 block

    $default  reduce usando la regla 61 ($@5)

    $@5  ir al estado 232


Estado 227

   55 switch_stmt: SWITCH_KW LEFT_PARENT exp_op RIGHT_PARENT LEFT_BRACKET EOL switch_block $@3 • RIGHT_BRACKET

    RIGHT_BRACKET  desplazar e ir al estado 233


Estado 228

   58 switch_block: switch_block switch_line •

    $default  reduce usando la regla 58 (switch_block)


Estado 229

   39 for_sec: for_iter COMMA • for_sec

    OP_INC      desplazar e ir al estado 9
    OP_DEC      desplazar e ir al estado 10
    D_COLON     desplazar e ir al estado 11
    IDENTIFIER  desplazar e ir al estado 42

    for_sec      ir al estado 234
    for_iter     ir al estado 221
    var_value    ir al estado 21
    inc_dec      ir al estado 222
    ops_inc_dec  ir al estado 23
    asingn       ir al estado 223


Estado 230

   65 try_catch: TRY_KW LEFT_BRACKET block RIGHT_BRACKET CATCH_KW LEFT_PARENT IDENTIFIER RIGHT_PARENT • LEFT_BRACKET block RIGHT_BRACKET

    LEFT_BRACKET  desplazar e ir al estado 235


Estado 231

   60 switch_line: CASE_KW exp_op COLON • $@4 block

    $default  reduce usando la regla 59 ($@4)

    $@4  ir al estado 236


Estado 232

   62 switch_line: DEFAULT_KW COLON $@5 • block

    $default  reduce usando la regla 14 (block)

    block  ir al estado 237


Estado 233

   55 switch_stmt: SWITCH_KW LEFT_PARENT exp_op RIGHT_PARENT LEFT_BRACKET EOL switch_block $@3 RIGHT_BRACKET •

    $default  reduce usando la regla 55 (switch_stmt)


Estado 234

   39 for_sec: for_iter COMMA for_sec •

    $default  reduce usando la regla 39 (for_sec)


Estado 235

   65 try_catch: TRY_KW LEFT_BRACKET block RIGHT_BRACKET CATCH_KW LEFT_PARENT IDENTIFIER RIGHT_PARENT LEFT_BRACKET • block RIGHT_BRACKET

    $default  reduce usando la regla 14 (block)

    block  ir al estado 238


Estado 236

   60 switch_line: CASE_KW exp_op COLON $@4 • block

    $default  reduce usando la regla 14 (block)

    block  ir al estado 239


Estado 237

   15 block: block • block_line
   62 switch_line: DEFAULT_KW COLON $@5 block •

    CHAR_KW     desplazar e ir al estado 3
    INT_KW      desplazar e ir al estado 4
    FLOAT_KW    desplazar e ir al estado 5
    BOOL_KW     desplazar e ir al estado 6
    STRING_KW   desplazar e ir al estado 7
    IF_KW       desplazar e ir al estado 129
    SWITCH_KW   desplazar e ir al estado 130
    FOR_KW      desplazar e ir al estado 131
    WHILE_KW    desplazar e ir al estado 132
    DO_KW       desplazar e ir al estado 133
    BREAK_KW    desplazar e ir al estado 134
    RETURN_KW   desplazar e ir al estado 135
    TRY_KW      desplazar e ir al estado 136
    THROW_KW    desplazar e ir al estado 137
    OP_INC      desplazar e ir al estado 9
    OP_DEC      desplazar e ir al estado 10
    D_COLON     desplazar e ir al estado 11
    IDENTIFIER  desplazar e ir al estado 12
    EOL         desplazar e ir al estado 139

    $default  reduce usando la regla 62 (switch_line)

    block_line   ir al estado 140
    block_exp    ir al estado 141
    rtrn         ir al estado 142
    throw        ir al estado 143
    loop         ir al estado 144
    while_exp    ir al estado 145
    conditional  ir al estado 146
    if_els_stmt  ir al estado 147
    if_stmt      ir al estado 148
    switch_stmt  ir al estado 149
    exception    ir al estado 150
    try_catch    ir al estado 151
    instance     ir al estado 152
    inst_id      ir al estado 19
    type         ir al estado 20
    var_value    ir al estado 21
    inc_dec      ir al estado 153
    ops_inc_dec  ir al estado 23
    func_call    ir al estado 154
    asingn       ir al estado 155


Estado 238

   15 block: block • block_line
   65 try_catch: TRY_KW LEFT_BRACKET block RIGHT_BRACKET CATCH_KW LEFT_PARENT IDENTIFIER RIGHT_PARENT LEFT_BRACKET block • RIGHT_BRACKET

    CHAR_KW        desplazar e ir al estado 3
    INT_KW         desplazar e ir al estado 4
    FLOAT_KW       desplazar e ir al estado 5
    BOOL_KW        desplazar e ir al estado 6
    STRING_KW      desplazar e ir al estado 7
    IF_KW          desplazar e ir al estado 129
    SWITCH_KW      desplazar e ir al estado 130
    FOR_KW         desplazar e ir al estado 131
    WHILE_KW       desplazar e ir al estado 132
    DO_KW          desplazar e ir al estado 133
    BREAK_KW       desplazar e ir al estado 134
    RETURN_KW      desplazar e ir al estado 135
    TRY_KW         desplazar e ir al estado 136
    THROW_KW       desplazar e ir al estado 137
    OP_INC         desplazar e ir al estado 9
    OP_DEC         desplazar e ir al estado 10
    RIGHT_BRACKET  desplazar e ir al estado 240
    D_COLON        desplazar e ir al estado 11
    IDENTIFIER     desplazar e ir al estado 12
    EOL            desplazar e ir al estado 139

    block_line   ir al estado 140
    block_exp    ir al estado 141
    rtrn         ir al estado 142
    throw        ir al estado 143
    loop         ir al estado 144
    while_exp    ir al estado 145
    conditional  ir al estado 146
    if_els_stmt  ir al estado 147
    if_stmt      ir al estado 148
    switch_stmt  ir al estado 149
    exception    ir al estado 150
    try_catch    ir al estado 151
    instance     ir al estado 152
    inst_id      ir al estado 19
    type         ir al estado 20
    var_value    ir al estado 21
    inc_dec      ir al estado 153
    ops_inc_dec  ir al estado 23
    func_call    ir al estado 154
    asingn       ir al estado 155


Estado 239

   15 block: block • block_line
   60 switch_line: CASE_KW exp_op COLON $@4 block •

    CHAR_KW     desplazar e ir al estado 3
    INT_KW      desplazar e ir al estado 4
    FLOAT_KW    desplazar e ir al estado 5
    BOOL_KW     desplazar e ir al estado 6
    STRING_KW   desplazar e ir al estado 7
    IF_KW       desplazar e ir al estado 129
    SWITCH_KW   desplazar e ir al estado 130
    FOR_KW      desplazar e ir al estado 131
    WHILE_KW    desplazar e ir al estado 132
    DO_KW       desplazar e ir al estado 133
    BREAK_KW    desplazar e ir al estado 134
    RETURN_KW   desplazar e ir al estado 135
    TRY_KW      desplazar e ir al estado 136
    THROW_KW    desplazar e ir al estado 137
    OP_INC      desplazar e ir al estado 9
    OP_DEC      desplazar e ir al estado 10
    D_COLON     desplazar e ir al estado 11
    IDENTIFIER  desplazar e ir al estado 12
    EOL         desplazar e ir al estado 139

    $default  reduce usando la regla 60 (switch_line)

    block_line   ir al estado 140
    block_exp    ir al estado 141
    rtrn         ir al estado 142
    throw        ir al estado 143
    loop         ir al estado 144
    while_exp    ir al estado 145
    conditional  ir al estado 146
    if_els_stmt  ir al estado 147
    if_stmt      ir al estado 148
    switch_stmt  ir al estado 149
    exception    ir al estado 150
    try_catch    ir al estado 151
    instance     ir al estado 152
    inst_id      ir al estado 19
    type         ir al estado 20
    var_value    ir al estado 21
    inc_dec      ir al estado 153
    ops_inc_dec  ir al estado 23
    func_call    ir al estado 154
    asingn       ir al estado 155


Estado 240

   65 try_catch: TRY_KW LEFT_BRACKET block RIGHT_BRACKET CATCH_KW LEFT_PARENT IDENTIFIER RIGHT_PARENT LEFT_BRACKET block RIGHT_BRACKET •

    $default  reduce usando la regla 65 (try_catch)
